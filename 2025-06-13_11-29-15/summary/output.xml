<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 7.3 (Python 3.12.3 on linux)" generated="2025-06-13T11:40:14.941199" rpa="false" schemaversion="5">
<suite id="s1" name="Basic Pub Sub &amp; Message Validation &amp; Multi Pub Sub &amp; Network Crash &amp; Pub Crash &amp; Sub Crash &amp; Sub Send Crash">
<suite id="s1-s1" name="Basic Pub Sub" source="/home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/basic_pub_sub/robottests/basic_pub_sub.robot">
<kw name="Init Test Context" type="SETUP">
<kw name="Set Test Context" owner="GlobalPathsLibrary">
<arg>basic_pub_sub</arg>
<arg>basic_pub_sub</arg>
<doc>Sets the test folder (e.g. basic_pub_sub or message_validation) and tag prefix (e.g. basic_pub_sub).
Should be called once in Suite Setup if you're using non-default test cases.</doc>
<status status="PASS" start="2025-06-13T11:40:15.061851" elapsed="0.000178"/>
</kw>
<kw name="Get Build Script Path" owner="GlobalPathsLibrary">
<msg time="2025-06-13T11:40:15.062249" level="INFO">${build} = /home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/basic_pub_sub/scripts/build_images.sh</msg>
<var>${build}</var>
<status status="PASS" start="2025-06-13T11:40:15.062141" elapsed="0.000133"/>
</kw>
<kw name="Get Network Name" owner="GlobalPathsLibrary">
<msg time="2025-06-13T11:40:15.062441" level="INFO">${net} = ecal_test_net</msg>
<var>${net}</var>
<status status="PASS" start="2025-06-13T11:40:15.062356" elapsed="0.000105"/>
</kw>
<kw name="Get Build Script Args" owner="GlobalPathsLibrary">
<msg time="2025-06-13T11:40:15.062609" level="INFO">${args} = ['basic_pub_sub']</msg>
<var>${args}</var>
<status status="PASS" start="2025-06-13T11:40:15.062525" elapsed="0.000101"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-06-13T11:40:15.062894" level="INFO">${BUILD_SCRIPT} = /home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/basic_pub_sub/scripts/build_images.sh</msg>
<arg>${BUILD_SCRIPT}</arg>
<arg>${build}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-06-13T11:40:15.062703" elapsed="0.000227"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-06-13T11:40:15.063144" level="INFO">${NETWORK} = ecal_test_net</msg>
<arg>${NETWORK}</arg>
<arg>${net}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-06-13T11:40:15.063016" elapsed="0.000157"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>[SETUP] Building Docker image...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-13T11:40:15.063241" elapsed="0.000094"/>
</kw>
<kw name="Run Process" owner="Process">
<msg time="2025-06-13T11:40:15.063626" level="INFO">Starting process:
/home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/basic_pub_sub/scripts/build_images.sh basic_pub_sub</msg>
<msg time="2025-06-13T11:40:15.064049" level="INFO">Waiting for process to complete.</msg>
<msg time="2025-06-13T11:40:30.287669" level="INFO">Process completed.</msg>
<msg time="2025-06-13T11:40:30.287873" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<var>${result}</var>
<arg>${BUILD_SCRIPT}</arg>
<arg>@{args}</arg>
<doc>Runs a process and waits for it to complete.</doc>
<status status="PASS" start="2025-06-13T11:40:15.063439" elapsed="15.224478"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-06-13T11:40:30.288568" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${result.rc}</arg>
<arg>0</arg>
<arg>Failed to build Docker image!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-06-13T11:40:30.288068" elapsed="0.000560"/>
</kw>
<kw name="Create Docker Network" owner="MyDockerLibrary">
<arg>${NETWORK}</arg>
<status status="PASS" start="2025-06-13T11:40:30.288728" elapsed="0.045883"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-06-13T11:40:33.335105" level="INFO">Slept 3 seconds.</msg>
<arg>3s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-06-13T11:40:30.334773" elapsed="3.000473"/>
</kw>
<status status="PASS" start="2025-06-13T11:40:15.061395" elapsed="18.273962"/>
</kw>
<test id="s1-s1-t1" name="Basic Pub/Sub Local SHM" line="26">
<kw name="Run Local Pub Sub Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-13T11:40:33.336545" level="INFO">${IMAGE} = basic_pub_sub_local_shm</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-13T11:40:33.336377" elapsed="0.000190"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-13T11:40:33.336764" level="INFO">${CONTAINER} = basic_local_local_shm</msg>
<var>${CONTAINER}</var>
<arg>basic_local_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-13T11:40:33.336648" elapsed="0.000134"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Running local pub/sub test in mode: ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-13T11:40:33.336890" elapsed="0.000143"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<arg>${IMAGE}</arg>
<arg>local</arg>
<arg>${layer_tag}</arg>
<arg>test_topic</arg>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-06-13T11:40:33.337112" elapsed="0.128931"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-06-13T11:40:48.532523" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-06-13T11:40:33.466271" elapsed="15.066328"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-06-13T11:40:48.533099" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Local communication test failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-06-13T11:40:48.532842" elapsed="0.000319"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-06-13T11:40:48.536059" level="INFO">${logs} = [Entrypoint] Starting subscriber and publisher in mode local_shm
Shared memory monitoring is enabled (domain: ecal_mon - queue size: 1024)
[Publisher] Waiting for at least 1 subscriber(s) on topic: te...</msg>
<var>${logs}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-06-13T11:40:48.533273" elapsed="0.002812"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[CONTAINER LOG: LOCAL PUB+SUB]\n${logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-13T11:40:48.536182" elapsed="0.000158"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Basic Pub/Sub Local ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-06-13T11:40:48.536441" elapsed="0.000175"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-06-13T11:40:48.536717" elapsed="0.007545"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-06-13T11:40:49.544602" level="INFO">Slept 1 second.</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-06-13T11:40:48.544350" elapsed="1.000364"/>
</kw>
<arg>local_shm</arg>
<status status="PASS" start="2025-06-13T11:40:33.336092" elapsed="16.208738"/>
</kw>
<tag>basic_pub_sub_local_shm</tag>
<status status="PASS" start="2025-06-13T11:40:33.335455" elapsed="16.209526"/>
</test>
<test id="s1-s1-t2" name="Basic Pub/Sub Local UDP" line="30">
<kw name="Run Local Pub Sub Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-13T11:40:49.546406" level="INFO">${IMAGE} = basic_pub_sub_local_udp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-13T11:40:49.546257" elapsed="0.000169"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-13T11:40:49.546682" level="INFO">${CONTAINER} = basic_local_local_udp</msg>
<var>${CONTAINER}</var>
<arg>basic_local_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-13T11:40:49.546567" elapsed="0.000133"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Running local pub/sub test in mode: ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-13T11:40:49.546770" elapsed="0.000146"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<arg>${IMAGE}</arg>
<arg>local</arg>
<arg>${layer_tag}</arg>
<arg>test_topic</arg>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-06-13T11:40:49.547033" elapsed="0.117344"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-06-13T11:41:04.726857" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-06-13T11:40:49.664649" elapsed="15.062253"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-06-13T11:41:04.727300" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Local communication test failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-06-13T11:41:04.727081" elapsed="0.000298"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-06-13T11:41:04.730050" level="INFO">${logs} = [Entrypoint] Starting subscriber and publisher in mode local_udp
[Publisher] Waiting for at least 1 subscriber(s) on topic: test_topic
[Subscriber] Registering callback and waiting for messages...
[Pu...</msg>
<var>${logs}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-06-13T11:41:04.727491" elapsed="0.002585"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[CONTAINER LOG: LOCAL PUB+SUB]\n${logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-13T11:41:04.730163" elapsed="0.000147"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Basic Pub/Sub Local ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-06-13T11:41:04.730410" elapsed="0.000214"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-06-13T11:41:04.730721" elapsed="0.005032"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-06-13T11:41:05.736093" level="INFO">Slept 1 second.</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-06-13T11:41:04.735865" elapsed="1.000356"/>
</kw>
<arg>local_udp</arg>
<status status="PASS" start="2025-06-13T11:40:49.546024" elapsed="16.190290"/>
</kw>
<tag>basic_pub_sub_local_udp</tag>
<status status="PASS" start="2025-06-13T11:40:49.545595" elapsed="16.190878"/>
</test>
<test id="s1-s1-t3" name="Basic Pub/Sub Local TCP" line="34">
<kw name="Run Local Pub Sub Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-13T11:41:05.738188" level="INFO">${IMAGE} = basic_pub_sub_local_tcp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-13T11:41:05.738013" elapsed="0.000197"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-13T11:41:05.738404" level="INFO">${CONTAINER} = basic_local_local_tcp</msg>
<var>${CONTAINER}</var>
<arg>basic_local_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-13T11:41:05.738292" elapsed="0.000129"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Running local pub/sub test in mode: ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-13T11:41:05.738492" elapsed="0.000139"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<arg>${IMAGE}</arg>
<arg>local</arg>
<arg>${layer_tag}</arg>
<arg>test_topic</arg>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-06-13T11:41:05.738723" elapsed="0.121213"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-06-13T11:41:20.927894" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-06-13T11:41:05.860147" elapsed="15.067808"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-06-13T11:41:20.928337" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Local communication test failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-06-13T11:41:20.928129" elapsed="0.000258"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-06-13T11:41:20.931249" level="INFO">${logs} = [Entrypoint] Starting subscriber and publisher in mode local_tcp
[Subscriber] Registering callback and waiting for messages...
[Publisher] Waiting for at least 1 subscriber(s) on topic: test_topic
174...</msg>
<var>${logs}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-06-13T11:41:20.928491" elapsed="0.002783"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[CONTAINER LOG: LOCAL PUB+SUB]\n${logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-13T11:41:20.931372" elapsed="0.000159"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Basic Pub/Sub Local ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-06-13T11:41:20.931632" elapsed="0.000156"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-06-13T11:41:20.931920" elapsed="0.005821"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-06-13T11:41:21.938120" level="INFO">Slept 1 second.</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-06-13T11:41:20.937860" elapsed="1.000387"/>
</kw>
<arg>local_tcp</arg>
<status status="PASS" start="2025-06-13T11:41:05.737703" elapsed="16.200639"/>
</kw>
<tag>basic_pub_sub_local_tcp</tag>
<status status="PASS" start="2025-06-13T11:41:05.737233" elapsed="16.201249"/>
</test>
<test id="s1-s1-t4" name="Basic Pub/Sub Network UDP" line="38">
<kw name="Run Network Pub Sub Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-13T11:41:21.940035" level="INFO">${IMAGE} = basic_pub_sub_network_udp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-13T11:41:21.939879" elapsed="0.000177"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-13T11:41:21.940236" level="INFO">${TOPIC} = topic_network_udp</msg>
<var>${TOPIC}</var>
<arg>topic_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-13T11:41:21.940130" elapsed="0.000123"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-13T11:41:21.940422" level="INFO">${SUB_NAME} = sub_network_udp</msg>
<var>${SUB_NAME}</var>
<arg>sub_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-13T11:41:21.940319" elapsed="0.000119"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-13T11:41:21.940603" level="INFO">${PUB_NAME} = pub_network_udp</msg>
<var>${PUB_NAME}</var>
<arg>pub_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-13T11:41:21.940502" elapsed="0.000117"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Running network pub/sub test in mode: ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-13T11:41:21.940748" elapsed="0.000163"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${SUB_NAME}</arg>
<arg>${IMAGE}</arg>
<arg>subscriber</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${SUB_NAME}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-06-13T11:41:21.941001" elapsed="0.134562"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${PUB_NAME}</arg>
<arg>${IMAGE}</arg>
<arg>publisher</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${PUB_NAME}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-06-13T11:41:22.075749" elapsed="0.121390"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-06-13T11:41:37.147749" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>${SUB_NAME}</arg>
<status status="PASS" start="2025-06-13T11:41:22.197366" elapsed="14.950470"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-06-13T11:41:37.148348" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Subscriber failed in ${layer_tag}!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-06-13T11:41:37.148056" elapsed="0.000364"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-06-13T11:41:37.151746" level="INFO">${log_sub} = [Entrypoint] Starting subscriber in mode network_udp
[Subscriber] Registering callback and waiting for messages...
[Subscriber] Received value: 42
[Subscriber] Received value: 42
[Subscriber] Received...</msg>
<var>${log_sub}</var>
<arg>${SUB_NAME}</arg>
<status status="PASS" start="2025-06-13T11:41:37.148589" elapsed="0.003186"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-06-13T11:41:37.154126" level="INFO">${log_pub} = [Entrypoint] Starting publisher in mode network_udp
[Publisher] Waiting for at least 1 subscriber(s) on topic: topic_network_udp
[Publisher] Found 1 subscriber(s). Proceeding to send messages.
[Publis...</msg>
<var>${log_pub}</var>
<arg>${PUB_NAME}</arg>
<status status="PASS" start="2025-06-13T11:41:37.151913" elapsed="0.002240"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[CONTAINER LOG: SUBSCRIBER]\n${log_sub}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-13T11:41:37.154261" elapsed="0.000171"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[CONTAINER LOG: PUBLISHER]\n${log_pub}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-13T11:41:37.154539" elapsed="0.000155"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Basic Pub/Sub Network ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-06-13T11:41:37.154840" elapsed="0.000206"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${SUB_NAME}</arg>
<status status="PASS" start="2025-06-13T11:41:37.155149" elapsed="0.005504"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${PUB_NAME}</arg>
<status status="PASS" start="2025-06-13T11:41:37.160761" elapsed="0.005284"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-06-13T11:41:38.166374" level="INFO">Slept 1 second.</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-06-13T11:41:37.166145" elapsed="1.000351"/>
</kw>
<arg>network_udp</arg>
<arg>network</arg>
<status status="PASS" start="2025-06-13T11:41:21.939608" elapsed="16.226993"/>
</kw>
<tag>basic_pub_sub_network_udp</tag>
<status status="PASS" start="2025-06-13T11:41:21.939201" elapsed="16.227538"/>
</test>
<test id="s1-s1-t5" name="Basic Pub/Sub Network TCP" line="42">
<kw name="Run Network Pub Sub Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-13T11:41:38.168427" level="INFO">${IMAGE} = basic_pub_sub_network_tcp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-13T11:41:38.168280" elapsed="0.000167"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-13T11:41:38.168626" level="INFO">${TOPIC} = topic_network_tcp</msg>
<var>${TOPIC}</var>
<arg>topic_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-13T11:41:38.168518" elapsed="0.000125"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-13T11:41:38.168835" level="INFO">${SUB_NAME} = sub_network_tcp</msg>
<var>${SUB_NAME}</var>
<arg>sub_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-13T11:41:38.168710" elapsed="0.000145"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-13T11:41:38.169024" level="INFO">${PUB_NAME} = pub_network_tcp</msg>
<var>${PUB_NAME}</var>
<arg>pub_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-13T11:41:38.168922" elapsed="0.000118"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Running network pub/sub test in mode: ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-13T11:41:38.169104" elapsed="0.000118"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${SUB_NAME}</arg>
<arg>${IMAGE}</arg>
<arg>subscriber</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${SUB_NAME}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-06-13T11:41:38.169320" elapsed="0.132893"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${PUB_NAME}</arg>
<arg>${IMAGE}</arg>
<arg>publisher</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${PUB_NAME}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-06-13T11:41:38.302435" elapsed="0.122345"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-06-13T11:41:53.381409" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>${SUB_NAME}</arg>
<status status="PASS" start="2025-06-13T11:41:38.424994" elapsed="14.956461"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-06-13T11:41:53.382023" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Subscriber failed in ${layer_tag}!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-06-13T11:41:53.381627" elapsed="0.000481"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-06-13T11:41:53.385183" level="INFO">${log_sub} = [Entrypoint] Starting subscriber in mode network_tcp
[Subscriber] Registering callback and waiting for messages...
[Subscriber] Received value: 42
[Subscriber] Received value: 42
[Subscriber] Received...</msg>
<var>${log_sub}</var>
<arg>${SUB_NAME}</arg>
<status status="PASS" start="2025-06-13T11:41:53.382238" elapsed="0.002972"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-06-13T11:41:53.387356" level="INFO">${log_pub} = [Entrypoint] Starting publisher in mode network_tcp
[Publisher] Waiting for at least 1 subscriber(s) on topic: topic_network_tcp
1749814899304 ms | 1e4cc064b931 | pub_network_tcp | 7 | info | CTCPRead...</msg>
<var>${log_pub}</var>
<arg>${PUB_NAME}</arg>
<status status="PASS" start="2025-06-13T11:41:53.385293" elapsed="0.002089"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[CONTAINER LOG: SUBSCRIBER]\n${log_sub}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-13T11:41:53.387467" elapsed="0.000151"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[CONTAINER LOG: PUBLISHER]\n${log_pub}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-13T11:41:53.387767" elapsed="0.000172"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Basic Pub/Sub Network ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-06-13T11:41:53.388042" elapsed="0.000155"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${SUB_NAME}</arg>
<status status="PASS" start="2025-06-13T11:41:53.388296" elapsed="0.004938"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${PUB_NAME}</arg>
<status status="PASS" start="2025-06-13T11:41:53.393318" elapsed="0.005228"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-06-13T11:41:54.398860" level="INFO">Slept 1 second.</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-06-13T11:41:53.398633" elapsed="1.000340"/>
</kw>
<arg>network_tcp</arg>
<arg>network</arg>
<status status="PASS" start="2025-06-13T11:41:38.168042" elapsed="16.231013"/>
</kw>
<tag>basic_pub_sub_network_tcp</tag>
<status status="PASS" start="2025-06-13T11:41:38.167616" elapsed="16.231553"/>
</test>
<status status="PASS" start="2025-06-13T11:40:14.960978" elapsed="99.439262"/>
</suite>
<suite id="s1-s2" name="Message Validation" source="/home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/message_validation/robottests/message_validation.robot">
<kw name="Init Test Context" type="SETUP">
<kw name="Set Test Context" owner="GlobalPathsLibrary">
<arg>message_validation</arg>
<arg>message_validation</arg>
<doc>Sets the test folder (e.g. basic_pub_sub or message_validation) and tag prefix (e.g. basic_pub_sub).
Should be called once in Suite Setup if you're using non-default test cases.</doc>
<status status="PASS" start="2025-06-13T11:41:54.403585" elapsed="0.000112"/>
</kw>
<kw name="Get Build Script Path" owner="GlobalPathsLibrary">
<msg time="2025-06-13T11:41:54.403900" level="INFO">${build} = /home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/message_validation/scripts/build_images.sh</msg>
<var>${build}</var>
<status status="PASS" start="2025-06-13T11:41:54.403775" elapsed="0.000146"/>
</kw>
<kw name="Get Network Name" owner="GlobalPathsLibrary">
<msg time="2025-06-13T11:41:54.404064" level="INFO">${net} = ecal_test_net</msg>
<var>${net}</var>
<status status="PASS" start="2025-06-13T11:41:54.403986" elapsed="0.000096"/>
</kw>
<kw name="Get Build Script Args" owner="GlobalPathsLibrary">
<msg time="2025-06-13T11:41:54.404224" level="INFO">${args} = ['message_validation']</msg>
<var>${args}</var>
<status status="PASS" start="2025-06-13T11:41:54.404141" elapsed="0.000101"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-06-13T11:41:54.404444" level="INFO">${BUILD_SCRIPT} = /home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/message_validation/scripts/build_images.sh</msg>
<arg>${BUILD_SCRIPT}</arg>
<arg>${build}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-06-13T11:41:54.404315" elapsed="0.000157"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-06-13T11:41:54.404654" level="INFO">${NETWORK} = ecal_test_net</msg>
<arg>${NETWORK}</arg>
<arg>${net}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-06-13T11:41:54.404542" elapsed="0.000138"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>[SETUP] Building Docker images...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-13T11:41:54.404745" elapsed="0.000122"/>
</kw>
<kw name="Run Process" owner="Process">
<msg time="2025-06-13T11:41:54.405106" level="INFO">Starting process:
/home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/message_validation/scripts/build_images.sh message_validation</msg>
<msg time="2025-06-13T11:41:54.405557" level="INFO">Waiting for process to complete.</msg>
<msg time="2025-06-13T11:41:55.057579" level="INFO">Process completed.</msg>
<msg time="2025-06-13T11:41:55.057777" level="INFO">${result} = &lt;result object with rc 1&gt;</msg>
<var>${result}</var>
<arg>${BUILD_SCRIPT}</arg>
<arg>@{args}</arg>
<doc>Runs a process and waits for it to complete.</doc>
<status status="PASS" start="2025-06-13T11:41:54.404952" elapsed="0.652925"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-06-13T11:41:55.058721" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg time="2025-06-13T11:41:55.058986" level="FAIL">Docker build failed!: 1 != 0</msg>
<arg>${result.rc}</arg>
<arg>0</arg>
<arg>Docker build failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="FAIL" start="2025-06-13T11:41:55.058092" elapsed="0.001068">Docker build failed!: 1 != 0</status>
</kw>
<kw name="Create Docker Network" owner="MyDockerLibrary">
<arg>${NETWORK}</arg>
<status status="NOT RUN" start="2025-06-13T11:41:55.059286" elapsed="0.000019"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<arg>3s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" start="2025-06-13T11:41:55.059393" elapsed="0.000022"/>
</kw>
<status status="FAIL" start="2025-06-13T11:41:54.403437" elapsed="0.656088">Docker build failed!: 1 != 0</status>
</kw>
<test id="s1-s2-t1" name="Valid Protobuf Transmission" line="14">
<tag>message_validation_valid</tag>
<status status="FAIL" start="2025-06-13T11:41:55.059621" elapsed="0.000485">Parent suite setup failed:
Docker build failed!: 1 != 0</status>
</test>
<test id="s1-s2-t2" name="Malformed Protobuf Transmission" line="19">
<tag>message_validation_malformed</tag>
<status status="FAIL" start="2025-06-13T11:41:55.060340" elapsed="0.000240">Parent suite setup failed:
Docker build failed!: 1 != 0</status>
</test>
<status status="FAIL" start="2025-06-13T11:41:54.400968" elapsed="0.660005">Suite setup failed:
Docker build failed!: 1 != 0</status>
</suite>
<suite id="s1-s3" name="Multi Pub Sub" source="/home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/multi_pub_sub/robottests/multi_pub_sub.robot">
<kw name="Init Test Context" type="SETUP">
<kw name="Set Test Context" owner="GlobalPathsLibrary">
<arg>multi_pub_sub</arg>
<arg>multi_pub_sub</arg>
<doc>Sets the test folder (e.g. basic_pub_sub or message_validation) and tag prefix (e.g. basic_pub_sub).
Should be called once in Suite Setup if you're using non-default test cases.</doc>
<status status="PASS" start="2025-06-13T11:41:55.064460" elapsed="0.000107"/>
</kw>
<kw name="Get Build Script Path" owner="GlobalPathsLibrary">
<msg time="2025-06-13T11:41:55.064734" level="INFO">${build} = /home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/multi_pub_sub/scripts/build_images.sh</msg>
<var>${build}</var>
<status status="PASS" start="2025-06-13T11:41:55.064646" elapsed="0.000108"/>
</kw>
<kw name="Get Network Name" owner="GlobalPathsLibrary">
<msg time="2025-06-13T11:41:55.064935" level="INFO">${net} = ecal_test_net</msg>
<var>${net}</var>
<status status="PASS" start="2025-06-13T11:41:55.064847" elapsed="0.000107"/>
</kw>
<kw name="Get Build Script Args" owner="GlobalPathsLibrary">
<msg time="2025-06-13T11:41:55.065098" level="INFO">${args} = ['multi_pub_sub']</msg>
<var>${args}</var>
<status status="PASS" start="2025-06-13T11:41:55.065019" elapsed="0.000102"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-06-13T11:41:55.065334" level="INFO">${BUILD_SCRIPT} = /home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/multi_pub_sub/scripts/build_images.sh</msg>
<arg>${BUILD_SCRIPT}</arg>
<arg>${build}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-06-13T11:41:55.065196" elapsed="0.000167"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-06-13T11:41:55.065599" level="INFO">${NETWORK} = ecal_test_net</msg>
<arg>${NETWORK}</arg>
<arg>${net}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-06-13T11:41:55.065477" elapsed="0.000152"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>[SETUP] Building Docker image...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-13T11:41:55.065697" elapsed="0.000099"/>
</kw>
<kw name="Run Process" owner="Process">
<msg time="2025-06-13T11:41:55.066062" level="INFO">Starting process:
/home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/multi_pub_sub/scripts/build_images.sh multi_pub_sub</msg>
<msg time="2025-06-13T11:41:55.066393" level="INFO">Waiting for process to complete.</msg>
<msg time="2025-06-13T11:42:04.680027" level="INFO">Process completed.</msg>
<msg time="2025-06-13T11:42:04.680196" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<var>${result}</var>
<arg>${BUILD_SCRIPT}</arg>
<arg>@{args}</arg>
<doc>Runs a process and waits for it to complete.</doc>
<status status="PASS" start="2025-06-13T11:41:55.065910" elapsed="9.614312"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-06-13T11:42:04.680901" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${result.rc}</arg>
<arg>0</arg>
<arg>Failed to build Docker image!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-06-13T11:42:04.680374" elapsed="0.000583"/>
</kw>
<kw name="Create Docker Network" owner="MyDockerLibrary">
<arg>${NETWORK}</arg>
<status status="PASS" start="2025-06-13T11:42:04.681059" elapsed="0.007108"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-06-13T11:42:07.688524" level="INFO">Slept 3 seconds.</msg>
<arg>3s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-06-13T11:42:04.688295" elapsed="3.000341"/>
</kw>
<status status="PASS" start="2025-06-13T11:41:55.064317" elapsed="12.624405"/>
</kw>
<test id="s1-s3-t1" name="Multi Pub/Sub Local UDP Test" line="26">
<kw name="Run Multi Pub Sub Test Local">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-13T11:42:07.689637" level="INFO">${IMAGE} = multi_pub_sub_local_udp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-13T11:42:07.689486" elapsed="0.000171"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-13T11:42:07.689864" level="INFO">${CONTAINER} = multi_locallocal_udp</msg>
<var>${CONTAINER}</var>
<arg>multi_local${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-13T11:42:07.689729" elapsed="0.000162"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Running local multi pub/sub test (all binarys in same Container) with ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-13T11:42:07.689962" elapsed="0.000136"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<arg>${IMAGE}</arg>
<arg>local_multi</arg>
<arg>${layer_tag}</arg>
<status status="PASS" start="2025-06-13T11:42:07.690197" elapsed="0.118994"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-06-13T11:42:25.871315" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-06-13T11:42:07.809350" elapsed="18.062022"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-06-13T11:42:25.871840" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Local Multi Pub/Sub Test test failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-06-13T11:42:25.871571" elapsed="0.000348"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-06-13T11:42:25.875351" level="INFO">${logs} = [Entrypoint] Starting local multi pub/sub test in mode local_udp
[Publisher] Waiting for at least 2 subscriber(s) on topic: test_topic
[Publisher] Waiting for at least 2 subscriber(s) on topic: test_t...</msg>
<var>${logs}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-06-13T11:42:25.872036" elapsed="0.003345"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[CONTAINER LOG: All Local Binarys Multi Pub/Sub]\n${logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-13T11:42:25.875481" elapsed="0.000163"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-06-13T11:42:25.875745" elapsed="0.005863"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-06-13T11:42:26.881941" level="INFO">Slept 1 second.</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-06-13T11:42:25.881696" elapsed="1.000359"/>
</kw>
<arg>local_udp</arg>
<status status="PASS" start="2025-06-13T11:42:07.689252" elapsed="19.192883"/>
</kw>
<tag>multi_pub_sub_local_udp</tag>
<status status="PASS" start="2025-06-13T11:42:07.688786" elapsed="19.193465"/>
</test>
<test id="s1-s3-t2" name="Multi Pub/Sub Local TCP Test" line="30">
<kw name="Run Multi Pub Sub Test Local">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-13T11:42:26.883662" level="INFO">${IMAGE} = multi_pub_sub_local_tcp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-13T11:42:26.883517" elapsed="0.000165"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-13T11:42:26.883894" level="INFO">${CONTAINER} = multi_locallocal_tcp</msg>
<var>${CONTAINER}</var>
<arg>multi_local${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-13T11:42:26.883753" elapsed="0.000159"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Running local multi pub/sub test (all binarys in same Container) with ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-13T11:42:26.883983" elapsed="0.000122"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<arg>${IMAGE}</arg>
<arg>local_multi</arg>
<arg>${layer_tag}</arg>
<status status="PASS" start="2025-06-13T11:42:26.884182" elapsed="0.118205"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-06-13T11:42:45.080947" level="INFO">${exit_code} = 1</msg>
<var>${exit_code}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-06-13T11:42:27.002632" elapsed="18.078356"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-06-13T11:42:45.081354" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg time="2025-06-13T11:42:45.081467" level="FAIL">Local Multi Pub/Sub Test test failed!: 1 != 0</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Local Multi Pub/Sub Test test failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="FAIL" start="2025-06-13T11:42:45.081145" elapsed="0.000406">Local Multi Pub/Sub Test test failed!: 1 != 0</status>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<var>${logs}</var>
<arg>${CONTAINER}</arg>
<status status="NOT RUN" start="2025-06-13T11:42:45.081659" elapsed="0.000025"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[CONTAINER LOG: All Local Binarys Multi Pub/Sub]\n${logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2025-06-13T11:42:45.081759" elapsed="0.000017"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<status status="NOT RUN" start="2025-06-13T11:42:45.081894" elapsed="0.000067"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" start="2025-06-13T11:42:45.082047" elapsed="0.000016"/>
</kw>
<arg>local_tcp</arg>
<status status="FAIL" start="2025-06-13T11:42:26.883292" elapsed="18.198862">Local Multi Pub/Sub Test test failed!: 1 != 0</status>
</kw>
<tag>multi_pub_sub_local_tcp</tag>
<status status="FAIL" start="2025-06-13T11:42:26.882903" elapsed="18.199370">Local Multi Pub/Sub Test test failed!: 1 != 0</status>
</test>
<test id="s1-s3-t3" name="Multi Pub/Sub Local SHM Test" line="34">
<kw name="Run Multi Pub Sub Test Local">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-13T11:42:45.083480" level="INFO">${IMAGE} = multi_pub_sub_local_shm</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-13T11:42:45.083339" elapsed="0.000162"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-13T11:42:45.083687" level="INFO">${CONTAINER} = multi_locallocal_shm</msg>
<var>${CONTAINER}</var>
<arg>multi_local${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-13T11:42:45.083575" elapsed="0.000131"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Running local multi pub/sub test (all binarys in same Container) with ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-13T11:42:45.083775" elapsed="0.000157"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<arg>${IMAGE}</arg>
<arg>local_multi</arg>
<arg>${layer_tag}</arg>
<status status="PASS" start="2025-06-13T11:42:45.084034" elapsed="0.114487"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-06-13T11:43:05.272221" level="INFO">${exit_code} = 1</msg>
<var>${exit_code}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-06-13T11:42:45.198728" elapsed="20.073535"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-06-13T11:43:05.272622" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg time="2025-06-13T11:43:05.272739" level="FAIL">Local Multi Pub/Sub Test test failed!: 1 != 0</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Local Multi Pub/Sub Test test failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="FAIL" start="2025-06-13T11:43:05.272409" elapsed="0.000475">Local Multi Pub/Sub Test test failed!: 1 != 0</status>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<var>${logs}</var>
<arg>${CONTAINER}</arg>
<status status="NOT RUN" start="2025-06-13T11:43:05.273009" elapsed="0.000018"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[CONTAINER LOG: All Local Binarys Multi Pub/Sub]\n${logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2025-06-13T11:43:05.273099" elapsed="0.000016"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<status status="NOT RUN" start="2025-06-13T11:43:05.273173" elapsed="0.000013"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" start="2025-06-13T11:43:05.273245" elapsed="0.000020"/>
</kw>
<arg>local_shm</arg>
<status status="FAIL" start="2025-06-13T11:42:45.083143" elapsed="20.190214">Local Multi Pub/Sub Test test failed!: 1 != 0</status>
</kw>
<tag>multi_pub_sub_local_shm</tag>
<status status="FAIL" start="2025-06-13T11:42:45.082750" elapsed="20.190745">Local Multi Pub/Sub Test test failed!: 1 != 0</status>
</test>
<test id="s1-s3-t4" name="Multi Pub/Sub Network UDP Test" line="38">
<kw name="Run Multi Pub Sub Network Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-13T11:43:05.274782" level="INFO">${IMAGE} = multi_pub_sub_network_udp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-13T11:43:05.274646" elapsed="0.000199"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-13T11:43:05.275021" level="INFO">${TOPIC} = test_topic</msg>
<var>${TOPIC}</var>
<arg>test_topic</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-13T11:43:05.274929" elapsed="0.000111"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-13T11:43:05.275223" level="INFO">${PUB1} = pub1_network_udp</msg>
<var>${PUB1}</var>
<arg>pub1_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-13T11:43:05.275112" elapsed="0.000128"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-13T11:43:05.275412" level="INFO">${PUB2} = pub2_network_udp</msg>
<var>${PUB2}</var>
<arg>pub2_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-13T11:43:05.275308" elapsed="0.000121"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-13T11:43:05.275594" level="INFO">${SUB1} = sub1_network_udp</msg>
<var>${SUB1}</var>
<arg>sub1_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-13T11:43:05.275494" elapsed="0.000117"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-13T11:43:05.275778" level="INFO">${SUB2} = sub2_network_udp</msg>
<var>${SUB2}</var>
<arg>sub2_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-13T11:43:05.275677" elapsed="0.000118"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Starting multi pub/sub test with ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-13T11:43:05.275892" elapsed="0.000131"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${SUB1}</arg>
<arg>${IMAGE}</arg>
<arg>multi_subscriber</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-06-13T11:43:05.276121" elapsed="0.127293"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${SUB2}</arg>
<arg>${IMAGE}</arg>
<arg>multi_subscriber2</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-06-13T11:43:05.403639" elapsed="0.121701"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${PUB1}</arg>
<arg>${IMAGE}</arg>
<arg>multi_publisher</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-06-13T11:43:05.525503" elapsed="0.121746"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${PUB2}</arg>
<arg>${IMAGE}</arg>
<arg>multi_publisher2</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-06-13T11:43:05.647434" elapsed="0.126164"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${SUB1}</arg>
<status status="PASS" start="2025-06-13T11:43:05.773845" elapsed="17.689886"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${SUB2}</arg>
<status status="PASS" start="2025-06-13T11:43:23.463953" elapsed="0.126440"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${PUB1}</arg>
<status status="PASS" start="2025-06-13T11:43:23.590559" elapsed="0.002000"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${PUB2}</arg>
<status status="PASS" start="2025-06-13T11:43:23.592699" elapsed="0.001166"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-06-13T11:43:23.596236" level="INFO">${log1} = [Entrypoint] Starting multi_subscriber in mode network_udp
[Multi Subscriber] Waiting for messages...
[Multi Subscriber] Received value: 43
[Multi Subscriber] Received value: 42
[Multi Subscriber] Rec...</msg>
<var>${log1}</var>
<arg>${SUB1}</arg>
<status status="PASS" start="2025-06-13T11:43:23.593954" elapsed="0.002355"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[CONTAINER LOG: SUBSCRIBER 1]\n${log1}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-13T11:43:23.596396" elapsed="0.000156"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-06-13T11:43:23.599222" level="INFO">${log2} = [Entrypoint] Starting multi_subscriber2 in mode network_udp
[Multi Subscriber] Waiting for messages...
[Multi Subscriber] Received value: 43
[Multi Subscriber] Received value: 42
[Multi Subscriber] Re...</msg>
<var>${log2}</var>
<arg>${SUB2}</arg>
<status status="PASS" start="2025-06-13T11:43:23.596654" elapsed="0.002596"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[CONTAINER LOG: SUBSCRIBER 2]\n${log2}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-13T11:43:23.599335" elapsed="0.000156"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-06-13T11:43:23.600875" level="INFO">${exit1} = 0</msg>
<var>${exit1}</var>
<arg>${SUB1}</arg>
<status status="PASS" start="2025-06-13T11:43:23.599594" elapsed="0.001318"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-06-13T11:43:23.602125" level="INFO">${exit2} = 0</msg>
<var>${exit2}</var>
<arg>${SUB2}</arg>
<status status="PASS" start="2025-06-13T11:43:23.601035" elapsed="0.001114"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-06-13T11:43:23.602377" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit1}</arg>
<arg>0</arg>
<arg>Subscriber 1 failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-06-13T11:43:23.602234" elapsed="0.000190"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-06-13T11:43:23.602734" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit2}</arg>
<arg>0</arg>
<arg>Subscriber 2 failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-06-13T11:43:23.602503" elapsed="0.000273"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Multi Pub/Sub Test ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-06-13T11:43:23.602883" elapsed="0.000156"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${SUB1}</arg>
<status status="PASS" start="2025-06-13T11:43:23.603138" elapsed="0.005124"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${SUB2}</arg>
<status status="PASS" start="2025-06-13T11:43:23.608345" elapsed="0.005060"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${PUB1}</arg>
<status status="PASS" start="2025-06-13T11:43:23.613489" elapsed="0.005135"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${PUB2}</arg>
<status status="PASS" start="2025-06-13T11:43:23.618707" elapsed="0.005175"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-06-13T11:43:24.624206" level="INFO">Slept 1 second.</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-06-13T11:43:23.623970" elapsed="1.000344"/>
</kw>
<arg>network_udp</arg>
<arg>network</arg>
<status status="PASS" start="2025-06-13T11:43:05.274439" elapsed="19.349957"/>
</kw>
<tag>multi_pub_sub_network_udp</tag>
<status status="PASS" start="2025-06-13T11:43:05.274039" elapsed="19.350475"/>
</test>
<test id="s1-s3-t5" name="Multi Pub/Sub Network TCP Test" line="42">
<kw name="Run Multi Pub Sub Network Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-13T11:43:24.626325" level="INFO">${IMAGE} = multi_pub_sub_network_tcp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-13T11:43:24.626175" elapsed="0.000170"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-13T11:43:24.626499" level="INFO">${TOPIC} = test_topic</msg>
<var>${TOPIC}</var>
<arg>test_topic</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-13T11:43:24.626415" elapsed="0.000101"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-13T11:43:24.626682" level="INFO">${PUB1} = pub1_network_tcp</msg>
<var>${PUB1}</var>
<arg>pub1_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-13T11:43:24.626581" elapsed="0.000117"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-13T11:43:24.626881" level="INFO">${PUB2} = pub2_network_tcp</msg>
<var>${PUB2}</var>
<arg>pub2_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-13T11:43:24.626760" elapsed="0.000138"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-13T11:43:24.627059" level="INFO">${SUB1} = sub1_network_tcp</msg>
<var>${SUB1}</var>
<arg>sub1_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-13T11:43:24.626960" elapsed="0.000115"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-13T11:43:24.627233" level="INFO">${SUB2} = sub2_network_tcp</msg>
<var>${SUB2}</var>
<arg>sub2_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-13T11:43:24.627136" elapsed="0.000113"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Starting multi pub/sub test with ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-13T11:43:24.627310" elapsed="0.000116"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${SUB1}</arg>
<arg>${IMAGE}</arg>
<arg>multi_subscriber</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-06-13T11:43:24.627524" elapsed="0.134005"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${SUB2}</arg>
<arg>${IMAGE}</arg>
<arg>multi_subscriber2</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-06-13T11:43:24.761710" elapsed="0.119793"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${PUB1}</arg>
<arg>${IMAGE}</arg>
<arg>multi_publisher</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-06-13T11:43:24.881696" elapsed="0.129725"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${PUB2}</arg>
<arg>${IMAGE}</arg>
<arg>multi_publisher2</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-06-13T11:43:25.011606" elapsed="0.120048"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${SUB1}</arg>
<status status="PASS" start="2025-06-13T11:43:25.131860" elapsed="17.703666"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${SUB2}</arg>
<status status="PASS" start="2025-06-13T11:43:42.835758" elapsed="0.129116"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${PUB1}</arg>
<status status="PASS" start="2025-06-13T11:43:42.965044" elapsed="0.001475"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${PUB2}</arg>
<status status="PASS" start="2025-06-13T11:43:42.966620" elapsed="0.001081"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-06-13T11:43:42.970153" level="INFO">${log1} = [Entrypoint] Starting multi_subscriber in mode network_tcp
[Multi Subscriber] Waiting for messages...
[Multi Subscriber] Received value: 43
[Multi Subscriber] Received value: 42
[Multi Subscriber] Rec...</msg>
<var>${log1}</var>
<arg>${SUB1}</arg>
<status status="PASS" start="2025-06-13T11:43:42.967788" elapsed="0.002442"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[CONTAINER LOG: SUBSCRIBER 1]\n${log1}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-13T11:43:42.970319" elapsed="0.000172"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-06-13T11:43:42.973262" level="INFO">${log2} = [Entrypoint] Starting multi_subscriber2 in mode network_tcp
[Multi Subscriber] Waiting for messages...
[Multi Subscriber] Received value: 43
[Multi Subscriber] Received value: 42
[Multi Subscriber] Re...</msg>
<var>${log2}</var>
<arg>${SUB2}</arg>
<status status="PASS" start="2025-06-13T11:43:42.970601" elapsed="0.002694"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[CONTAINER LOG: SUBSCRIBER 2]\n${log2}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-13T11:43:42.973403" elapsed="0.000202"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-06-13T11:43:42.974789" level="INFO">${exit1} = 0</msg>
<var>${exit1}</var>
<arg>${SUB1}</arg>
<status status="PASS" start="2025-06-13T11:43:42.973709" elapsed="0.001134"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-06-13T11:43:42.975894" level="INFO">${exit2} = 0</msg>
<var>${exit2}</var>
<arg>${SUB2}</arg>
<status status="PASS" start="2025-06-13T11:43:42.974933" elapsed="0.000986"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-06-13T11:43:42.976147" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit1}</arg>
<arg>0</arg>
<arg>Subscriber 1 failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-06-13T11:43:42.976003" elapsed="0.000191"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-06-13T11:43:42.976384" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit2}</arg>
<arg>0</arg>
<arg>Subscriber 2 failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-06-13T11:43:42.976273" elapsed="0.000150"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Multi Pub/Sub Test ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-06-13T11:43:42.976495" elapsed="0.000147"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${SUB1}</arg>
<status status="PASS" start="2025-06-13T11:43:42.976729" elapsed="0.005792"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${SUB2}</arg>
<status status="PASS" start="2025-06-13T11:43:42.982605" elapsed="0.006134"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${PUB1}</arg>
<status status="PASS" start="2025-06-13T11:43:42.988848" elapsed="0.004827"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${PUB2}</arg>
<status status="PASS" start="2025-06-13T11:43:42.993759" elapsed="0.005485"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-06-13T11:43:43.999572" level="INFO">Slept 1 second.</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-06-13T11:43:42.999331" elapsed="1.000353"/>
</kw>
<arg>network_tcp</arg>
<arg>network</arg>
<status status="PASS" start="2025-06-13T11:43:24.625935" elapsed="19.373832"/>
</kw>
<tag>multi_pub_sub_network_tcp</tag>
<status status="PASS" start="2025-06-13T11:43:24.625493" elapsed="19.374416"/>
</test>
<status status="FAIL" start="2025-06-13T11:41:55.061489" elapsed="108.939786"/>
</suite>
<suite id="s1-s4" name="Network Crash" source="/home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/network_crash/robottests/network_crash.robot">
<kw name="Init Test Context" type="SETUP">
<kw name="Set Test Context" owner="GlobalPathsLibrary">
<arg>network_crash</arg>
<arg>network_crash</arg>
<doc>Sets the test folder (e.g. basic_pub_sub or message_validation) and tag prefix (e.g. basic_pub_sub).
Should be called once in Suite Setup if you're using non-default test cases.</doc>
<status status="PASS" start="2025-06-13T11:43:44.004495" elapsed="0.000111"/>
</kw>
<kw name="Get Build Script Path" owner="GlobalPathsLibrary">
<msg time="2025-06-13T11:43:44.004774" level="INFO">${build} = /home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/network_crash/scripts/build_images.sh</msg>
<var>${build}</var>
<status status="PASS" start="2025-06-13T11:43:44.004684" elapsed="0.000110"/>
</kw>
<kw name="Get Network Name" owner="GlobalPathsLibrary">
<msg time="2025-06-13T11:43:44.004970" level="INFO">${net} = ecal_test_net</msg>
<var>${net}</var>
<status status="PASS" start="2025-06-13T11:43:44.004889" elapsed="0.000099"/>
</kw>
<kw name="Get Build Script Args" owner="GlobalPathsLibrary">
<msg time="2025-06-13T11:43:44.005123" level="INFO">${args} = ['network_crash']</msg>
<var>${args}</var>
<status status="PASS" start="2025-06-13T11:43:44.005049" elapsed="0.000090"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-06-13T11:43:44.005341" level="INFO">${BUILD_SCRIPT} = /home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/network_crash/scripts/build_images.sh</msg>
<arg>${BUILD_SCRIPT}</arg>
<arg>${build}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-06-13T11:43:44.005214" elapsed="0.000154"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-06-13T11:43:44.005547" level="INFO">${NETWORK} = ecal_test_net</msg>
<arg>${NETWORK}</arg>
<arg>${net}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-06-13T11:43:44.005438" elapsed="0.000135"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>[SETUP] Building image...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-13T11:43:44.005637" elapsed="0.000096"/>
</kw>
<kw name="Run Process" owner="Process">
<msg time="2025-06-13T11:43:44.005989" level="INFO">Starting process:
/home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/network_crash/scripts/build_images.sh network_crash</msg>
<msg time="2025-06-13T11:43:44.006425" level="INFO">Waiting for process to complete.</msg>
<msg time="2025-06-13T11:43:53.322269" level="INFO">Process completed.</msg>
<msg time="2025-06-13T11:43:53.322436" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<var>${result}</var>
<arg>${BUILD_SCRIPT}</arg>
<arg>@{args}</arg>
<doc>Runs a process and waits for it to complete.</doc>
<status status="PASS" start="2025-06-13T11:43:44.005839" elapsed="9.316623"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-06-13T11:43:53.323140" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${result.rc}</arg>
<arg>0</arg>
<arg>Docker image build failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-06-13T11:43:53.322614" elapsed="0.000576"/>
</kw>
<kw name="Create Docker Network" owner="MyDockerLibrary">
<arg>${NETWORK}</arg>
<status status="PASS" start="2025-06-13T11:43:53.323273" elapsed="0.007518"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-06-13T11:43:55.331181" level="INFO">Slept 2 seconds.</msg>
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-06-13T11:43:53.330934" elapsed="2.000358"/>
</kw>
<status status="PASS" start="2025-06-13T11:43:44.004350" elapsed="11.327027"/>
</kw>
<test id="s1-s4-t1" name="Local communication survives Network crash" line="45">
<kw name="Run Network Crash Survival Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-13T11:43:55.332349" level="INFO">${IMAGE} = network_crash_local_udp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_local_udp</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-13T11:43:55.332146" elapsed="0.000224"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-13T11:43:55.332750" level="INFO">${TOPIC} = test_topic</msg>
<var>${TOPIC}</var>
<arg>test_topic</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-13T11:43:55.332448" elapsed="0.000321"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-13T11:43:55.332944" level="INFO">${NET_PUB} = udp_network_pub</msg>
<var>${NET_PUB}</var>
<arg>udp_network_pub</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-13T11:43:55.332858" elapsed="0.000104"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-13T11:43:55.333107" level="INFO">${LOCAL_ALL} = udp_local_all</msg>
<var>${LOCAL_ALL}</var>
<arg>udp_local_all</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-13T11:43:55.333030" elapsed="0.000093"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n\n[INFO] Starting "LOCAL UDP (PUB1 + SUB + PUB3)" in one container and "NETWORK UDP (PUB2)" separately...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-13T11:43:55.333189" elapsed="0.000105"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${LOCAL_ALL}</arg>
<arg>${IMAGE}</arg>
<arg>udp_local_all</arg>
<arg>${TOPIC}</arg>
<arg>${LOCAL_ALL}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-06-13T11:43:55.333393" elapsed="0.130671"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${NET_PUB}</arg>
<arg>${IMAGE}</arg>
<arg>udp_network_pub</arg>
<arg>${TOPIC}</arg>
<arg>${NET_PUB}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-06-13T11:43:55.464270" elapsed="0.124863"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Letting PUB1 and PUB2 run in parallel for 7s...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-13T11:43:55.589342" elapsed="0.000200"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-06-13T11:44:02.589925" level="INFO">Slept 7 seconds.</msg>
<arg>7s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-06-13T11:43:55.589651" elapsed="7.000413"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[SIMULATION] Disconnecting NETWORK UDP Publisher...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-13T11:44:02.590241" elapsed="0.000185"/>
</kw>
<kw name="Disconnect Container From Network">
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[SIMULATION] Disconnecting ${container} from ${network} (simulate network failure)...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-13T11:44:02.590951" elapsed="0.000150"/>
</kw>
<kw name="Run Process" owner="Process">
<msg time="2025-06-13T11:44:02.591437" level="INFO">Starting process:
docker network disconnect ecal_test_net udp_network_pub</msg>
<msg time="2025-06-13T11:44:02.592142" level="INFO">Waiting for process to complete.</msg>
<msg time="2025-06-13T11:44:02.636100" level="INFO">Process completed.</msg>
<msg time="2025-06-13T11:44:02.636308" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<var>${result}</var>
<arg>docker</arg>
<arg>network</arg>
<arg>disconnect</arg>
<arg>${network}</arg>
<arg>${container}</arg>
<doc>Runs a process and waits for it to complete.</doc>
<status status="PASS" start="2025-06-13T11:44:02.591212" elapsed="0.045133"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-06-13T11:44:02.637333" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${result.rc}</arg>
<arg>0</arg>
<arg>Failed to disconnect ${container} from ${network}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-06-13T11:44:02.636570" elapsed="0.000835"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-06-13T11:44:03.637834" level="INFO">Slept 1 second.</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-06-13T11:44:02.637537" elapsed="1.000409"/>
</kw>
<arg>${NET_PUB}</arg>
<arg>${NETWORK}</arg>
<status status="PASS" start="2025-06-13T11:44:02.590605" elapsed="1.047422"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${LOCAL_ALL}</arg>
<status status="PASS" start="2025-06-13T11:44:03.638152" elapsed="21.887753"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-06-13T11:44:25.529017" level="INFO">${log_local} = [Entrypoint] Starting UDP subscriber, then UDP publisher...
[Publisher] Waiting for at least 1 subscriber(s) on topic: test_topic
[Publisher] Found 1 subscriber(s). Proceeding to send messages.
[Subsc...</msg>
<var>${log_local}</var>
<arg>${LOCAL_ALL}</arg>
<status status="PASS" start="2025-06-13T11:44:25.526119" elapsed="0.002925"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[LOG: LOCAL UDP PUB + SUB + PUB3 CONTAINER]\n${log_local}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-13T11:44:25.529137" elapsed="0.000163"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-06-13T11:44:25.530450" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>${LOCAL_ALL}</arg>
<status status="PASS" start="2025-06-13T11:44:25.529400" elapsed="0.001084"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-06-13T11:44:25.530835" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>LOCAL container (PUB + SUB + PUB3) failed unexpectedly!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-06-13T11:44:25.530605" elapsed="0.000298"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Network Crash Test with Local Recovery Publisher</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-06-13T11:44:25.531013" elapsed="0.000160"/>
</kw>
<status status="PASS" start="2025-06-13T11:43:55.331937" elapsed="30.199308"/>
</kw>
<tag>network_crash_test</tag>
<status status="PASS" start="2025-06-13T11:43:55.331442" elapsed="30.199913"/>
</test>
<status status="PASS" start="2025-06-13T11:43:44.001849" elapsed="41.530446"/>
</suite>
<suite id="s1-s5" name="Pub Crash" source="/home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/pub_crash/robottests/pub_crash.robot">
<kw name="Init Test Context" type="SETUP">
<kw name="Set Test Context" owner="GlobalPathsLibrary">
<arg>pub_crash</arg>
<arg>pub_crash</arg>
<doc>Sets the test folder (e.g. basic_pub_sub or message_validation) and tag prefix (e.g. basic_pub_sub).
Should be called once in Suite Setup if you're using non-default test cases.</doc>
<status status="PASS" start="2025-06-13T11:44:25.535484" elapsed="0.000103"/>
</kw>
<kw name="Get Build Script Path" owner="GlobalPathsLibrary">
<msg time="2025-06-13T11:44:25.535752" level="INFO">${build} = /home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/pub_crash/scripts/build_images.sh</msg>
<var>${build}</var>
<status status="PASS" start="2025-06-13T11:44:25.535664" elapsed="0.000107"/>
</kw>
<kw name="Get Network Name" owner="GlobalPathsLibrary">
<msg time="2025-06-13T11:44:25.535962" level="INFO">${net} = ecal_test_net</msg>
<var>${net}</var>
<status status="PASS" start="2025-06-13T11:44:25.535871" elapsed="0.000110"/>
</kw>
<kw name="Get Build Script Args" owner="GlobalPathsLibrary">
<msg time="2025-06-13T11:44:25.536128" level="INFO">${args} = ['pub_crash']</msg>
<var>${args}</var>
<status status="PASS" start="2025-06-13T11:44:25.536047" elapsed="0.000140"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-06-13T11:44:25.536404" level="INFO">${BUILD_SCRIPT} = /home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/pub_crash/scripts/build_images.sh</msg>
<arg>${BUILD_SCRIPT}</arg>
<arg>${build}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-06-13T11:44:25.536270" elapsed="0.000163"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-06-13T11:44:25.536620" level="INFO">${NETWORK} = ecal_test_net</msg>
<arg>${NETWORK}</arg>
<arg>${net}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-06-13T11:44:25.536506" elapsed="0.000141"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>[SETUP] Building Docker image...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-13T11:44:25.536722" elapsed="0.000113"/>
</kw>
<kw name="Run Process" owner="Process">
<msg time="2025-06-13T11:44:25.537070" level="INFO">Starting process:
/home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/pub_crash/scripts/build_images.sh pub_crash</msg>
<msg time="2025-06-13T11:44:25.537432" level="INFO">Waiting for process to complete.</msg>
<msg time="2025-06-13T11:44:35.114163" level="INFO">Process completed.</msg>
<msg time="2025-06-13T11:44:35.114329" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<var>${result}</var>
<arg>${BUILD_SCRIPT}</arg>
<arg>@{args}</arg>
<doc>Runs a process and waits for it to complete.</doc>
<status status="PASS" start="2025-06-13T11:44:25.536924" elapsed="9.577431"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-06-13T11:44:35.115024" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${result.rc}</arg>
<arg>0</arg>
<arg>Docker build failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-06-13T11:44:35.114507" elapsed="0.000572"/>
</kw>
<kw name="Create Docker Network" owner="MyDockerLibrary">
<arg>${NETWORK}</arg>
<status status="PASS" start="2025-06-13T11:44:35.115177" elapsed="0.007394"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-06-13T11:44:38.122941" level="INFO">Slept 3 seconds.</msg>
<arg>3s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-06-13T11:44:35.122699" elapsed="3.000355"/>
</kw>
<status status="PASS" start="2025-06-13T11:44:25.535339" elapsed="12.587794"/>
</kw>
<test id="s1-s5-t1" name="Communication Continues After Publisher Crash (UDP)" line="30">
<kw name="Run Network Communication Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-13T11:44:38.124452" level="INFO">${IMAGE} = pub_crash_network_udp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-13T11:44:38.124061" elapsed="0.000414"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-13T11:44:38.124634" level="INFO">${TOPIC} = test_topic</msg>
<var>${TOPIC}</var>
<arg>test_topic</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-13T11:44:38.124549" elapsed="0.000102"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-13T11:44:38.124848" level="INFO">${CRASH_PUB} = crash_pub_network_udp</msg>
<var>${CRASH_PUB}</var>
<arg>crash_pub_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-13T11:44:38.124719" elapsed="0.000147"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-13T11:44:38.125037" level="INFO">${TEST_PUB} = test_pub_network_udp</msg>
<var>${TEST_PUB}</var>
<arg>test_pub_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-13T11:44:38.124933" elapsed="0.000121"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-13T11:44:38.125221" level="INFO">${SUB_NAME} = sub_network_udp</msg>
<var>${SUB_NAME}</var>
<arg>sub_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-13T11:44:38.125119" elapsed="0.000118"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Starting communication continuity test with ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-13T11:44:38.125304" elapsed="0.000119"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${SUB_NAME}</arg>
<arg>${IMAGE}</arg>
<arg>subscriber</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-06-13T11:44:38.125518" elapsed="0.133346"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${CRASH_PUB}</arg>
<arg>${IMAGE}</arg>
<arg>crash_publisher</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-06-13T11:44:38.259032" elapsed="0.123057"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${TEST_PUB}</arg>
<arg>${IMAGE}</arg>
<arg>test_publisher</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${TEST_PUB}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-06-13T11:44:38.382274" elapsed="0.126324"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${SUB_NAME}</arg>
<status status="PASS" start="2025-06-13T11:44:38.508790" elapsed="34.813048"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${CRASH_PUB}</arg>
<status status="PASS" start="2025-06-13T11:45:13.322065" elapsed="0.001608"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${TEST_PUB}</arg>
<status status="PASS" start="2025-06-13T11:45:13.323771" elapsed="0.001002"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-06-13T11:45:13.327334" level="INFO">${sub_logs} = [Entrypoint] Starting crash subscriber in mode network_udp

[Subscriber] Registering callback and waiting for messages...

[Subscriber] Received value: 42
[Subscriber] Received value: 43
[Subscriber] ...</msg>
<var>${sub_logs}</var>
<arg>${SUB_NAME}</arg>
<status status="PASS" start="2025-06-13T11:45:13.324891" elapsed="0.002471"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[SUBSCRIBER CONTAINER OUTPUT]\n${sub_logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-13T11:45:13.327465" elapsed="0.000170"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-06-13T11:45:13.330253" level="INFO">${crash_logs} = [Entrypoint] Starting crash publisher in mode network_udp
[Publisher] Waiting for at least 1 subscriber(s) on topic: test_topic
[Publisher] Found 1 subscriber(s). Proceeding to send messages.
[Crash P...</msg>
<var>${crash_logs}</var>
<arg>${CRASH_PUB}</arg>
<status status="PASS" start="2025-06-13T11:45:13.327739" elapsed="0.002548"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[CRASH PUBLISHER OUTPUT]\n${crash_logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-13T11:45:13.330373" elapsed="0.000179"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-06-13T11:45:13.331604" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>${SUB_NAME}</arg>
<status status="PASS" start="2025-06-13T11:45:13.330658" elapsed="0.000971"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-06-13T11:45:13.331882" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Communication failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-06-13T11:45:13.331710" elapsed="0.000220"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Network Communication after one Publisher crash ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-06-13T11:45:13.332056" elapsed="0.000155"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${SUB_NAME}</arg>
<status status="PASS" start="2025-06-13T11:45:13.332294" elapsed="0.005344"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${CRASH_PUB}</arg>
<status status="PASS" start="2025-06-13T11:45:13.337722" elapsed="0.005405"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${TEST_PUB}</arg>
<status status="PASS" start="2025-06-13T11:45:13.343210" elapsed="0.005211"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-06-13T11:45:14.348719" level="INFO">Slept 1 second.</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-06-13T11:45:13.348509" elapsed="1.000351"/>
</kw>
<arg>network_udp</arg>
<arg>network</arg>
<status status="PASS" start="2025-06-13T11:44:38.123753" elapsed="36.225196"/>
</kw>
<tag>pub_crash_network_udp</tag>
<status status="PASS" start="2025-06-13T11:44:38.123204" elapsed="36.225873"/>
</test>
<test id="s1-s5-t2" name="Communication Continues After Publisher Crash (TCP)" line="34">
<kw name="Run Network Communication Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-13T11:45:14.351014" level="INFO">${IMAGE} = pub_crash_network_tcp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-13T11:45:14.350864" elapsed="0.000170"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-13T11:45:14.351189" level="INFO">${TOPIC} = test_topic</msg>
<var>${TOPIC}</var>
<arg>test_topic</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-13T11:45:14.351107" elapsed="0.000099"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-13T11:45:14.351378" level="INFO">${CRASH_PUB} = crash_pub_network_tcp</msg>
<var>${CRASH_PUB}</var>
<arg>crash_pub_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-13T11:45:14.351272" elapsed="0.000123"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-13T11:45:14.351561" level="INFO">${TEST_PUB} = test_pub_network_tcp</msg>
<var>${TEST_PUB}</var>
<arg>test_pub_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-13T11:45:14.351460" elapsed="0.000117"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-13T11:45:14.351739" level="INFO">${SUB_NAME} = sub_network_tcp</msg>
<var>${SUB_NAME}</var>
<arg>sub_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-13T11:45:14.351640" elapsed="0.000115"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Starting communication continuity test with ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-13T11:45:14.351834" elapsed="0.000125"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${SUB_NAME}</arg>
<arg>${IMAGE}</arg>
<arg>subscriber</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-06-13T11:45:14.352051" elapsed="0.140903"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${CRASH_PUB}</arg>
<arg>${IMAGE}</arg>
<arg>crash_publisher</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-06-13T11:45:14.493120" elapsed="0.127775"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${TEST_PUB}</arg>
<arg>${IMAGE}</arg>
<arg>test_publisher</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${TEST_PUB}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-06-13T11:45:14.621083" elapsed="0.122475"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${SUB_NAME}</arg>
<status status="PASS" start="2025-06-13T11:45:14.743781" elapsed="34.812694"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${CRASH_PUB}</arg>
<status status="PASS" start="2025-06-13T11:45:49.556699" elapsed="0.001589"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${TEST_PUB}</arg>
<status status="PASS" start="2025-06-13T11:45:49.558389" elapsed="0.001084"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-06-13T11:45:49.562026" level="INFO">${sub_logs} = [Entrypoint] Starting crash subscriber in mode network_tcp

[Subscriber] Registering callback and waiting for messages...

[Subscriber] Received value: 42
[Subscriber] Received value: 43
[Subscriber] ...</msg>
<var>${sub_logs}</var>
<arg>${SUB_NAME}</arg>
<status status="PASS" start="2025-06-13T11:45:49.559564" elapsed="0.002489"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[SUBSCRIBER CONTAINER OUTPUT]\n${sub_logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-13T11:45:49.562141" elapsed="0.000175"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-06-13T11:45:49.565123" level="INFO">${crash_logs} = [Entrypoint] Starting crash publisher in mode network_tcp
[Publisher] Waiting for at least 1 subscriber(s) on topic: test_topic
1749815115495 ms | bbb51051142d | ./crash_publisher | 7 | info | CTCPRea...</msg>
<var>${crash_logs}</var>
<arg>${CRASH_PUB}</arg>
<status status="PASS" start="2025-06-13T11:45:49.562419" elapsed="0.002739"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[CRASH PUBLISHER OUTPUT]\n${crash_logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-13T11:45:49.565274" elapsed="0.000191"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-06-13T11:45:49.566696" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>${SUB_NAME}</arg>
<status status="PASS" start="2025-06-13T11:45:49.565574" elapsed="0.001152"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-06-13T11:45:49.567036" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Communication failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-06-13T11:45:49.566858" elapsed="0.000240"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Network Communication after one Publisher crash ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-06-13T11:45:49.567202" elapsed="0.000183"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${SUB_NAME}</arg>
<status status="PASS" start="2025-06-13T11:45:49.567482" elapsed="0.005220"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${CRASH_PUB}</arg>
<status status="PASS" start="2025-06-13T11:45:49.572787" elapsed="0.005144"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${TEST_PUB}</arg>
<status status="PASS" start="2025-06-13T11:45:49.578019" elapsed="0.005196"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-06-13T11:45:50.583543" level="INFO">Slept 1 second.</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-06-13T11:45:49.583306" elapsed="1.000340"/>
</kw>
<arg>network_tcp</arg>
<arg>network</arg>
<status status="PASS" start="2025-06-13T11:45:14.350596" elapsed="36.233131"/>
</kw>
<tag>pub_crash_network_tcp</tag>
<status status="PASS" start="2025-06-13T11:45:14.350147" elapsed="36.233723"/>
</test>
<test id="s1-s5-t3" name="Communication Continues After Publisher Crash (SHM)" line="38">
<kw name="Run Local Communication Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-13T11:45:50.585702" level="INFO">${IMAGE} = pub_crash_local_shm</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-13T11:45:50.585556" elapsed="0.000167"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-13T11:45:50.585936" level="INFO">${CONTAINER} = local_all_local_shm</msg>
<var>${CONTAINER}</var>
<arg>local_all_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-13T11:45:50.585796" elapsed="0.000159"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\nStarting local test container with ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-13T11:45:50.586026" elapsed="0.000137"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<arg>${IMAGE}</arg>
<arg>local_all</arg>
<arg>${layer_tag}</arg>
<status status="PASS" start="2025-06-13T11:45:50.586243" elapsed="0.112488"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-06-13T11:46:25.768423" level="INFO">${exit_code} = 1</msg>
<var>${exit_code}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-06-13T11:45:50.699024" elapsed="35.069452"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-06-13T11:46:25.768881" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg time="2025-06-13T11:46:25.768988" level="FAIL">Local test failed!: 1 != 0</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Local test failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="FAIL" start="2025-06-13T11:46:25.768636" elapsed="0.000425">Local test failed!: 1 != 0</status>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<var>${logs}</var>
<arg>${CONTAINER}</arg>
<status status="NOT RUN" start="2025-06-13T11:46:25.769158" elapsed="0.000018"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n\n[CONTAINER LOG: LOCAL PUB+SUB]\n\n${logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2025-06-13T11:46:25.769271" elapsed="0.000017"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Local Communication after one Publisher crash ${layer_tag}</arg>
<arg>${True}</arg>
<status status="NOT RUN" start="2025-06-13T11:46:25.769351" elapsed="0.000014"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<status status="NOT RUN" start="2025-06-13T11:46:25.769422" elapsed="0.000013"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" start="2025-06-13T11:46:25.769513" elapsed="0.000016"/>
</kw>
<arg>local_shm</arg>
<status status="FAIL" start="2025-06-13T11:45:50.585332" elapsed="35.184289">Local test failed!: 1 != 0</status>
</kw>
<tag>pub_crash_local_shm</tag>
<status status="FAIL" start="2025-06-13T11:45:50.584901" elapsed="35.184840">Local test failed!: 1 != 0</status>
</test>
<status status="FAIL" start="2025-06-13T11:44:25.532898" elapsed="120.237362"/>
</suite>
<suite id="s1-s6" name="Sub Crash" source="/home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/sub_crash/robottests/sub_crash.robot">
<kw name="Init Test Context" type="SETUP">
<kw name="Set Test Context" owner="GlobalPathsLibrary">
<arg>sub_crash</arg>
<arg>sub_crash</arg>
<doc>Sets the test folder (e.g. basic_pub_sub or message_validation) and tag prefix (e.g. basic_pub_sub).
Should be called once in Suite Setup if you're using non-default test cases.</doc>
<status status="PASS" start="2025-06-13T11:46:25.773613" elapsed="0.000118"/>
</kw>
<kw name="Get Build Script Path" owner="GlobalPathsLibrary">
<msg time="2025-06-13T11:46:25.773956" level="INFO">${build} = /home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/sub_crash/scripts/build_images.sh</msg>
<var>${build}</var>
<status status="PASS" start="2025-06-13T11:46:25.773847" elapsed="0.000130"/>
</kw>
<kw name="Get Network Name" owner="GlobalPathsLibrary">
<msg time="2025-06-13T11:46:25.774124" level="INFO">${net} = ecal_test_net</msg>
<var>${net}</var>
<status status="PASS" start="2025-06-13T11:46:25.774044" elapsed="0.000099"/>
</kw>
<kw name="Get Build Script Args" owner="GlobalPathsLibrary">
<msg time="2025-06-13T11:46:25.774285" level="INFO">${args} = ['sub_crash']</msg>
<var>${args}</var>
<status status="PASS" start="2025-06-13T11:46:25.774206" elapsed="0.000096"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-06-13T11:46:25.774518" level="INFO">${BUILD_SCRIPT} = /home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/sub_crash/scripts/build_images.sh</msg>
<arg>${BUILD_SCRIPT}</arg>
<arg>${build}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-06-13T11:46:25.774383" elapsed="0.000165"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-06-13T11:46:25.774741" level="INFO">${NETWORK} = ecal_test_net</msg>
<arg>${NETWORK}</arg>
<arg>${net}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-06-13T11:46:25.774624" elapsed="0.000145"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>[SETUP] Building Docker image...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-13T11:46:25.774869" elapsed="0.000097"/>
</kw>
<kw name="Run Process" owner="Process">
<msg time="2025-06-13T11:46:25.775224" level="INFO">Starting process:
/home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/sub_crash/scripts/build_images.sh sub_crash</msg>
<msg time="2025-06-13T11:46:25.775636" level="INFO">Waiting for process to complete.</msg>
<msg time="2025-06-13T11:46:35.472164" level="INFO">Process completed.</msg>
<msg time="2025-06-13T11:46:35.472336" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<var>${result}</var>
<arg>${BUILD_SCRIPT}</arg>
<arg>@{args}</arg>
<doc>Runs a process and waits for it to complete.</doc>
<status status="PASS" start="2025-06-13T11:46:25.775066" elapsed="9.697296"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-06-13T11:46:35.473017" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${result.rc}</arg>
<arg>0</arg>
<arg>Docker build failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-06-13T11:46:35.472514" elapsed="0.000554"/>
</kw>
<kw name="Create Docker Network" owner="MyDockerLibrary">
<arg>${NETWORK}</arg>
<status status="PASS" start="2025-06-13T11:46:35.473153" elapsed="0.007539"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-06-13T11:46:38.481084" level="INFO">Slept 3 seconds.</msg>
<arg>3s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-06-13T11:46:35.480846" elapsed="3.000361"/>
</kw>
<status status="PASS" start="2025-06-13T11:46:25.773466" elapsed="12.707838"/>
</kw>
<test id="s1-s6-t1" name="Network Communication Continues After Subscriber Crash (UDP)" line="30">
<kw name="Run Network Communication Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-13T11:46:38.482367" level="INFO">${IMAGE} = sub_crash_network_udp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-13T11:46:38.482215" elapsed="0.000172"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-13T11:46:38.482545" level="INFO">${TOPIC} = test_topic</msg>
<var>${TOPIC}</var>
<arg>test_topic</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-13T11:46:38.482460" elapsed="0.000102"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-13T11:46:38.482795" level="INFO">${CRASH_SUB} = crash_sub_network_udp</msg>
<var>${CRASH_SUB}</var>
<arg>crash_sub_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-13T11:46:38.482683" elapsed="0.000145"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-13T11:46:38.483002" level="INFO">${TEST_SUB} = test_sub_network_udp</msg>
<var>${TEST_SUB}</var>
<arg>test_sub_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-13T11:46:38.482898" elapsed="0.000122"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-13T11:46:38.483186" level="INFO">${TEST_PUB} = test_pub_network_udp</msg>
<var>${TEST_PUB}</var>
<arg>test_pub_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-13T11:46:38.483086" elapsed="0.000116"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Starting subscriber crash continuity test with ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-13T11:46:38.483269" elapsed="0.000125"/>
</kw>
<kw name="Create Docker Network" owner="MyDockerLibrary">
<arg>${NETWORK}</arg>
<status status="PASS" start="2025-06-13T11:46:38.483485" elapsed="0.007651"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${CRASH_SUB}</arg>
<arg>${IMAGE}</arg>
<arg>crash_subscriber</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${CRASH_SUB}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-06-13T11:46:38.491277" elapsed="0.127282"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${TEST_SUB}</arg>
<arg>${IMAGE}</arg>
<arg>test_subscriber</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${TEST_SUB}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-06-13T11:46:38.618749" elapsed="0.126924"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${TEST_PUB}</arg>
<arg>${IMAGE}</arg>
<arg>test_publisher</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${TEST_PUB}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-06-13T11:46:38.745924" elapsed="0.124646"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${CRASH_SUB}</arg>
<status status="PASS" start="2025-06-13T11:46:38.870760" elapsed="7.060244"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${TEST_SUB}</arg>
<status status="PASS" start="2025-06-13T11:46:45.931201" elapsed="26.876156"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${TEST_PUB}</arg>
<status status="PASS" start="2025-06-13T11:47:12.807520" elapsed="0.001442"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-06-13T11:47:12.811376" level="INFO">${test_sub_logs} = [Entrypoint] Starting crash publisher in mode network_udp

[Test_Subscriber] Waiting for messages...
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Receive...</msg>
<var>${test_sub_logs}</var>
<arg>${TEST_SUB}</arg>
<status status="PASS" start="2025-06-13T11:47:12.809054" elapsed="0.002349"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[SUBSCRIBER CONTAINER OUTPUT]\n${test_sub_logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-13T11:47:12.811492" elapsed="0.000171"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-06-13T11:47:12.814139" level="INFO">${crash_sub_logs} = [Entrypoint] Starting crash subscriber in mode network_udp

[Crash Subscriber] Registered and sleeping before crash...

[Crash_Subscriber] Received value: 43
[Crash_Subscriber] Received value: 43
[Cra...</msg>
<var>${crash_sub_logs}</var>
<arg>${CRASH_SUB}</arg>
<status status="PASS" start="2025-06-13T11:47:12.811765" elapsed="0.002400"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[CRASH SUBSCRIBER CONTAINER OUTPUT]\n${crash_sub_logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-13T11:47:12.814251" elapsed="0.000158"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-06-13T11:47:12.815422" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>${TEST_SUB}</arg>
<status status="PASS" start="2025-06-13T11:47:12.814503" elapsed="0.000943"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-06-13T11:47:12.815678" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Communication failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-06-13T11:47:12.815530" elapsed="0.000193"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Network Communication after one Subscriber crash ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-06-13T11:47:12.815801" elapsed="0.000186"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${CRASH_SUB}</arg>
<status status="PASS" start="2025-06-13T11:47:12.816076" elapsed="0.005048"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${TEST_SUB}</arg>
<status status="PASS" start="2025-06-13T11:47:12.821209" elapsed="0.005140"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${TEST_PUB}</arg>
<status status="PASS" start="2025-06-13T11:47:12.826434" elapsed="0.006006"/>
</kw>
<arg>network_udp</arg>
<arg>network</arg>
<status status="PASS" start="2025-06-13T11:46:38.481964" elapsed="34.350535"/>
</kw>
<tag>sub_crash_network_udp</tag>
<status status="PASS" start="2025-06-13T11:46:38.481378" elapsed="34.351212"/>
</test>
<test id="s1-s6-t2" name="Network Communication Continues After Publisher Crash (TCP)" line="34">
<kw name="Run Network Communication Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-13T11:47:12.834493" level="INFO">${IMAGE} = sub_crash_network_tcp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-13T11:47:12.834352" elapsed="0.000163"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-13T11:47:12.834678" level="INFO">${TOPIC} = test_topic</msg>
<var>${TOPIC}</var>
<arg>test_topic</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-13T11:47:12.834591" elapsed="0.000106"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-13T11:47:12.834937" level="INFO">${CRASH_SUB} = crash_sub_network_tcp</msg>
<var>${CRASH_SUB}</var>
<arg>crash_sub_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-13T11:47:12.834773" elapsed="0.000184"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-13T11:47:12.835142" level="INFO">${TEST_SUB} = test_sub_network_tcp</msg>
<var>${TEST_SUB}</var>
<arg>test_sub_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-13T11:47:12.835031" elapsed="0.000129"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-13T11:47:12.835331" level="INFO">${TEST_PUB} = test_pub_network_tcp</msg>
<var>${TEST_PUB}</var>
<arg>test_pub_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-13T11:47:12.835227" elapsed="0.000121"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Starting subscriber crash continuity test with ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-13T11:47:12.835413" elapsed="0.000128"/>
</kw>
<kw name="Create Docker Network" owner="MyDockerLibrary">
<arg>${NETWORK}</arg>
<status status="PASS" start="2025-06-13T11:47:12.835659" elapsed="0.007085"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${CRASH_SUB}</arg>
<arg>${IMAGE}</arg>
<arg>crash_subscriber</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${CRASH_SUB}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-06-13T11:47:12.842873" elapsed="0.128159"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${TEST_SUB}</arg>
<arg>${IMAGE}</arg>
<arg>test_subscriber</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${TEST_SUB}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-06-13T11:47:12.971232" elapsed="0.120757"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${TEST_PUB}</arg>
<arg>${IMAGE}</arg>
<arg>test_publisher</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${TEST_PUB}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-06-13T11:47:13.092174" elapsed="0.137804"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${CRASH_SUB}</arg>
<status status="PASS" start="2025-06-13T11:47:13.230142" elapsed="7.205850"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${TEST_SUB}</arg>
<status status="PASS" start="2025-06-13T11:47:20.436272" elapsed="26.723773"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${TEST_PUB}</arg>
<status status="PASS" start="2025-06-13T11:47:47.160211" elapsed="0.001695"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-06-13T11:47:47.164321" level="INFO">${test_sub_logs} = [Entrypoint] Starting crash publisher in mode network_tcp

[Test_Subscriber] Waiting for messages...
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Receive...</msg>
<var>${test_sub_logs}</var>
<arg>${TEST_SUB}</arg>
<status status="PASS" start="2025-06-13T11:47:47.162010" elapsed="0.002338"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[SUBSCRIBER CONTAINER OUTPUT]\n${test_sub_logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-13T11:47:47.164437" elapsed="0.000164"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-06-13T11:47:47.167131" level="INFO">${crash_sub_logs} = [Entrypoint] Starting crash subscriber in mode network_tcp

[Crash Subscriber] Registered and sleeping before crash...

[Crash_Subscriber] Received value: 43
[Crash_Subscriber] Received value: 43
[Cra...</msg>
<var>${crash_sub_logs}</var>
<arg>${CRASH_SUB}</arg>
<status status="PASS" start="2025-06-13T11:47:47.164698" elapsed="0.002467"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[CRASH SUBSCRIBER CONTAINER OUTPUT]\n${crash_sub_logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-13T11:47:47.167261" elapsed="0.000156"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-06-13T11:47:47.168515" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>${TEST_SUB}</arg>
<status status="PASS" start="2025-06-13T11:47:47.167509" elapsed="0.001030"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-06-13T11:47:47.168771" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Communication failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-06-13T11:47:47.168628" elapsed="0.000223"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Network Communication after one Subscriber crash ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-06-13T11:47:47.168934" elapsed="0.000151"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${CRASH_SUB}</arg>
<status status="PASS" start="2025-06-13T11:47:47.169174" elapsed="0.005283"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${TEST_SUB}</arg>
<status status="PASS" start="2025-06-13T11:47:47.174544" elapsed="0.005192"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${TEST_PUB}</arg>
<status status="PASS" start="2025-06-13T11:47:47.179846" elapsed="0.005250"/>
</kw>
<arg>network_tcp</arg>
<arg>network</arg>
<status status="PASS" start="2025-06-13T11:47:12.834143" elapsed="34.351033"/>
</kw>
<tag>pub_crash_network_tcp</tag>
<status status="PASS" start="2025-06-13T11:47:12.833712" elapsed="34.351608"/>
</test>
<test id="s1-s6-t3" name="Local Communication Continues After Subscriber Crash (SHM)" line="38">
<kw name="Run Local Communication Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-13T11:47:47.187119" level="INFO">${IMAGE} = sub_crash_local_shm</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-13T11:47:47.186973" elapsed="0.000168"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-13T11:47:47.187329" level="INFO">${CONTAINER} = local_all_local_shm</msg>
<var>${CONTAINER}</var>
<arg>local_all_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-13T11:47:47.187217" elapsed="0.000130"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Starting local test container with ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-13T11:47:47.187418" elapsed="0.000136"/>
</kw>
<kw name="Create Docker Network" owner="MyDockerLibrary">
<arg>${NETWORK}</arg>
<status status="PASS" start="2025-06-13T11:47:47.187637" elapsed="0.008108"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<arg>${IMAGE}</arg>
<arg>local_all</arg>
<arg>${layer_tag}</arg>
<status status="PASS" start="2025-06-13T11:47:47.195940" elapsed="0.124009"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-06-13T11:48:22.392405" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-06-13T11:47:47.320175" elapsed="35.072275"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-06-13T11:48:22.392856" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Local test failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-06-13T11:48:22.392619" elapsed="0.000301"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-06-13T11:48:22.395631" level="INFO">${logs} = [Entrypoint] Starting local test (pub/sub/monitor) in mode local_shm
Shared memory monitoring is enabled (domain: ecal_mon - queue size: 1024)
[Publisher] Waiting for at least 2 subscriber(s) on topic...</msg>
<var>${logs}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-06-13T11:48:22.393056" elapsed="0.002601"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n\n[LOCAL TEST CONTAINER OUTPUT]\n\n${logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-13T11:48:22.395743" elapsed="0.000188"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Local Communication after one Subscriber crash ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-06-13T11:48:22.396027" elapsed="0.000168"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-06-13T11:48:22.396293" elapsed="0.005257"/>
</kw>
<arg>local_shm</arg>
<status status="PASS" start="2025-06-13T11:47:47.186723" elapsed="35.214888"/>
</kw>
<tag>sub_crash_local_shm</tag>
<status status="PASS" start="2025-06-13T11:47:47.186322" elapsed="35.215380"/>
</test>
<test id="s1-s6-t4" name="Local Communication Continues After Subscriber Crash (UDP)" line="42">
<kw name="Run Local Communication Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-13T11:48:22.403141" level="INFO">${IMAGE} = sub_crash_local_udp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-13T11:48:22.402977" elapsed="0.000186"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-13T11:48:22.403352" level="INFO">${CONTAINER} = local_all_local_udp</msg>
<var>${CONTAINER}</var>
<arg>local_all_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-13T11:48:22.403239" elapsed="0.000131"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Starting local test container with ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-13T11:48:22.403437" elapsed="0.000125"/>
</kw>
<kw name="Create Docker Network" owner="MyDockerLibrary">
<arg>${NETWORK}</arg>
<status status="PASS" start="2025-06-13T11:48:22.403652" elapsed="0.006838"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<arg>${IMAGE}</arg>
<arg>local_all</arg>
<arg>${layer_tag}</arg>
<status status="PASS" start="2025-06-13T11:48:22.410590" elapsed="0.108096"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-06-13T11:48:56.583922" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-06-13T11:48:22.518934" elapsed="34.065035"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-06-13T11:48:56.584358" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Local test failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-06-13T11:48:56.584136" elapsed="0.000282"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-06-13T11:48:56.587493" level="INFO">${logs} = [Entrypoint] Starting local test (pub/sub/monitor) in mode local_udp
[Publisher] Waiting for at least 2 subscriber(s) on topic: test_topic

[Crash Subscriber] Registered and sleeping before crash...

...</msg>
<var>${logs}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-06-13T11:48:56.584506" elapsed="0.003014"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n\n[LOCAL TEST CONTAINER OUTPUT]\n\n${logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-13T11:48:56.587608" elapsed="0.000160"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Local Communication after one Subscriber crash ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-06-13T11:48:56.587895" elapsed="0.000186"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-06-13T11:48:56.588181" elapsed="0.005517"/>
</kw>
<arg>local_udp</arg>
<status status="PASS" start="2025-06-13T11:48:22.402747" elapsed="34.191014"/>
</kw>
<tag>sub_crash_local_udp</tag>
<status status="PASS" start="2025-06-13T11:48:22.402334" elapsed="34.191547"/>
</test>
<test id="s1-s6-t5" name="Local Communication Continues After Subscriber Crash (TCP)" line="46">
<kw name="Run Local Communication Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-13T11:48:56.595205" level="INFO">${IMAGE} = sub_crash_local_tcp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-13T11:48:56.595064" elapsed="0.000162"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-13T11:48:56.595409" level="INFO">${CONTAINER} = local_all_local_tcp</msg>
<var>${CONTAINER}</var>
<arg>local_all_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-13T11:48:56.595300" elapsed="0.000126"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Starting local test container with ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-13T11:48:56.595491" elapsed="0.000141"/>
</kw>
<kw name="Create Docker Network" owner="MyDockerLibrary">
<arg>${NETWORK}</arg>
<status status="PASS" start="2025-06-13T11:48:56.595736" elapsed="0.007012"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<arg>${IMAGE}</arg>
<arg>local_all</arg>
<arg>${layer_tag}</arg>
<status status="PASS" start="2025-06-13T11:48:56.602879" elapsed="0.110690"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-06-13T11:49:30.777491" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-06-13T11:48:56.713779" elapsed="34.063754"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-06-13T11:49:30.777926" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Local test failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-06-13T11:49:30.777678" elapsed="0.000300"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-06-13T11:49:30.780896" level="INFO">${logs} = [Entrypoint] Starting local test (pub/sub/monitor) in mode local_tcp
[Publisher] Waiting for at least 2 subscriber(s) on topic: test_topic

[Crash Subscriber] Registered and sleeping before crash...

...</msg>
<var>${logs}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-06-13T11:49:30.778061" elapsed="0.002862"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n\n[LOCAL TEST CONTAINER OUTPUT]\n\n${logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-13T11:49:30.781011" elapsed="0.000164"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Local Communication after one Subscriber crash ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-06-13T11:49:30.781267" elapsed="0.000197"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-06-13T11:49:30.781568" elapsed="0.005869"/>
</kw>
<arg>local_tcp</arg>
<status status="PASS" start="2025-06-13T11:48:56.594867" elapsed="34.192630"/>
</kw>
<tag>sub_crash_local_tcp</tag>
<status status="PASS" start="2025-06-13T11:48:56.594466" elapsed="34.193124"/>
</test>
<status status="PASS" start="2025-06-13T11:46:25.770778" elapsed="185.017429"/>
</suite>
<suite id="s1-s7" name="Sub Send Crash" source="/home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/sub_send_crash/robottests/sub_send_crash.robot">
<kw name="Init Test Context" type="SETUP">
<kw name="Set Test Context" owner="GlobalPathsLibrary">
<arg>sub_send_crash</arg>
<arg>sub_send_crash</arg>
<doc>Sets the test folder (e.g. basic_pub_sub or message_validation) and tag prefix (e.g. basic_pub_sub).
Should be called once in Suite Setup if you're using non-default test cases.</doc>
<status status="PASS" start="2025-06-13T11:49:30.791376" elapsed="0.000106"/>
</kw>
<kw name="Get Build Script Path" owner="GlobalPathsLibrary">
<msg time="2025-06-13T11:49:30.791648" level="INFO">${build} = /home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/sub_send_crash/scripts/build_images.sh</msg>
<var>${build}</var>
<status status="PASS" start="2025-06-13T11:49:30.791561" elapsed="0.000107"/>
</kw>
<kw name="Get Network Name" owner="GlobalPathsLibrary">
<msg time="2025-06-13T11:49:30.791835" level="INFO">${net} = ecal_test_net</msg>
<var>${net}</var>
<status status="PASS" start="2025-06-13T11:49:30.791733" elapsed="0.000124"/>
</kw>
<kw name="Get Build Script Args" owner="GlobalPathsLibrary">
<msg time="2025-06-13T11:49:30.792047" level="INFO">${args} = ['sub_send_crash']</msg>
<var>${args}</var>
<status status="PASS" start="2025-06-13T11:49:30.791924" elapsed="0.000142"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-06-13T11:49:30.792278" level="INFO">${BUILD_SCRIPT} = /home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/sub_send_crash/scripts/build_images.sh</msg>
<arg>${BUILD_SCRIPT}</arg>
<arg>${build}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-06-13T11:49:30.792144" elapsed="0.000164"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-06-13T11:49:30.792496" level="INFO">${NETWORK} = ecal_test_net</msg>
<arg>${NETWORK}</arg>
<arg>${net}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-06-13T11:49:30.792381" elapsed="0.000141"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>[SETUP] Building image...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-13T11:49:30.792588" elapsed="0.000096"/>
</kw>
<kw name="Run Process" owner="Process">
<msg time="2025-06-13T11:49:30.792958" level="INFO">Starting process:
/home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/sub_send_crash/scripts/build_images.sh sub_send_crash</msg>
<msg time="2025-06-13T11:49:30.793315" level="INFO">Waiting for process to complete.</msg>
<msg time="2025-06-13T11:49:40.436774" level="INFO">Process completed.</msg>
<msg time="2025-06-13T11:49:40.436967" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<var>${result}</var>
<arg>${BUILD_SCRIPT}</arg>
<arg>@{args}</arg>
<doc>Runs a process and waits for it to complete.</doc>
<status status="PASS" start="2025-06-13T11:49:30.792779" elapsed="9.644213"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-06-13T11:49:40.437594" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${result.rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-06-13T11:49:40.437144" elapsed="0.000501"/>
</kw>
<kw name="Create Docker Network" owner="MyDockerLibrary">
<arg>${NETWORK}</arg>
<status status="PASS" start="2025-06-13T11:49:40.437729" elapsed="0.007140"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-06-13T11:49:43.445231" level="INFO">Slept 3 seconds.</msg>
<arg>3s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-06-13T11:49:40.444990" elapsed="3.000355"/>
</kw>
<status status="PASS" start="2025-06-13T11:49:30.791241" elapsed="12.654191"/>
</kw>
<test id="s1-s7-t1" name="Crash During Reception (SHM)" line="36">
<kw name="Run Local Crash Receive Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-13T11:49:43.446370" level="INFO">${IMAGE} = sub_send_crash_local_shm</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-13T11:49:43.446216" elapsed="0.000175"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-13T11:49:43.446847" level="INFO">${CONTAINER} = local_all_local_shm</msg>
<var>${CONTAINER}</var>
<arg>local_all_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-13T11:49:43.446467" elapsed="0.000401"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Starting crash test in LOCAL mode: ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-13T11:49:43.446945" elapsed="0.000140"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<arg>${IMAGE}</arg>
<arg>local_all</arg>
<arg>${layer_tag}</arg>
<arg>test_topic</arg>
<arg>${CONTAINER}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-06-13T11:49:43.447186" elapsed="0.127929"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-06-13T11:50:18.575612" level="INFO">Slept 35 seconds.</msg>
<arg>35s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-06-13T11:49:43.575296" elapsed="35.000444"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-06-13T11:50:18.578683" level="INFO">${logs} = [Entrypoint] Starting all processes locally in one container (mode local_shm)
Shared memory monitoring is enabled (domain: ecal_mon - queue size: 1024)
[Publisher] Prepared 100MB message.
[Publisher] ...</msg>
<var>${logs}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-06-13T11:50:18.575942" elapsed="0.002767"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[LOCAL TEST CONTAINER OUTPUT]\n${logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-13T11:50:18.578832" elapsed="0.000176"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-06-13T11:50:18.580273" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-06-13T11:50:18.579115" elapsed="0.001181"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-06-13T11:50:18.580511" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Local container failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-06-13T11:50:18.580377" elapsed="0.000178"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-06-13T11:50:18.582602" level="INFO">${logs} = [Entrypoint] Starting all processes locally in one container (mode local_shm)
Shared memory monitoring is enabled (domain: ecal_mon - queue size: 1024)
[Publisher] Prepared 100MB message.
[Publisher] ...</msg>
<var>${logs}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-06-13T11:50:18.580631" elapsed="0.001996"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Local Crash Receive Test ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-06-13T11:50:18.582706" elapsed="0.000185"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-06-13T11:50:18.582978" elapsed="0.005130"/>
</kw>
<arg>local_shm</arg>
<status status="PASS" start="2025-06-13T11:49:43.445977" elapsed="35.142190"/>
</kw>
<tag>crash_receive_local_shm</tag>
<status status="PASS" start="2025-06-13T11:49:43.445499" elapsed="35.142757"/>
</test>
<test id="s1-s7-t2" name="Crash with Zero Copy Enabled in Reception (SHM)" line="40">
<kw name="Run with Zero Copy Enabled Local Crash Receive Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-13T11:50:18.589389" level="INFO">${IMAGE} = sub_send_crash_local_shm</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-13T11:50:18.589253" elapsed="0.000156"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-13T11:50:18.589585" level="INFO">${CONTAINER} = zero_copy_local_all_local_shm</msg>
<var>${CONTAINER}</var>
<arg>zero_copy_local_all_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-13T11:50:18.589480" elapsed="0.000122"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Starting crash test with zero copy enabled in LOCAL mode: ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-13T11:50:18.589667" elapsed="0.000117"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<arg>${IMAGE}</arg>
<arg>zero_copy_local_all</arg>
<arg>${layer_tag}</arg>
<arg>test_topic</arg>
<arg>${CONTAINER}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-06-13T11:50:18.589903" elapsed="0.130745"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-06-13T11:50:53.721239" level="INFO">Slept 35 seconds.</msg>
<arg>35s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-06-13T11:50:18.720942" elapsed="35.000417"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-06-13T11:50:53.724280" level="INFO">${logs} = [Entrypoint] Starting all processes with Zero-Copy Publisher in one container (mode local_shm)
Shared memory monitoring is enabled (domain: ecal_mon - queue size: 1024)
[Publisher] Prepared 50MB messa...</msg>
<var>${logs}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-06-13T11:50:53.721522" elapsed="0.002784"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[LOCAL SHM WITH ZERO COPY TEST CONTAINER OUTPUT]\n${logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-13T11:50:53.724396" elapsed="0.000180"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-06-13T11:50:53.725909" level="INFO">${exit_code} = 1</msg>
<var>${exit_code}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-06-13T11:50:53.724671" elapsed="0.001262"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-06-13T11:50:53.726149" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg time="2025-06-13T11:50:53.726232" level="FAIL">Local container with zero copy shm failed!: 1 != 0</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Local container with zero copy shm failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="FAIL" start="2025-06-13T11:50:53.726012" elapsed="0.000279">Local container with zero copy shm failed!: 1 != 0</status>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<var>${logs}</var>
<arg>${CONTAINER}</arg>
<status status="NOT RUN" start="2025-06-13T11:50:53.726375" elapsed="0.000016"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Local Crash with zero copy enabled Test ${layer_tag}</arg>
<arg>${True}</arg>
<status status="NOT RUN" start="2025-06-13T11:50:53.726451" elapsed="0.000013"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<status status="NOT RUN" start="2025-06-13T11:50:53.726518" elapsed="0.000013"/>
</kw>
<arg>local_shm</arg>
<status status="FAIL" start="2025-06-13T11:50:18.589065" elapsed="35.137537">Local container with zero copy shm failed!: 1 != 0</status>
</kw>
<tag>zero_copy_crash_receive_local_shm</tag>
<status status="FAIL" start="2025-06-13T11:50:18.588700" elapsed="35.138009">Local container with zero copy shm failed!: 1 != 0</status>
</test>
<test id="s1-s7-t3" name="Crash During Reception (TCP)" line="49">
<kw name="Run Local Crash Receive Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-13T11:50:53.727924" level="INFO">${IMAGE} = sub_send_crash_local_tcp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-13T11:50:53.727758" elapsed="0.000186"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-13T11:50:53.728125" level="INFO">${CONTAINER} = local_all_local_tcp</msg>
<var>${CONTAINER}</var>
<arg>local_all_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-13T11:50:53.728017" elapsed="0.000126"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Starting crash test in LOCAL mode: ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-13T11:50:53.728209" elapsed="0.000135"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<arg>${IMAGE}</arg>
<arg>local_all</arg>
<arg>${layer_tag}</arg>
<arg>test_topic</arg>
<arg>${CONTAINER}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-06-13T11:50:53.728435" elapsed="0.136305"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-06-13T11:51:28.865294" level="INFO">Slept 35 seconds.</msg>
<arg>35s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-06-13T11:50:53.864967" elapsed="35.000450"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-06-13T11:51:28.868517" level="INFO">${logs} = [Entrypoint] Starting all processes locally in one container (mode local_tcp)
[Publisher] Prepared 100MB message.
[Publisher] Waiting for at least 2 subscriber(s) on topic: test_topic
1749815455867 ms...</msg>
<var>${logs}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-06-13T11:51:28.865588" elapsed="0.002955"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[LOCAL TEST CONTAINER OUTPUT]\n${logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-13T11:51:28.868633" elapsed="0.000188"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-06-13T11:51:28.870109" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-06-13T11:51:28.868928" elapsed="0.001206"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-06-13T11:51:28.870351" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Local container failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-06-13T11:51:28.870214" elapsed="0.000180"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-06-13T11:51:28.872464" level="INFO">${logs} = [Entrypoint] Starting all processes locally in one container (mode local_tcp)
[Publisher] Prepared 100MB message.
[Publisher] Waiting for at least 2 subscriber(s) on topic: test_topic
1749815455867 ms...</msg>
<var>${logs}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-06-13T11:51:28.870471" elapsed="0.002019"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Local Crash Receive Test ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-06-13T11:51:28.872569" elapsed="0.000160"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-06-13T11:51:28.872840" elapsed="0.004874"/>
</kw>
<arg>local_tcp</arg>
<status status="PASS" start="2025-06-13T11:50:53.727569" elapsed="35.150203"/>
</kw>
<tag>crash_receive_local_tcp</tag>
<status status="PASS" start="2025-06-13T11:50:53.727214" elapsed="35.150670"/>
</test>
<test id="s1-s7-t4" name="Crash During Reception (Network UDP)" line="53">
<kw name="Run Network Crash Receive Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-13T11:51:28.879183" level="INFO">${IMAGE} = sub_send_crash_network_udp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-13T11:51:28.879048" elapsed="0.000156"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-13T11:51:28.879359" level="INFO">${TOPIC} = test_topic</msg>
<var>${TOPIC}</var>
<arg>test_topic</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-13T11:51:28.879277" elapsed="0.000099"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-13T11:51:28.879548" level="INFO">${SUB_OK} = sub_ok_network_udp</msg>
<var>${SUB_OK}</var>
<arg>sub_ok_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-13T11:51:28.879442" elapsed="0.000123"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-13T11:51:28.879732" level="INFO">${SUB_CRASH} = sub_crash_network_udp</msg>
<var>${SUB_CRASH}</var>
<arg>sub_crash_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-13T11:51:28.879631" elapsed="0.000157"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-13T11:51:28.880006" level="INFO">${PUBLISHER} = pub_network_udp</msg>
<var>${PUBLISHER}</var>
<arg>pub_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-13T11:51:28.879895" elapsed="0.000128"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Starting crash test in NETWORK mode: ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-13T11:51:28.880090" elapsed="0.000124"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${SUB_OK}</arg>
<arg>${IMAGE}</arg>
<arg>test_subscriber</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${SUB_OK}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-06-13T11:51:28.880301" elapsed="0.126223"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${SUB_CRASH}</arg>
<arg>${IMAGE}</arg>
<arg>crash_subscriber</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${SUB_CRASH}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-06-13T11:51:29.006691" elapsed="0.125288"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${PUBLISHER}</arg>
<arg>${IMAGE}</arg>
<arg>large_publisher</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${PUBLISHER}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-06-13T11:51:29.132169" elapsed="0.132507"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${SUB_OK}</arg>
<status status="PASS" start="2025-06-13T11:51:29.264919" elapsed="30.810931"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${SUB_CRASH}</arg>
<status status="PASS" start="2025-06-13T11:52:00.076073" elapsed="0.001902"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${PUBLISHER}</arg>
<status status="PASS" start="2025-06-13T11:52:00.078105" elapsed="0.001043"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-06-13T11:52:00.081360" level="INFO">${log1} = [Entrypoint] Starting stable subscriber in mode network_udp
[Test_Sub] Ready and waiting...
[Test_Sub] Received 52428800 bytes (message 1)
[Test_Sub] Received 52428800 bytes (message 2)
[Test_Sub] Rec...</msg>
<var>${log1}</var>
<arg>${SUB_OK}</arg>
<status status="PASS" start="2025-06-13T11:52:00.079236" elapsed="0.002152"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-06-13T11:52:00.083503" level="INFO">${log2} = [Entrypoint] Starting crashing subscriber in mode network_udp
[Crash_Sub] Listening to topic 'test_topic' in mode 'network_udp'
[Crash_Sub] Received 52428800 bytes
[Crash_Sub] Simulating crash after 2...</msg>
<var>${log2}</var>
<arg>${SUB_CRASH}</arg>
<status status="PASS" start="2025-06-13T11:52:00.081471" elapsed="0.002057"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-06-13T11:52:00.085603" level="INFO">${log3} = [Entrypoint] Starting large publisher in mode network_udp
[Publisher] Prepared 100MB message.
[Publisher] Waiting for at least 2 subscriber(s) on topic: test_topic
[Publisher] Found 2 subscriber(s). P...</msg>
<var>${log3}</var>
<arg>${PUBLISHER}</arg>
<status status="PASS" start="2025-06-13T11:52:00.083610" elapsed="0.002018"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[LOG: SUBSCRIBER]\n${log1}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-13T11:52:00.085715" elapsed="0.000187"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[LOG: CRASH_SUBSCRIBER]\n${log2}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-13T11:52:00.086009" elapsed="0.000170"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[LOG: PUBLISHER]\n${log3}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-13T11:52:00.086284" elapsed="0.000162"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-06-13T11:52:00.087824" level="INFO">${exit1} = 0</msg>
<var>${exit1}</var>
<arg>${SUB_OK}</arg>
<status status="PASS" start="2025-06-13T11:52:00.086545" elapsed="0.001308"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-06-13T11:52:00.088086" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit1}</arg>
<arg>0</arg>
<arg>Stable subscriber failed unexpectedly!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-06-13T11:52:00.087940" elapsed="0.000194"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Network Crash Receive Test ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-06-13T11:52:00.088215" elapsed="0.000153"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${SUB_OK}</arg>
<status status="PASS" start="2025-06-13T11:52:00.088453" elapsed="0.004884"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${SUB_CRASH}</arg>
<status status="PASS" start="2025-06-13T11:52:00.093419" elapsed="0.005194"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${PUBLISHER}</arg>
<status status="PASS" start="2025-06-13T11:52:00.098698" elapsed="0.005183"/>
</kw>
<arg>network_udp</arg>
<arg>network</arg>
<status status="PASS" start="2025-06-13T11:51:28.878841" elapsed="31.225101"/>
</kw>
<tag>crash_receive_network_udp</tag>
<status status="PASS" start="2025-06-13T11:51:28.878434" elapsed="31.225604"/>
</test>
<test id="s1-s7-t5" name="Crash During Reception (Network TCP)" line="57">
<kw name="Run Network Crash Receive Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-13T11:52:00.105538" level="INFO">${IMAGE} = sub_send_crash_network_tcp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-13T11:52:00.105401" elapsed="0.000159"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-13T11:52:00.105717" level="INFO">${TOPIC} = test_topic</msg>
<var>${TOPIC}</var>
<arg>test_topic</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-13T11:52:00.105633" elapsed="0.000102"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-13T11:52:00.105946" level="INFO">${SUB_OK} = sub_ok_network_tcp</msg>
<var>${SUB_OK}</var>
<arg>sub_ok_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-13T11:52:00.105824" elapsed="0.000140"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-13T11:52:00.106156" level="INFO">${SUB_CRASH} = sub_crash_network_tcp</msg>
<var>${SUB_CRASH}</var>
<arg>sub_crash_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-13T11:52:00.106034" elapsed="0.000139"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-13T11:52:00.106343" level="INFO">${PUBLISHER} = pub_network_tcp</msg>
<var>${PUBLISHER}</var>
<arg>pub_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-13T11:52:00.106239" elapsed="0.000120"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Starting crash test in NETWORK mode: ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-13T11:52:00.106423" elapsed="0.000124"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${SUB_OK}</arg>
<arg>${IMAGE}</arg>
<arg>test_subscriber</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${SUB_OK}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-06-13T11:52:00.106635" elapsed="0.134667"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${SUB_CRASH}</arg>
<arg>${IMAGE}</arg>
<arg>crash_subscriber</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${SUB_CRASH}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-06-13T11:52:00.241613" elapsed="0.129852"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${PUBLISHER}</arg>
<arg>${IMAGE}</arg>
<arg>large_publisher</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${PUBLISHER}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-06-13T11:52:00.371684" elapsed="0.129223"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${SUB_OK}</arg>
<status status="PASS" start="2025-06-13T11:52:00.501113" elapsed="30.809735"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${SUB_CRASH}</arg>
<status status="PASS" start="2025-06-13T11:52:31.311042" elapsed="0.001541"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${PUBLISHER}</arg>
<status status="PASS" start="2025-06-13T11:52:31.312673" elapsed="0.001107"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-06-13T11:52:31.316143" level="INFO">${log1} = [Entrypoint] Starting stable subscriber in mode network_tcp
[Test_Sub] Ready and waiting...
[Test_Sub] Received 52428800 bytes (message 1)
[Test_Sub] Received 52428800 bytes (message 2)
[Test_Sub] Rec...</msg>
<var>${log1}</var>
<arg>${SUB_OK}</arg>
<status status="PASS" start="2025-06-13T11:52:31.313895" elapsed="0.002277"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-06-13T11:52:31.318378" level="INFO">${log2} = [Entrypoint] Starting crashing subscriber in mode network_tcp
[Crash_Sub] Listening to topic 'test_topic' in mode 'network_tcp'
[Crash_Sub] Received 52428800 bytes
[Crash_Sub] Simulating crash after 2...</msg>
<var>${log2}</var>
<arg>${SUB_CRASH}</arg>
<status status="PASS" start="2025-06-13T11:52:31.316260" elapsed="0.002145"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-06-13T11:52:31.320578" level="INFO">${log3} = [Entrypoint] Starting large publisher in mode network_tcp
[Publisher] Prepared 100MB message.
[Publisher] Waiting for at least 2 subscriber(s) on topic: test_topic
1749815521244 ms | 4166145b7b81 | la...</msg>
<var>${log3}</var>
<arg>${PUBLISHER}</arg>
<status status="PASS" start="2025-06-13T11:52:31.318490" elapsed="0.002113"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[LOG: SUBSCRIBER]\n${log1}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-13T11:52:31.320690" elapsed="0.000196"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[LOG: CRASH_SUBSCRIBER]\n${log2}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-13T11:52:31.320988" elapsed="0.000146"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[LOG: PUBLISHER]\n${log3}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-13T11:52:31.321221" elapsed="0.000147"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-06-13T11:52:31.322961" level="INFO">${exit1} = 0</msg>
<var>${exit1}</var>
<arg>${SUB_OK}</arg>
<status status="PASS" start="2025-06-13T11:52:31.321448" elapsed="0.001546"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-06-13T11:52:31.323317" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit1}</arg>
<arg>0</arg>
<arg>Stable subscriber failed unexpectedly!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-06-13T11:52:31.323109" elapsed="0.000282"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Network Crash Receive Test ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-06-13T11:52:31.323512" elapsed="0.000216"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${SUB_OK}</arg>
<status status="PASS" start="2025-06-13T11:52:31.323862" elapsed="0.005206"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${SUB_CRASH}</arg>
<status status="PASS" start="2025-06-13T11:52:31.329172" elapsed="0.005464"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${PUBLISHER}</arg>
<status status="PASS" start="2025-06-13T11:52:31.334745" elapsed="0.005213"/>
</kw>
<arg>network_tcp</arg>
<arg>network</arg>
<status status="PASS" start="2025-06-13T11:52:00.105199" elapsed="31.234836"/>
</kw>
<tag>crash_receive_network_tcp</tag>
<status status="PASS" start="2025-06-13T11:52:00.104781" elapsed="31.235353"/>
</test>
<status status="FAIL" start="2025-06-13T11:49:30.788775" elapsed="180.552444"/>
</suite>
<status status="FAIL" start="2025-06-13T11:40:14.941971" elapsed="736.399983"/>
</suite>
<statistics>
<total>
<stat pass="20" fail="6" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">basic_pub_sub_local_shm</stat>
<stat pass="1" fail="0" skip="0">basic_pub_sub_local_tcp</stat>
<stat pass="1" fail="0" skip="0">basic_pub_sub_local_udp</stat>
<stat pass="1" fail="0" skip="0">basic_pub_sub_network_tcp</stat>
<stat pass="1" fail="0" skip="0">basic_pub_sub_network_udp</stat>
<stat pass="1" fail="0" skip="0">crash_receive_local_shm</stat>
<stat pass="1" fail="0" skip="0">crash_receive_local_tcp</stat>
<stat pass="1" fail="0" skip="0">crash_receive_network_tcp</stat>
<stat pass="1" fail="0" skip="0">crash_receive_network_udp</stat>
<stat pass="0" fail="1" skip="0">message_validation_malformed</stat>
<stat pass="0" fail="1" skip="0">message_validation_valid</stat>
<stat pass="0" fail="1" skip="0">multi_pub_sub_local_shm</stat>
<stat pass="0" fail="1" skip="0">multi_pub_sub_local_tcp</stat>
<stat pass="1" fail="0" skip="0">multi_pub_sub_local_udp</stat>
<stat pass="1" fail="0" skip="0">multi_pub_sub_network_tcp</stat>
<stat pass="1" fail="0" skip="0">multi_pub_sub_network_udp</stat>
<stat pass="1" fail="0" skip="0">network_crash_test</stat>
<stat pass="0" fail="1" skip="0">pub_crash_local_shm</stat>
<stat pass="2" fail="0" skip="0">pub_crash_network_tcp</stat>
<stat pass="1" fail="0" skip="0">pub_crash_network_udp</stat>
<stat pass="1" fail="0" skip="0">sub_crash_local_shm</stat>
<stat pass="1" fail="0" skip="0">sub_crash_local_tcp</stat>
<stat pass="1" fail="0" skip="0">sub_crash_local_udp</stat>
<stat pass="1" fail="0" skip="0">sub_crash_network_udp</stat>
<stat pass="0" fail="1" skip="0">zero_copy_crash_receive_local_shm</stat>
</tag>
<suite>
<stat name="Basic Pub Sub &amp; Message Validation &amp; Multi Pub Sub &amp; Network Crash &amp; Pub Crash &amp; Sub Crash &amp; Sub Send Crash" id="s1" pass="20" fail="6" skip="0">Basic Pub Sub &amp; Message Validation &amp; Multi Pub Sub &amp; Network Crash &amp; Pub Crash &amp; Sub Crash &amp; Sub Send Crash</stat>
<stat name="Basic Pub Sub" id="s1-s1" pass="5" fail="0" skip="0">Basic Pub Sub &amp; Message Validation &amp; Multi Pub Sub &amp; Network Crash &amp; Pub Crash &amp; Sub Crash &amp; Sub Send Crash.Basic Pub Sub</stat>
<stat name="Message Validation" id="s1-s2" pass="0" fail="2" skip="0">Basic Pub Sub &amp; Message Validation &amp; Multi Pub Sub &amp; Network Crash &amp; Pub Crash &amp; Sub Crash &amp; Sub Send Crash.Message Validation</stat>
<stat name="Multi Pub Sub" id="s1-s3" pass="3" fail="2" skip="0">Basic Pub Sub &amp; Message Validation &amp; Multi Pub Sub &amp; Network Crash &amp; Pub Crash &amp; Sub Crash &amp; Sub Send Crash.Multi Pub Sub</stat>
<stat name="Network Crash" id="s1-s4" pass="1" fail="0" skip="0">Basic Pub Sub &amp; Message Validation &amp; Multi Pub Sub &amp; Network Crash &amp; Pub Crash &amp; Sub Crash &amp; Sub Send Crash.Network Crash</stat>
<stat name="Pub Crash" id="s1-s5" pass="2" fail="1" skip="0">Basic Pub Sub &amp; Message Validation &amp; Multi Pub Sub &amp; Network Crash &amp; Pub Crash &amp; Sub Crash &amp; Sub Send Crash.Pub Crash</stat>
<stat name="Sub Crash" id="s1-s6" pass="5" fail="0" skip="0">Basic Pub Sub &amp; Message Validation &amp; Multi Pub Sub &amp; Network Crash &amp; Pub Crash &amp; Sub Crash &amp; Sub Send Crash.Sub Crash</stat>
<stat name="Sub Send Crash" id="s1-s7" pass="4" fail="1" skip="0">Basic Pub Sub &amp; Message Validation &amp; Multi Pub Sub &amp; Network Crash &amp; Pub Crash &amp; Sub Crash &amp; Sub Send Crash.Sub Send Crash</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
