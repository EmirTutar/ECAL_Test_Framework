<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 7.3 (Python 3.12.3 on linux)" generated="2025-06-11T14:19:25.113241" rpa="false" schemaversion="5">
<suite id="s1" name="Sub Send Crash" source="/home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/sub_send_crash/robottests/sub_send_crash.robot">
<kw name="Init Test Context" type="SETUP">
<kw name="Set Test Context" owner="GlobalPathsLibrary">
<arg>sub_send_crash</arg>
<arg>sub_send_crash</arg>
<doc>Sets the test folder (e.g. basic_pub_sub or message_validation) and tag prefix (e.g. basic_pub_sub).
Should be called once in Suite Setup if you're using non-default test cases.</doc>
<status status="PASS" start="2025-06-11T14:19:25.209444" elapsed="0.000172"/>
</kw>
<kw name="Get Build Script Path" owner="GlobalPathsLibrary">
<msg time="2025-06-11T14:19:25.209855" level="INFO">${build} = /home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/sub_send_crash/scripts/build_images.sh</msg>
<var>${build}</var>
<status status="PASS" start="2025-06-11T14:19:25.209736" elapsed="0.000147"/>
</kw>
<kw name="Get Network Name" owner="GlobalPathsLibrary">
<msg time="2025-06-11T14:19:25.210048" level="INFO">${net} = ecal_test_net</msg>
<var>${net}</var>
<status status="PASS" start="2025-06-11T14:19:25.209960" elapsed="0.000113"/>
</kw>
<kw name="Get Build Script Args" owner="GlobalPathsLibrary">
<msg time="2025-06-11T14:19:25.210226" level="INFO">${args} = ['sub_send_crash']</msg>
<var>${args}</var>
<status status="PASS" start="2025-06-11T14:19:25.210142" elapsed="0.000103"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-06-11T14:19:25.210533" level="INFO">${BUILD_SCRIPT} = /home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/sub_send_crash/scripts/build_images.sh</msg>
<arg>${BUILD_SCRIPT}</arg>
<arg>${build}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-06-11T14:19:25.210340" elapsed="0.000228"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-06-11T14:19:25.210787" level="INFO">${NETWORK} = ecal_test_net</msg>
<arg>${NETWORK}</arg>
<arg>${net}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-06-11T14:19:25.210652" elapsed="0.000166"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>[SETUP] Building image...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-11T14:19:25.210889" elapsed="0.000105"/>
</kw>
<kw name="Run Process" owner="Process">
<msg time="2025-06-11T14:19:25.211278" level="INFO">Starting process:
/home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/sub_send_crash/scripts/build_images.sh sub_send_crash</msg>
<msg time="2025-06-11T14:19:25.211783" level="INFO">Waiting for process to complete.</msg>
<msg time="2025-06-11T14:19:35.110855" level="INFO">Process completed.</msg>
<msg time="2025-06-11T14:19:35.111026" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<var>${result}</var>
<arg>${BUILD_SCRIPT}</arg>
<arg>@{args}</arg>
<doc>Runs a process and waits for it to complete.</doc>
<status status="PASS" start="2025-06-11T14:19:25.211097" elapsed="9.899954"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-06-11T14:19:35.111698" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${result.rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-06-11T14:19:35.111197" elapsed="0.000557"/>
</kw>
<kw name="Create Docker Network" owner="MyDockerLibrary">
<arg>${NETWORK}</arg>
<status status="PASS" start="2025-06-11T14:19:35.111839" elapsed="0.007304"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-06-11T14:19:38.119519" level="INFO">Slept 3 seconds.</msg>
<arg>3s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-06-11T14:19:35.119266" elapsed="3.000383"/>
</kw>
<status status="PASS" start="2025-06-11T14:19:25.208950" elapsed="12.910808"/>
</kw>
<test id="s1-t1" name="Crash During Reception (SHM)" line="36">
<kw name="Run Local Crash Receive Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-11T14:19:38.120954" level="INFO">${IMAGE} = sub_send_crash_local_shm</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-11T14:19:38.120793" elapsed="0.000183"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-11T14:19:38.121166" level="INFO">${CONTAINER} = local_all_local_shm</msg>
<var>${CONTAINER}</var>
<arg>local_all_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-11T14:19:38.121054" elapsed="0.000131"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Starting crash test in LOCAL mode: ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-11T14:19:38.121252" elapsed="0.000123"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<arg>${IMAGE}</arg>
<arg>local_all</arg>
<arg>${layer_tag}</arg>
<arg>test_topic</arg>
<arg>${CONTAINER}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-06-11T14:19:38.121491" elapsed="0.132934"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-06-11T14:20:13.255036" level="INFO">Slept 35 seconds.</msg>
<arg>35s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-06-11T14:19:38.254673" elapsed="35.000487"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-06-11T14:20:13.258299" level="INFO">${logs} = [Entrypoint] Starting all processes locally in one container (mode local_shm)
Shared memory monitoring is enabled (domain: ecal_mon - queue size: 1024)
[Publisher] Prepared 100MB message.
[Publisher] ...</msg>
<var>${logs}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-06-11T14:20:13.255334" elapsed="0.002993"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[LOCAL TEST CONTAINER OUTPUT]\n${logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-11T14:20:13.258444" elapsed="0.000171"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-06-11T14:20:13.259855" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-06-11T14:20:13.258715" elapsed="0.001164"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-06-11T14:20:13.260106" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Local container failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-06-11T14:20:13.259961" elapsed="0.000192"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-06-11T14:20:13.262275" level="INFO">${logs} = [Entrypoint] Starting all processes locally in one container (mode local_shm)
Shared memory monitoring is enabled (domain: ecal_mon - queue size: 1024)
[Publisher] Prepared 100MB message.
[Publisher] ...</msg>
<var>${logs}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-06-11T14:20:13.260231" elapsed="0.002071"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Local Crash Receive Test ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-06-11T14:20:13.262385" elapsed="0.000188"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-06-11T14:20:13.262659" elapsed="0.005219"/>
</kw>
<arg>local_shm</arg>
<status status="PASS" start="2025-06-11T14:19:38.120541" elapsed="35.147403"/>
</kw>
<tag>crash_receive_local_shm</tag>
<status status="PASS" start="2025-06-11T14:19:38.119840" elapsed="35.148208"/>
</test>
<test id="s1-t2" name="Crash with Zero Copy Enabled in Reception (SHM)" line="40">
<kw name="Run with Zero Copy Enabled Local Crash Receive Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-11T14:20:13.269371" level="INFO">${IMAGE} = sub_send_crash_local_shm</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-11T14:20:13.269230" elapsed="0.000182"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-11T14:20:13.269609" level="INFO">${CONTAINER} = zero_copy_local_all_local_shm</msg>
<var>${CONTAINER}</var>
<arg>zero_copy_local_all_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-11T14:20:13.269495" elapsed="0.000132"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Starting crash test with zero copy enabled in LOCAL mode: ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-11T14:20:13.269695" elapsed="0.000129"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<arg>${IMAGE}</arg>
<arg>zero_copy_local_all</arg>
<arg>${layer_tag}</arg>
<arg>test_topic</arg>
<arg>${CONTAINER}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-06-11T14:20:13.269916" elapsed="0.126435"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-06-11T14:20:48.396956" level="INFO">Slept 35 seconds.</msg>
<arg>35s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-06-11T14:20:13.396621" elapsed="35.000451"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-06-11T14:20:48.399933" level="INFO">${logs} = [Entrypoint] Starting all processes with Zero-Copy Publisher in one container (mode local_shm)
Shared memory monitoring is enabled (domain: ecal_mon - queue size: 1024)
[Publisher] Prepared 50MB messa...</msg>
<var>${logs}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-06-11T14:20:48.397240" elapsed="0.002719"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[LOCAL SHM WITH ZERO COPY TEST CONTAINER OUTPUT]\n${logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-11T14:20:48.400049" elapsed="0.000155"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-06-11T14:20:48.401495" level="INFO">${exit_code} = 1</msg>
<var>${exit_code}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-06-11T14:20:48.400314" elapsed="0.001204"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-06-11T14:20:48.401732" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg time="2025-06-11T14:20:48.401843" level="FAIL">Local container with zero copy shm failed!: 1 != 0</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Local container with zero copy shm failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="FAIL" start="2025-06-11T14:20:48.401597" elapsed="0.000389">Local container with zero copy shm failed!: 1 != 0</status>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<var>${logs}</var>
<arg>${CONTAINER}</arg>
<status status="NOT RUN" start="2025-06-11T14:20:48.402082" elapsed="0.000017"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Local Crash with zero copy enabled Test ${layer_tag}</arg>
<arg>${True}</arg>
<status status="NOT RUN" start="2025-06-11T14:20:48.402163" elapsed="0.000017"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<status status="NOT RUN" start="2025-06-11T14:20:48.402238" elapsed="0.000013"/>
</kw>
<arg>local_shm</arg>
<status status="FAIL" start="2025-06-11T14:20:13.269030" elapsed="35.133310">Local container with zero copy shm failed!: 1 != 0</status>
</kw>
<tag>zero_copy_crash_receive_local_shm</tag>
<status status="FAIL" start="2025-06-11T14:20:13.268658" elapsed="35.133827">Local container with zero copy shm failed!: 1 != 0</status>
</test>
<test id="s1-t3" name="Crash During Reception (TCP)" line="49">
<kw name="Run Local Crash Receive Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-11T14:20:48.403601" level="INFO">${IMAGE} = sub_send_crash_local_tcp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-11T14:20:48.403463" elapsed="0.000158"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-11T14:20:48.403799" level="INFO">${CONTAINER} = local_all_local_tcp</msg>
<var>${CONTAINER}</var>
<arg>local_all_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-11T14:20:48.403692" elapsed="0.000124"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Starting crash test in LOCAL mode: ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-11T14:20:48.403881" elapsed="0.000115"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<arg>${IMAGE}</arg>
<arg>local_all</arg>
<arg>${layer_tag}</arg>
<arg>test_topic</arg>
<arg>${CONTAINER}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-06-11T14:20:48.404086" elapsed="0.130385"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-06-11T14:21:23.535042" level="INFO">Slept 35 seconds.</msg>
<arg>35s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-06-11T14:20:48.534701" elapsed="35.000461"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-06-11T14:21:23.538080" level="INFO">${logs} = [Entrypoint] Starting all processes locally in one container (mode local_tcp)
[Publisher] Prepared 100MB message.
[Publisher] Waiting for at least 2 subscriber(s) on topic: test_topic
1749651650537 ms...</msg>
<var>${logs}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-06-11T14:21:23.535334" elapsed="0.002773"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[LOCAL TEST CONTAINER OUTPUT]\n${logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-11T14:21:23.538203" elapsed="0.000169"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-06-11T14:21:23.539777" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-06-11T14:21:23.538494" elapsed="0.001307"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-06-11T14:21:23.540049" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Local container failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-06-11T14:21:23.539887" elapsed="0.000231"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-06-11T14:21:23.543275" level="INFO">${logs} = [Entrypoint] Starting all processes locally in one container (mode local_tcp)
[Publisher] Prepared 100MB message.
[Publisher] Waiting for at least 2 subscriber(s) on topic: test_topic
1749651650537 ms...</msg>
<var>${logs}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-06-11T14:21:23.540240" elapsed="0.003071"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Local Crash Receive Test ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-06-11T14:21:23.543465" elapsed="0.000184"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-06-11T14:21:23.543739" elapsed="0.005400"/>
</kw>
<arg>local_tcp</arg>
<status status="PASS" start="2025-06-11T14:20:48.403250" elapsed="35.145950"/>
</kw>
<tag>crash_receive_local_tcp</tag>
<status status="PASS" start="2025-06-11T14:20:48.402932" elapsed="35.146398"/>
</test>
<test id="s1-t4" name="Crash During Reception (Network UDP)" line="53">
<kw name="Run Network Crash Receive Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-11T14:21:23.550662" level="INFO">${IMAGE} = sub_send_crash_network_udp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-11T14:21:23.550523" elapsed="0.000159"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-11T14:21:23.550837" level="INFO">${TOPIC} = test_topic</msg>
<var>${TOPIC}</var>
<arg>test_topic</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-11T14:21:23.550755" elapsed="0.000100"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-11T14:21:23.551049" level="INFO">${SUB_OK} = sub_ok_network_udp</msg>
<var>${SUB_OK}</var>
<arg>sub_ok_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-11T14:21:23.550932" elapsed="0.000133"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-11T14:21:23.551231" level="INFO">${SUB_CRASH} = sub_crash_network_udp</msg>
<var>${SUB_CRASH}</var>
<arg>sub_crash_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-11T14:21:23.551130" elapsed="0.000117"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-11T14:21:23.551452" level="INFO">${PUBLISHER} = pub_network_udp</msg>
<var>${PUBLISHER}</var>
<arg>pub_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-11T14:21:23.551311" elapsed="0.000161"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Starting crash test in NETWORK mode: ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-11T14:21:23.551541" elapsed="0.000130"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${SUB_OK}</arg>
<arg>${IMAGE}</arg>
<arg>test_subscriber</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${SUB_OK}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-06-11T14:21:23.551761" elapsed="0.127739"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${SUB_CRASH}</arg>
<arg>${IMAGE}</arg>
<arg>crash_subscriber</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${SUB_CRASH}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-06-11T14:21:23.679666" elapsed="0.120125"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${PUBLISHER}</arg>
<arg>${IMAGE}</arg>
<arg>large_publisher</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${PUBLISHER}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-06-11T14:21:23.799990" elapsed="0.121954"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${SUB_OK}</arg>
<status status="PASS" start="2025-06-11T14:21:23.922112" elapsed="30.831204"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${SUB_CRASH}</arg>
<status status="PASS" start="2025-06-11T14:21:54.753580" elapsed="0.001515"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${PUBLISHER}</arg>
<status status="PASS" start="2025-06-11T14:21:54.755190" elapsed="0.001066"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-06-11T14:21:54.758571" level="INFO">${log1} = [Entrypoint] Starting stable subscriber in mode network_udp
[Test_Sub] Ready and waiting...
[Test_Sub] Received 52428800 bytes (message 1)
[Test_Sub] Received 52428800 bytes (message 2)
[Test_Sub] Rec...</msg>
<var>${log1}</var>
<arg>${SUB_OK}</arg>
<status status="PASS" start="2025-06-11T14:21:54.756348" elapsed="0.002251"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-06-11T14:21:54.760710" level="INFO">${log2} = [Entrypoint] Starting crashing subscriber in mode network_udp
[Crash_Sub] Simulating crash after 2 seconds during active reception
[Crash_Sub] Listening to topic 'test_topic' in mode 'network_udp'
[Cr...</msg>
<var>${log2}</var>
<arg>${SUB_CRASH}</arg>
<status status="PASS" start="2025-06-11T14:21:54.758682" elapsed="0.002054"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-06-11T14:21:54.762858" level="INFO">${log3} = [Entrypoint] Starting large publisher in mode network_udp
[Publisher] Prepared 100MB message.
[Publisher] Waiting for at least 2 subscriber(s) on topic: test_topic
[Publisher] Found 2 subscriber(s). P...</msg>
<var>${log3}</var>
<arg>${PUBLISHER}</arg>
<status status="PASS" start="2025-06-11T14:21:54.760820" elapsed="0.002063"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[LOG: SUBSCRIBER]\n${log1}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-11T14:21:54.762967" elapsed="0.000154"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[LOG: CRASH_SUBSCRIBER]\n${log2}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-11T14:21:54.763226" elapsed="0.000150"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[LOG: PUBLISHER]\n${log3}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-11T14:21:54.763515" elapsed="0.000139"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-06-11T14:21:54.764681" level="INFO">${exit1} = 0</msg>
<var>${exit1}</var>
<arg>${SUB_OK}</arg>
<status status="PASS" start="2025-06-11T14:21:54.763758" elapsed="0.000948"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-06-11T14:21:54.764937" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit1}</arg>
<arg>0</arg>
<arg>Stable subscriber failed unexpectedly!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-06-11T14:21:54.764790" elapsed="0.000194"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Network Crash Receive Test ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-06-11T14:21:54.765063" elapsed="0.000154"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${SUB_OK}</arg>
<status status="PASS" start="2025-06-11T14:21:54.765306" elapsed="0.005202"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${SUB_CRASH}</arg>
<status status="PASS" start="2025-06-11T14:21:54.770604" elapsed="0.004961"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${PUBLISHER}</arg>
<status status="PASS" start="2025-06-11T14:21:54.775654" elapsed="0.004823"/>
</kw>
<arg>network_udp</arg>
<arg>network</arg>
<status status="PASS" start="2025-06-11T14:21:23.550286" elapsed="31.230254"/>
</kw>
<tag>crash_receive_network_udp</tag>
<status status="PASS" start="2025-06-11T14:21:23.549890" elapsed="31.230744"/>
</test>
<test id="s1-t5" name="Crash During Reception (Network TCP)" line="57">
<kw name="Run Network Crash Receive Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-11T14:21:54.782261" level="INFO">${IMAGE} = sub_send_crash_network_tcp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-11T14:21:54.782122" elapsed="0.000160"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-11T14:21:54.782485" level="INFO">${TOPIC} = test_topic</msg>
<var>${TOPIC}</var>
<arg>test_topic</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-11T14:21:54.782356" elapsed="0.000149"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-11T14:21:54.782702" level="INFO">${SUB_OK} = sub_ok_network_tcp</msg>
<var>${SUB_OK}</var>
<arg>sub_ok_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-11T14:21:54.782579" elapsed="0.000185"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-11T14:21:54.782948" level="INFO">${SUB_CRASH} = sub_crash_network_tcp</msg>
<var>${SUB_CRASH}</var>
<arg>sub_crash_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-11T14:21:54.782838" elapsed="0.000128"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-11T14:21:54.783135" level="INFO">${PUBLISHER} = pub_network_tcp</msg>
<var>${PUBLISHER}</var>
<arg>pub_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-11T14:21:54.783032" elapsed="0.000121"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Starting crash test in NETWORK mode: ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-11T14:21:54.783218" elapsed="0.000116"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${SUB_OK}</arg>
<arg>${IMAGE}</arg>
<arg>test_subscriber</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${SUB_OK}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-06-11T14:21:54.783448" elapsed="0.132719"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${SUB_CRASH}</arg>
<arg>${IMAGE}</arg>
<arg>crash_subscriber</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${SUB_CRASH}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-06-11T14:21:54.916338" elapsed="0.130379"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${PUBLISHER}</arg>
<arg>${IMAGE}</arg>
<arg>large_publisher</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${PUBLISHER}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-06-11T14:21:55.046912" elapsed="0.121701"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${SUB_OK}</arg>
<status status="PASS" start="2025-06-11T14:21:55.168802" elapsed="30.811482"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${SUB_CRASH}</arg>
<status status="PASS" start="2025-06-11T14:22:25.980499" elapsed="0.001492"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${PUBLISHER}</arg>
<status status="PASS" start="2025-06-11T14:22:25.982089" elapsed="0.001049"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-06-11T14:22:25.985489" level="INFO">${log1} = [Entrypoint] Starting stable subscriber in mode network_tcp
[Test_Sub] Ready and waiting...
[Test_Sub] Received 52428800 bytes (message 1)
[Test_Sub] Received 52428800 bytes (message 2)
[Test_Sub] Rec...</msg>
<var>${log1}</var>
<arg>${SUB_OK}</arg>
<status status="PASS" start="2025-06-11T14:22:25.983227" elapsed="0.002290"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-06-11T14:22:25.987695" level="INFO">${log2} = [Entrypoint] Starting crashing subscriber in mode network_tcp
[Crash_Sub] Listening to topic 'test_topic' in mode 'network_tcp'
[Crash_Sub] Received 52428800 bytes
[Crash_Sub] Simulating crash after 2...</msg>
<var>${log2}</var>
<arg>${SUB_CRASH}</arg>
<status status="PASS" start="2025-06-11T14:22:25.985601" elapsed="0.002120"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-06-11T14:22:25.989863" level="INFO">${log3} = [Entrypoint] Starting large publisher in mode network_tcp
[Publisher] Prepared 100MB message.
[Publisher] Waiting for at least 2 subscriber(s) on topic: test_topic
1749651715918 ms | b312e84584c9 | la...</msg>
<var>${log3}</var>
<arg>${PUBLISHER}</arg>
<status status="PASS" start="2025-06-11T14:22:25.987805" elapsed="0.002084"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[LOG: SUBSCRIBER]\n${log1}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-11T14:22:25.989974" elapsed="0.000158"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[LOG: CRASH_SUBSCRIBER]\n${log2}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-11T14:22:25.990232" elapsed="0.000187"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[LOG: PUBLISHER]\n${log3}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-11T14:22:25.990527" elapsed="0.000162"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-06-11T14:22:25.991738" level="INFO">${exit1} = 0</msg>
<var>${exit1}</var>
<arg>${SUB_OK}</arg>
<status status="PASS" start="2025-06-11T14:22:25.990784" elapsed="0.000977"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-06-11T14:22:25.991977" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit1}</arg>
<arg>0</arg>
<arg>Stable subscriber failed unexpectedly!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-06-11T14:22:25.991842" elapsed="0.000178"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Network Crash Receive Test ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-06-11T14:22:25.992095" elapsed="0.000145"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${SUB_OK}</arg>
<status status="PASS" start="2025-06-11T14:22:25.992332" elapsed="0.005162"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${SUB_CRASH}</arg>
<status status="PASS" start="2025-06-11T14:22:25.997580" elapsed="0.008730"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${PUBLISHER}</arg>
<status status="PASS" start="2025-06-11T14:22:26.006450" elapsed="0.005261"/>
</kw>
<arg>network_tcp</arg>
<arg>network</arg>
<status status="PASS" start="2025-06-11T14:21:54.781915" elapsed="31.229858"/>
</kw>
<tag>crash_receive_network_tcp</tag>
<status status="PASS" start="2025-06-11T14:21:54.781530" elapsed="31.230348"/>
</test>
<status status="FAIL" start="2025-06-11T14:19:25.114012" elapsed="180.899195"/>
</suite>
<statistics>
<total>
<stat pass="4" fail="1" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">crash_receive_local_shm</stat>
<stat pass="1" fail="0" skip="0">crash_receive_local_tcp</stat>
<stat pass="1" fail="0" skip="0">crash_receive_network_tcp</stat>
<stat pass="1" fail="0" skip="0">crash_receive_network_udp</stat>
<stat pass="0" fail="1" skip="0">zero_copy_crash_receive_local_shm</stat>
</tag>
<suite>
<stat name="Sub Send Crash" id="s1" pass="4" fail="1" skip="0">Sub Send Crash</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
