<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 7.3 (Python 3.12.3 on linux)" generated="2025-06-12T10:24:59.679473" rpa="false" schemaversion="5">
<suite id="s1" name="Sub Send Crash" source="/home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/sub_send_crash/robottests/sub_send_crash.robot">
<kw name="Init Test Context" type="SETUP">
<kw name="Set Test Context" owner="GlobalPathsLibrary">
<arg>sub_send_crash</arg>
<arg>sub_send_crash</arg>
<doc>Sets the test folder (e.g. basic_pub_sub or message_validation) and tag prefix (e.g. basic_pub_sub).
Should be called once in Suite Setup if you're using non-default test cases.</doc>
<status status="PASS" start="2025-06-12T10:24:59.777932" elapsed="0.000164"/>
</kw>
<kw name="Get Build Script Path" owner="GlobalPathsLibrary">
<msg time="2025-06-12T10:24:59.778388" level="INFO">${build} = /home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/sub_send_crash/scripts/build_images.sh</msg>
<var>${build}</var>
<status status="PASS" start="2025-06-12T10:24:59.778268" elapsed="0.000149"/>
</kw>
<kw name="Get Network Name" owner="GlobalPathsLibrary">
<msg time="2025-06-12T10:24:59.778578" level="INFO">${net} = ecal_test_net</msg>
<var>${net}</var>
<status status="PASS" start="2025-06-12T10:24:59.778492" elapsed="0.000110"/>
</kw>
<kw name="Get Build Script Args" owner="GlobalPathsLibrary">
<msg time="2025-06-12T10:24:59.778752" level="INFO">${args} = ['sub_send_crash']</msg>
<var>${args}</var>
<status status="PASS" start="2025-06-12T10:24:59.778669" elapsed="0.000102"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-06-12T10:24:59.779021" level="INFO">${BUILD_SCRIPT} = /home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/sub_send_crash/scripts/build_images.sh</msg>
<arg>${BUILD_SCRIPT}</arg>
<arg>${build}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-06-12T10:24:59.778857" elapsed="0.000196"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-06-12T10:24:59.779308" level="INFO">${NETWORK} = ecal_test_net</msg>
<arg>${NETWORK}</arg>
<arg>${net}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-06-12T10:24:59.779169" elapsed="0.000171"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>[SETUP] Building image...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-12T10:24:59.779412" elapsed="0.000104"/>
</kw>
<kw name="Run Process" owner="Process">
<msg time="2025-06-12T10:24:59.779818" level="INFO">Starting process:
/home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/sub_send_crash/scripts/build_images.sh sub_send_crash</msg>
<msg time="2025-06-12T10:24:59.780230" level="INFO">Waiting for process to complete.</msg>
<msg time="2025-06-12T10:25:09.508687" level="INFO">Process completed.</msg>
<msg time="2025-06-12T10:25:09.508902" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<var>${result}</var>
<arg>${BUILD_SCRIPT}</arg>
<arg>@{args}</arg>
<doc>Runs a process and waits for it to complete.</doc>
<status status="PASS" start="2025-06-12T10:24:59.779627" elapsed="9.729312"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-06-12T10:25:09.509803" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${result.rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-06-12T10:25:09.509163" elapsed="0.000717"/>
</kw>
<kw name="Create Docker Network" owner="MyDockerLibrary">
<arg>${NETWORK}</arg>
<status status="PASS" start="2025-06-12T10:25:09.509998" elapsed="0.008179"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-06-12T10:25:12.518629" level="INFO">Slept 3 seconds.</msg>
<arg>3s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-06-12T10:25:09.518355" elapsed="3.000396"/>
</kw>
<status status="PASS" start="2025-06-12T10:24:59.777480" elapsed="12.741365"/>
</kw>
<test id="s1-t1" name="Crash During Reception (SHM)" line="36">
<kw name="Run Local Crash Receive Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-12T10:25:12.520057" level="INFO">${IMAGE} = sub_send_crash_local_shm</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-12T10:25:12.519893" elapsed="0.000185"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-12T10:25:12.520289" level="INFO">${CONTAINER} = local_all_local_shm</msg>
<var>${CONTAINER}</var>
<arg>local_all_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-12T10:25:12.520173" elapsed="0.000134"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Starting crash test in LOCAL mode: ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-12T10:25:12.520377" elapsed="0.000127"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<arg>${IMAGE}</arg>
<arg>local_all</arg>
<arg>${layer_tag}</arg>
<arg>test_topic</arg>
<arg>${CONTAINER}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-06-12T10:25:12.520592" elapsed="0.131557"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-06-12T10:25:47.652660" level="INFO">Slept 35 seconds.</msg>
<arg>35s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-06-12T10:25:12.652339" elapsed="35.000429"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-06-12T10:25:47.655807" level="INFO">${logs} = [Entrypoint] Starting all processes locally in one container (mode local_shm)
Shared memory monitoring is enabled (domain: ecal_mon - queue size: 1024)
[Publisher] Prepared 100MB message.
[Publisher] ...</msg>
<var>${logs}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-06-12T10:25:47.652920" elapsed="0.002913"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[LOCAL TEST CONTAINER OUTPUT]\n${logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-12T10:25:47.655927" elapsed="0.000190"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-06-12T10:25:47.657336" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-06-12T10:25:47.656227" elapsed="0.001133"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-06-12T10:25:47.657585" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Local container failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-06-12T10:25:47.657442" elapsed="0.000189"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-06-12T10:25:47.659724" level="INFO">${logs} = [Entrypoint] Starting all processes locally in one container (mode local_shm)
Shared memory monitoring is enabled (domain: ecal_mon - queue size: 1024)
[Publisher] Prepared 100MB message.
[Publisher] ...</msg>
<var>${logs}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-06-12T10:25:47.657708" elapsed="0.002041"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Local Crash Receive Test ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-06-12T10:25:47.659828" elapsed="0.000149"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-06-12T10:25:47.660074" elapsed="0.005164"/>
</kw>
<arg>local_shm</arg>
<status status="PASS" start="2025-06-12T10:25:12.519618" elapsed="35.145688"/>
</kw>
<tag>crash_receive_local_shm</tag>
<status status="PASS" start="2025-06-12T10:25:12.518927" elapsed="35.146484"/>
</test>
<test id="s1-t2" name="Crash with Zero Copy Enabled in Reception (SHM)" line="40">
<kw name="Run with Zero Copy Enabled Local Crash Receive Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-12T10:25:47.666627" level="INFO">${IMAGE} = sub_send_crash_local_shm</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-12T10:25:47.666487" elapsed="0.000161"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-12T10:25:47.666834" level="INFO">${CONTAINER} = zero_copy_local_all_local_shm</msg>
<var>${CONTAINER}</var>
<arg>zero_copy_local_all_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-12T10:25:47.666724" elapsed="0.000129"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Starting crash test with zero copy enabled in LOCAL mode: ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-12T10:25:47.666922" elapsed="0.000119"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<arg>${IMAGE}</arg>
<arg>zero_copy_local_all</arg>
<arg>${layer_tag}</arg>
<arg>test_topic</arg>
<arg>${CONTAINER}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-06-12T10:25:47.667163" elapsed="0.133000"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-06-12T10:26:22.800716" level="INFO">Slept 35 seconds.</msg>
<arg>35s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-06-12T10:25:47.800363" elapsed="35.000499"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-06-12T10:26:22.803751" level="INFO">${logs} = [Entrypoint] Starting all processes with Zero-Copy Publisher in one container (mode local_shm)
Shared memory monitoring is enabled (domain: ecal_mon - queue size: 1024)
[Publisher] Prepared 50MB messa...</msg>
<var>${logs}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-06-12T10:26:22.801032" elapsed="0.002745"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[LOCAL SHM WITH ZERO COPY TEST CONTAINER OUTPUT]\n${logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-12T10:26:22.803868" elapsed="0.000169"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-06-12T10:26:22.805224" level="INFO">${exit_code} = 1</msg>
<var>${exit_code}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-06-12T10:26:22.804157" elapsed="0.001091"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-06-12T10:26:22.805464" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg time="2025-06-12T10:26:22.805573" level="FAIL">Local container with zero copy shm failed!: 1 != 0</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Local container with zero copy shm failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="FAIL" start="2025-06-12T10:26:22.805327" elapsed="0.000383">Local container with zero copy shm failed!: 1 != 0</status>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<var>${logs}</var>
<arg>${CONTAINER}</arg>
<status status="NOT RUN" start="2025-06-12T10:26:22.805804" elapsed="0.000017"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Local Crash with zero copy enabled Test ${layer_tag}</arg>
<arg>${True}</arg>
<status status="NOT RUN" start="2025-06-12T10:26:22.805883" elapsed="0.000018"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<status status="NOT RUN" start="2025-06-12T10:26:22.805960" elapsed="0.000013"/>
</kw>
<arg>local_shm</arg>
<status status="FAIL" start="2025-06-12T10:25:47.666291" elapsed="35.139768">Local container with zero copy shm failed!: 1 != 0</status>
</kw>
<tag>zero_copy_crash_receive_local_shm</tag>
<status status="FAIL" start="2025-06-12T10:25:47.665902" elapsed="35.140313">Local container with zero copy shm failed!: 1 != 0</status>
</test>
<test id="s1-t3" name="Crash During Reception (TCP)" line="49">
<kw name="Run Local Crash Receive Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-12T10:26:22.807394" level="INFO">${IMAGE} = sub_send_crash_local_tcp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-12T10:26:22.807258" elapsed="0.000155"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-12T10:26:22.807593" level="INFO">${CONTAINER} = local_all_local_tcp</msg>
<var>${CONTAINER}</var>
<arg>local_all_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-12T10:26:22.807485" elapsed="0.000125"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Starting crash test in LOCAL mode: ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-12T10:26:22.807674" elapsed="0.000125"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<arg>${IMAGE}</arg>
<arg>local_all</arg>
<arg>${layer_tag}</arg>
<arg>test_topic</arg>
<arg>${CONTAINER}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-06-12T10:26:22.807877" elapsed="0.134908"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-06-12T10:26:57.943338" level="INFO">Slept 35 seconds.</msg>
<arg>35s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-06-12T10:26:22.942988" elapsed="35.000465"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-06-12T10:26:57.946515" level="INFO">${logs} = [Entrypoint] Starting all processes locally in one container (mode local_tcp)
[Publisher] Prepared 100MB message.
[Publisher] Waiting for at least 2 subscriber(s) on topic: test_topic
1749723984945 ms...</msg>
<var>${logs}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-06-12T10:26:57.943624" elapsed="0.002917"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[LOCAL TEST CONTAINER OUTPUT]\n${logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-12T10:26:57.946635" elapsed="0.000181"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-06-12T10:26:57.948182" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-06-12T10:26:57.946914" elapsed="0.001292"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-06-12T10:26:57.948422" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Local container failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-06-12T10:26:57.948288" elapsed="0.000178"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-06-12T10:26:57.950538" level="INFO">${logs} = [Entrypoint] Starting all processes locally in one container (mode local_tcp)
[Publisher] Prepared 100MB message.
[Publisher] Waiting for at least 2 subscriber(s) on topic: test_topic
1749723984945 ms...</msg>
<var>${logs}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-06-12T10:26:57.948542" elapsed="0.002020"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Local Crash Receive Test ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-06-12T10:26:57.950642" elapsed="0.000157"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-06-12T10:26:57.950888" elapsed="0.005129"/>
</kw>
<arg>local_tcp</arg>
<status status="PASS" start="2025-06-12T10:26:22.807035" elapsed="35.149039"/>
</kw>
<tag>crash_receive_local_tcp</tag>
<status status="PASS" start="2025-06-12T10:26:22.806716" elapsed="35.149512"/>
</test>
<test id="s1-t4" name="Crash During Reception (Network UDP)" line="53">
<kw name="Run Network Crash Receive Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-12T10:26:57.957516" level="INFO">${IMAGE} = sub_send_crash_network_udp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-12T10:26:57.957379" elapsed="0.000157"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-12T10:26:57.957692" level="INFO">${TOPIC} = test_topic</msg>
<var>${TOPIC}</var>
<arg>test_topic</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-12T10:26:57.957609" elapsed="0.000100"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-12T10:26:57.957879" level="INFO">${SUB_OK} = sub_ok_network_udp</msg>
<var>${SUB_OK}</var>
<arg>sub_ok_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-12T10:26:57.957774" elapsed="0.000122"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-12T10:26:57.958062" level="INFO">${SUB_CRASH} = sub_crash_network_udp</msg>
<var>${SUB_CRASH}</var>
<arg>sub_crash_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-12T10:26:57.957960" elapsed="0.000118"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-12T10:26:57.958280" level="INFO">${PUBLISHER} = pub_network_udp</msg>
<var>${PUBLISHER}</var>
<arg>pub_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-12T10:26:57.958167" elapsed="0.000131"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Starting crash test in NETWORK mode: ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-12T10:26:57.958365" elapsed="0.000124"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${SUB_OK}</arg>
<arg>${IMAGE}</arg>
<arg>test_subscriber</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${SUB_OK}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-06-12T10:26:57.958578" elapsed="0.124984"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${SUB_CRASH}</arg>
<arg>${IMAGE}</arg>
<arg>crash_subscriber</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${SUB_CRASH}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-06-12T10:26:58.083744" elapsed="0.120852"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${PUBLISHER}</arg>
<arg>${IMAGE}</arg>
<arg>large_publisher</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${PUBLISHER}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-06-12T10:26:58.204752" elapsed="0.139696"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${SUB_OK}</arg>
<status status="PASS" start="2025-06-12T10:26:58.344665" elapsed="30.806969"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${SUB_CRASH}</arg>
<status status="PASS" start="2025-06-12T10:27:29.151792" elapsed="0.001441"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${PUBLISHER}</arg>
<status status="PASS" start="2025-06-12T10:27:29.153321" elapsed="0.000974"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-06-12T10:27:29.156511" level="INFO">${log1} = [Entrypoint] Starting stable subscriber in mode network_udp
[Test_Sub] Ready and waiting...
[Test_Sub] Received 52428800 bytes (message 1)
[Test_Sub] Received 52428800 bytes (message 2)
[Test_Sub] Rec...</msg>
<var>${log1}</var>
<arg>${SUB_OK}</arg>
<status status="PASS" start="2025-06-12T10:27:29.154384" elapsed="0.002155"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-06-12T10:27:29.158722" level="INFO">${log2} = [Entrypoint] Starting crashing subscriber in mode network_udp
[Crash_Sub] Simulating crash after 2 seconds during active reception
[Crash_Sub] Listening to topic 'test_topic' in mode 'network_udp'
[Cr...</msg>
<var>${log2}</var>
<arg>${SUB_CRASH}</arg>
<status status="PASS" start="2025-06-12T10:27:29.156620" elapsed="0.002127"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-06-12T10:27:29.160838" level="INFO">${log3} = [Entrypoint] Starting large publisher in mode network_udp
[Publisher] Prepared 100MB message.
[Publisher] Waiting for at least 2 subscriber(s) on topic: test_topic
[Publisher] Found 2 subscriber(s). P...</msg>
<var>${log3}</var>
<arg>${PUBLISHER}</arg>
<status status="PASS" start="2025-06-12T10:27:29.158834" elapsed="0.002029"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[LOG: SUBSCRIBER]\n${log1}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-12T10:27:29.160946" elapsed="0.000181"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[LOG: CRASH_SUBSCRIBER]\n${log2}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-12T10:27:29.161225" elapsed="0.000174"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[LOG: PUBLISHER]\n${log3}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-12T10:27:29.161507" elapsed="0.000159"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-06-12T10:27:29.163011" level="INFO">${exit1} = 0</msg>
<var>${exit1}</var>
<arg>${SUB_OK}</arg>
<status status="PASS" start="2025-06-12T10:27:29.161776" elapsed="0.001259"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-06-12T10:27:29.163284" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit1}</arg>
<arg>0</arg>
<arg>Stable subscriber failed unexpectedly!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-06-12T10:27:29.163141" elapsed="0.000188"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Network Crash Receive Test ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-06-12T10:27:29.163406" elapsed="0.000139"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${SUB_OK}</arg>
<status status="PASS" start="2025-06-12T10:27:29.163650" elapsed="0.005315"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${SUB_CRASH}</arg>
<status status="PASS" start="2025-06-12T10:27:29.169052" elapsed="0.004867"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${PUBLISHER}</arg>
<status status="PASS" start="2025-06-12T10:27:29.174003" elapsed="0.004929"/>
</kw>
<arg>network_udp</arg>
<arg>network</arg>
<status status="PASS" start="2025-06-12T10:26:57.957173" elapsed="31.221819"/>
</kw>
<tag>crash_receive_network_udp</tag>
<status status="PASS" start="2025-06-12T10:26:57.956770" elapsed="31.222314"/>
</test>
<test id="s1-t5" name="Crash During Reception (Network TCP)" line="57">
<kw name="Run Network Crash Receive Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-12T10:27:29.180691" level="INFO">${IMAGE} = sub_send_crash_network_tcp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-12T10:27:29.180551" elapsed="0.000160"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-12T10:27:29.180869" level="INFO">${TOPIC} = test_topic</msg>
<var>${TOPIC}</var>
<arg>test_topic</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-12T10:27:29.180785" elapsed="0.000102"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-12T10:27:29.181062" level="INFO">${SUB_OK} = sub_ok_network_tcp</msg>
<var>${SUB_OK}</var>
<arg>sub_ok_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-12T10:27:29.180954" elapsed="0.000190"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-12T10:27:29.181351" level="INFO">${SUB_CRASH} = sub_crash_network_tcp</msg>
<var>${SUB_CRASH}</var>
<arg>sub_crash_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-12T10:27:29.181233" elapsed="0.000137"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-12T10:27:29.181544" level="INFO">${PUBLISHER} = pub_network_tcp</msg>
<var>${PUBLISHER}</var>
<arg>pub_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-12T10:27:29.181439" elapsed="0.000122"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Starting crash test in NETWORK mode: ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-12T10:27:29.181627" elapsed="0.000118"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${SUB_OK}</arg>
<arg>${IMAGE}</arg>
<arg>test_subscriber</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${SUB_OK}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-06-12T10:27:29.181845" elapsed="0.126628"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${SUB_CRASH}</arg>
<arg>${IMAGE}</arg>
<arg>crash_subscriber</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${SUB_CRASH}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-06-12T10:27:29.308672" elapsed="0.120650"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${PUBLISHER}</arg>
<arg>${IMAGE}</arg>
<arg>large_publisher</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${PUBLISHER}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-06-12T10:27:29.429502" elapsed="0.123396"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${SUB_OK}</arg>
<status status="PASS" start="2025-06-12T10:27:29.553126" elapsed="30.821733"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${SUB_CRASH}</arg>
<status status="PASS" start="2025-06-12T10:28:00.375039" elapsed="0.001515"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${PUBLISHER}</arg>
<status status="PASS" start="2025-06-12T10:28:00.376645" elapsed="0.000993"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-06-12T10:28:00.379930" level="INFO">${log1} = [Entrypoint] Starting stable subscriber in mode network_tcp
[Test_Sub] Ready and waiting...
[Test_Sub] Received 52428800 bytes (message 1)
[Test_Sub] Received 52428800 bytes (message 2)
[Test_Sub] Rec...</msg>
<var>${log1}</var>
<arg>${SUB_OK}</arg>
<status status="PASS" start="2025-06-12T10:28:00.377726" elapsed="0.002231"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-06-12T10:28:00.382015" level="INFO">${log2} = [Entrypoint] Starting crashing subscriber in mode network_tcp
[Crash_Sub] Listening to topic 'test_topic' in mode 'network_tcp'
[Crash_Sub] Received 52428800 bytes
[Crash_Sub] Simulating crash after 2...</msg>
<var>${log2}</var>
<arg>${SUB_CRASH}</arg>
<status status="PASS" start="2025-06-12T10:28:00.380065" elapsed="0.001975"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-06-12T10:28:00.384166" level="INFO">${log3} = [Entrypoint] Starting large publisher in mode network_tcp
[Publisher] Prepared 100MB message.
[Publisher] Waiting for at least 2 subscriber(s) on topic: test_topic
1749724050310 ms | 177f81160c29 | la...</msg>
<var>${log3}</var>
<arg>${PUBLISHER}</arg>
<status status="PASS" start="2025-06-12T10:28:00.382146" elapsed="0.002045"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[LOG: SUBSCRIBER]\n${log1}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-12T10:28:00.384277" elapsed="0.000158"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[LOG: CRASH_SUBSCRIBER]\n${log2}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-12T10:28:00.384543" elapsed="0.000170"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[LOG: PUBLISHER]\n${log3}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-12T10:28:00.384818" elapsed="0.000166"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-06-12T10:28:00.385955" level="INFO">${exit1} = 0</msg>
<var>${exit1}</var>
<arg>${SUB_OK}</arg>
<status status="PASS" start="2025-06-12T10:28:00.385082" elapsed="0.000897"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-06-12T10:28:00.386224" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit1}</arg>
<arg>0</arg>
<arg>Stable subscriber failed unexpectedly!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-06-12T10:28:00.386059" elapsed="0.000211"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Network Crash Receive Test ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-06-12T10:28:00.386345" elapsed="0.000146"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${SUB_OK}</arg>
<status status="PASS" start="2025-06-12T10:28:00.386576" elapsed="0.004852"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${SUB_CRASH}</arg>
<status status="PASS" start="2025-06-12T10:28:00.391511" elapsed="0.005185"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${PUBLISHER}</arg>
<status status="PASS" start="2025-06-12T10:28:00.396781" elapsed="0.005037"/>
</kw>
<arg>network_tcp</arg>
<arg>network</arg>
<status status="PASS" start="2025-06-12T10:27:29.180345" elapsed="31.221533"/>
</kw>
<tag>crash_receive_network_tcp</tag>
<status status="PASS" start="2025-06-12T10:27:29.179943" elapsed="31.222025"/>
</test>
<status status="FAIL" start="2025-06-12T10:24:59.680251" elapsed="180.722712"/>
</suite>
<statistics>
<total>
<stat pass="4" fail="1" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">crash_receive_local_shm</stat>
<stat pass="1" fail="0" skip="0">crash_receive_local_tcp</stat>
<stat pass="1" fail="0" skip="0">crash_receive_network_tcp</stat>
<stat pass="1" fail="0" skip="0">crash_receive_network_udp</stat>
<stat pass="0" fail="1" skip="0">zero_copy_crash_receive_local_shm</stat>
</tag>
<suite>
<stat name="Sub Send Crash" id="s1" pass="4" fail="1" skip="0">Sub Send Crash</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
