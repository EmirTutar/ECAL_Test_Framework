<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 7.3.2 (Python 3.12.3 on linux)" generated="2025-07-10T10:24:36.370654" rpa="false" schemaversion="5">
<suite id="s1" name="Basic Pub Sub &amp; Multi Pub Sub &amp; Network Crash &amp; Pub Crash &amp; Rpc N To N Test &amp; Rpc Ping Test &amp; Rpc Reconnect Test &amp; Sub Crash &amp; Sub Send Crash">
<suite id="s1-s1" name="Basic Pub Sub" source="/home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/basic_pub_sub/robottests/basic_pub_sub.robot">
<kw name="Init Test Context" type="SETUP">
<kw name="Set Test Context" owner="GlobalPathsLibrary">
<arg>basic_pub_sub</arg>
<arg>basic_pub_sub</arg>
<doc>Sets the test folder and tag prefix if it's a valid test case.
The folder must exist under integration_tests/ and contain typical test structure.</doc>
<status status="PASS" start="2025-07-10T10:24:36.489096" elapsed="0.000188"/>
</kw>
<kw name="Get Build Script Path" owner="GlobalPathsLibrary">
<msg time="2025-07-10T10:24:36.489511" level="INFO">${build} = /home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/basic_pub_sub/scripts/build_images.sh</msg>
<var>${build}</var>
<status status="PASS" start="2025-07-10T10:24:36.489396" elapsed="0.000141"/>
</kw>
<kw name="Get Network Name" owner="GlobalPathsLibrary">
<msg time="2025-07-10T10:24:36.489698" level="INFO">${net} = ecal_test_net</msg>
<var>${net}</var>
<status status="PASS" start="2025-07-10T10:24:36.489611" elapsed="0.000106"/>
</kw>
<kw name="Get Build Script Args" owner="GlobalPathsLibrary">
<msg time="2025-07-10T10:24:36.489863" level="INFO">${args} = ['basic_pub_sub']</msg>
<var>${args}</var>
<status status="PASS" start="2025-07-10T10:24:36.489782" elapsed="0.000100"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-07-10T10:24:36.490143" level="INFO">${BUILD_SCRIPT} = /home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/basic_pub_sub/scripts/build_images.sh</msg>
<arg>${BUILD_SCRIPT}</arg>
<arg>${build}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-07-10T10:24:36.489960" elapsed="0.000214"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-07-10T10:24:36.490382" level="INFO">${NETWORK} = ecal_test_net</msg>
<arg>${NETWORK}</arg>
<arg>${net}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-07-10T10:24:36.490255" elapsed="0.000156"/>
</kw>
<kw name="Get Test Description" owner="GlobalPathsLibrary">
<msg time="2025-07-10T10:24:36.490625" level="INFO">${desc} = This test checks basic communication between a single publisher and a single subscriber.

Test Setup:
- The publisher sends 4 messages, each 0.2 MB in size, on a single topic.
- The subscriber listens...</msg>
<var>${desc}</var>
<doc>Reads the *** Comments *** section from the .robot file and returns it as a string.</doc>
<status status="PASS" start="2025-07-10T10:24:36.490478" elapsed="0.000167"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-10T10:24:36.490805" level="INFO">This test checks basic communication between a single publisher and a single subscriber.

Test Setup:
- The publisher sends 4 messages, each 0.2 MB in size, on a single topic.
- The subscriber listens on that topic for 6 seconds and counts received messages.

Covered eCAL modes:
- local_shm
- local_udp
- local_tcp
- network_udp
- network_tcp

Goals:
- Ensure that basic 1:1 communication works reliably across all transport modes.
- Validate correct transmission of payloads (200 KB).

Success Criteria:
- The subscriber receives exactly 4 messages.
- If true, it exits with code 0.
- Otherwise, it exits with code 1.</msg>
<arg>${desc}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-10T10:24:36.490716" elapsed="0.000121"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>[SETUP] Building Docker image...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-10T10:24:36.490903" elapsed="0.000122"/>
</kw>
<kw name="Run Process" owner="Process">
<msg time="2025-07-10T10:24:36.491331" level="INFO">Starting process:
/home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/basic_pub_sub/scripts/build_images.sh basic_pub_sub</msg>
<msg time="2025-07-10T10:24:36.491750" level="INFO">Waiting for process to complete.</msg>
<msg time="2025-07-10T10:24:51.187526" level="INFO">Process completed.</msg>
<msg time="2025-07-10T10:24:51.187692" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<var>${result}</var>
<arg>${BUILD_SCRIPT}</arg>
<arg>@{args}</arg>
<doc>Runs a process and waits for it to complete.</doc>
<status status="PASS" start="2025-07-10T10:24:36.491138" elapsed="14.696579"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-10T10:24:51.188530" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${result.rc}</arg>
<arg>0</arg>
<arg>Failed to build Docker image!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-10T10:24:51.187867" elapsed="0.000718"/>
</kw>
<kw name="Create Docker Network" owner="MyDockerLibrary">
<arg>${NETWORK}</arg>
<status status="PASS" start="2025-07-10T10:24:51.188670" elapsed="0.042174"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-10T10:24:54.231341" level="INFO">Slept 3 seconds.</msg>
<arg>3s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-10T10:24:51.231033" elapsed="3.000415"/>
</kw>
<status status="PASS" start="2025-07-10T10:24:36.488620" elapsed="17.742917"/>
</kw>
<test id="s1-s1-t1" name="Basic Pub/Sub Local SHM" line="38">
<kw name="Run Local Pub Sub Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-10T10:24:54.232567" level="INFO">${IMAGE} = basic_pub_sub_local_shm</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-10T10:24:54.232400" elapsed="0.000189"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-10T10:24:54.232777" level="INFO">${CONTAINER} = basic_local_local_shm</msg>
<var>${CONTAINER}</var>
<arg>basic_local_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-10T10:24:54.232664" elapsed="0.000130"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Running local pub/sub test in mode: ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-10T10:24:54.232862" elapsed="0.000146"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<arg>${IMAGE}</arg>
<arg>local</arg>
<arg>${layer_tag}</arg>
<arg>test_topic</arg>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-10T10:24:54.233085" elapsed="0.114746"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-10T10:25:03.348323" level="INFO">Slept 9 seconds.</msg>
<arg>9s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-10T10:24:54.348014" elapsed="9.000423"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-07-10T10:25:03.352090" level="INFO">${logs} = [Entrypoint] Starting subscriber and publisher in mode local_shm
Shared memory monitoring is enabled (domain: ecal_mon - queue size: 1024)
[Publisher] Waiting for at least 1 subscriber(s) on topic: te...</msg>
<var>${logs}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-10T10:25:03.348602" elapsed="0.003521"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[CONTAINER LOG: LOCAL PUB+SUB]\n${logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-10T10:25:03.352231" elapsed="0.000172"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-10T10:25:03.352630" level="INFO">
[CONTAINER LOG: LOCAL PUB+SUB]
[Entrypoint] Starting subscriber and publisher in mode local_shm
Shared memory monitoring is enabled (domain: ecal_mon - queue size: 1024)
[Publisher] Waiting for at least 1 subscriber(s) on topic: test_topic
[Publisher] Found 1 subscriber(s). Proceeding to send messages.
[Publisher] Send result: ✓, size: 209715 bytes
[Publisher] Send result: ✓, size: 209715 bytes
[Publisher] Send result: ✓, size: 209715 bytes
[Publisher] Send result: ✓, size: 209715 bytes
[Publisher] Finished sending.
Shared memory monitoring is enabled (domain: ecal_mon - queue size: 1024)


[Subscriber] Ready and waiting...

[Subscriber] Received 209715 bytes (message 1)
[Subscriber] Received 209715 bytes (message 2)
[Subscriber] Received 209715 bytes (message 3)
[Subscriber] Received 209715 bytes (message 4)
[Subscriber] Received 4 messages.
</msg>
<arg>\n[CONTAINER LOG: LOCAL PUB+SUB]\n${logs}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-10T10:25:03.352508" elapsed="0.000211"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-07-10T10:25:03.353821" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-10T10:25:03.352795" elapsed="0.001049"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-10T10:25:03.354098" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Local communication test failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-10T10:25:03.353925" elapsed="0.000219"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Basic Pub/Sub Local ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-07-10T10:25:03.354220" elapsed="0.000136"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-10T10:25:03.354448" elapsed="0.004820"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-10T10:25:04.359602" level="INFO">Slept 1 second.</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-10T10:25:03.359353" elapsed="1.000370"/>
</kw>
<arg>local_shm</arg>
<status status="PASS" start="2025-07-10T10:24:54.232150" elapsed="10.127678"/>
</kw>
<tag>basic_pub_sub_local_shm</tag>
<status status="PASS" start="2025-07-10T10:24:54.231612" elapsed="10.128346"/>
</test>
<test id="s1-s1-t2" name="Basic Pub/Sub Local UDP" line="42">
<kw name="Run Local Pub Sub Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-10T10:25:04.361370" level="INFO">${IMAGE} = basic_pub_sub_local_udp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-10T10:25:04.361225" elapsed="0.000166"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-10T10:25:04.361577" level="INFO">${CONTAINER} = basic_local_local_udp</msg>
<var>${CONTAINER}</var>
<arg>basic_local_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-10T10:25:04.361471" elapsed="0.000123"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Running local pub/sub test in mode: ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-10T10:25:04.361659" elapsed="0.000120"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<arg>${IMAGE}</arg>
<arg>local</arg>
<arg>${layer_tag}</arg>
<arg>test_topic</arg>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-10T10:25:04.361870" elapsed="0.119986"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-10T10:25:13.482378" level="INFO">Slept 9 seconds.</msg>
<arg>9s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-10T10:25:04.482062" elapsed="9.000433"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-07-10T10:25:13.485363" level="INFO">${logs} = [Entrypoint] Starting subscriber and publisher in mode local_udp
[Publisher] Waiting for at least 1 subscriber(s) on topic: test_topic
[Publisher] Found 1 subscriber(s). Proceeding to send messages.
[...</msg>
<var>${logs}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-10T10:25:13.482666" elapsed="0.002722"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[CONTAINER LOG: LOCAL PUB+SUB]\n${logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-10T10:25:13.485475" elapsed="0.000149"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-10T10:25:13.485847" level="INFO">
[CONTAINER LOG: LOCAL PUB+SUB]
[Entrypoint] Starting subscriber and publisher in mode local_udp
[Publisher] Waiting for at least 1 subscriber(s) on topic: test_topic
[Publisher] Found 1 subscriber(s). Proceeding to send messages.
[Publisher] Send result: ✓, size: 209715 bytes
[Publisher] Send result: ✓, size: 209715 bytes
[Publisher] Send result: ✓, size: 209715 bytes
[Publisher] Send result: ✓, size: 209715 bytes
[Publisher] Finished sending.


[Subscriber] Ready and waiting...

[Subscriber] Received 209715 bytes (message 1)
[Subscriber] Received 209715 bytes (message 2)
[Subscriber] Received 209715 bytes (message 3)
[Subscriber] Received 209715 bytes (message 4)
[Subscriber] Received 4 messages.
</msg>
<arg>\n[CONTAINER LOG: LOCAL PUB+SUB]\n${logs}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-10T10:25:13.485727" elapsed="0.000158"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-07-10T10:25:13.486948" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-10T10:25:13.485955" elapsed="0.001042"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-10T10:25:13.487230" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Local communication test failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-10T10:25:13.487093" elapsed="0.000179"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Basic Pub/Sub Local ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-07-10T10:25:13.487346" elapsed="0.000141"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-10T10:25:13.487579" elapsed="0.005452"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-10T10:25:14.493363" level="INFO">Slept 1 second.</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-10T10:25:13.493118" elapsed="1.000356"/>
</kw>
<arg>local_udp</arg>
<status status="PASS" start="2025-07-10T10:25:04.361002" elapsed="10.132561"/>
</kw>
<tag>basic_pub_sub_local_udp</tag>
<status status="PASS" start="2025-07-10T10:25:04.360569" elapsed="10.133135"/>
</test>
<test id="s1-s1-t3" name="Basic Pub/Sub Local TCP" line="46">
<kw name="Run Local Pub Sub Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-10T10:25:14.495070" level="INFO">${IMAGE} = basic_pub_sub_local_tcp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-10T10:25:14.494890" elapsed="0.000205"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-10T10:25:14.495278" level="INFO">${CONTAINER} = basic_local_local_tcp</msg>
<var>${CONTAINER}</var>
<arg>basic_local_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-10T10:25:14.495169" elapsed="0.000132"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Running local pub/sub test in mode: ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-10T10:25:14.495435" elapsed="0.000125"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<arg>${IMAGE}</arg>
<arg>local</arg>
<arg>${layer_tag}</arg>
<arg>test_topic</arg>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-10T10:25:14.495654" elapsed="0.114615"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-10T10:25:23.610810" level="INFO">Slept 9 seconds.</msg>
<arg>9s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-10T10:25:14.610484" elapsed="9.000441"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-07-10T10:25:23.613963" level="INFO">${logs} = [Entrypoint] Starting subscriber and publisher in mode local_tcp
[Publisher] Waiting for at least 1 subscriber(s) on topic: test_topic
1752143116613 ms | 2fad11c9dbc1 | pub_test | 7 | info | CTCPReade...</msg>
<var>${logs}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-10T10:25:23.611126" elapsed="0.002890"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[CONTAINER LOG: LOCAL PUB+SUB]\n${logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-10T10:25:23.614106" elapsed="0.000160"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-10T10:25:23.614522" level="INFO">
[CONTAINER LOG: LOCAL PUB+SUB]
[Entrypoint] Starting subscriber and publisher in mode local_tcp
[Publisher] Waiting for at least 1 subscriber(s) on topic: test_topic
1752143116613 ms | 2fad11c9dbc1 | pub_test | 7 | info | CTCPReaderLayer - TCPPubSub (Info) -Publisher :::0: Created publisher and waiting for clients.
[Publisher] Found 1 subscriber(s). Proceeding to send messages.
1752143116614 ms | 2fad11c9dbc1 | pub_test | 7 | info | CTCPReaderLayer - TCPPubSub (Info) -Publisher :::36283: Subscriber ::ffff:172.17.0.3:58970 has connected.
[Publisher] Send result: ✓, size: 209715 bytes
[Publisher] Send result: ✓, size: 209715 bytes
[Publisher] Send result: ✓, size: 209715 bytes
[Publisher] Send result: ✓, size: 209715 bytes
[Publisher] Finished sending.


[Subscriber] Ready and waiting...

[Subscriber] Received 209715 bytes (message 1)
[Subscriber] Received 209715 bytes (message 2)
[Subscriber] Received 209715 bytes (message 3)
[Subscriber] Received 209715 bytes (message 4)
1752143120115 ms | 2fad11c9dbc1 | sub_test | 13 | error | CTCPReaderLayer - TCPPubSub (Error) -SubscriberSession 172.17.0.3:58970-&gt;2fad11c9dbc1:36283: Error reading header length: End of file
1752143120116 ms | 2fad11c9dbc1 | sub_test | 13 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.17.0.3:58974: Failed connecting to publisher 2fad11c9dbc1:36283: Connection refused
1752143120116 ms | 2fad11c9dbc1 | sub_test | 13 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.17.0.3:58984: Failed connecting to publisher 2fad11c9dbc1:36283: Connection refused
1752143120116 ms | 2fad11c9dbc1 | sub_test | 13 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.17.0.3:58992: Failed connecting to publisher 2fad11c9dbc1:36283: Connection refused
1752143120116 ms | 2fad11c9dbc1 | sub_test | 13 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.17.0.3:58996: Failed connecting to publisher 2fad11c9dbc1:36283: Connection refused
1752143120117 ms | 2fad11c9dbc1 | sub_test | 13 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.17.0.3:59008: Failed connecting to publisher 2fad11c9dbc1:36283: Connection refused
[Subscriber] Received 4 messages.
</msg>
<arg>\n[CONTAINER LOG: LOCAL PUB+SUB]\n${logs}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-10T10:25:23.614373" elapsed="0.000220"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-07-10T10:25:23.615926" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-10T10:25:23.614688" elapsed="0.001268"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-10T10:25:23.616255" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Local communication test failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-10T10:25:23.616087" elapsed="0.000222"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Basic Pub/Sub Local ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-07-10T10:25:23.616406" elapsed="0.000178"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-10T10:25:23.616678" elapsed="0.004988"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-10T10:25:24.622010" level="INFO">Slept 1 second.</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-10T10:25:23.621750" elapsed="1.000365"/>
</kw>
<arg>local_tcp</arg>
<status status="PASS" start="2025-07-10T10:25:14.494668" elapsed="10.127531"/>
</kw>
<tag>basic_pub_sub_local_tcp</tag>
<status status="PASS" start="2025-07-10T10:25:14.494278" elapsed="10.128034"/>
</test>
<test id="s1-s1-t4" name="Basic Pub/Sub Network UDP" line="50">
<kw name="Run Network Pub Sub Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-10T10:25:24.623736" level="INFO">${IMAGE} = basic_pub_sub_network_udp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-10T10:25:24.623589" elapsed="0.000168"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-10T10:25:24.623944" level="INFO">${TOPIC} = topic_network_udp</msg>
<var>${TOPIC}</var>
<arg>topic_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-10T10:25:24.623836" elapsed="0.000126"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-10T10:25:24.624169" level="INFO">${SUB_NAME} = sub_network_udp</msg>
<var>${SUB_NAME}</var>
<arg>sub_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-10T10:25:24.624060" elapsed="0.000127"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-10T10:25:24.624355" level="INFO">${PUB_NAME} = pub_network_udp</msg>
<var>${PUB_NAME}</var>
<arg>pub_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-10T10:25:24.624251" elapsed="0.000121"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Running network pub/sub test in mode: ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-10T10:25:24.624437" elapsed="0.000117"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${SUB_NAME}</arg>
<arg>${IMAGE}</arg>
<arg>subscriber</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${SUB_NAME}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-10T10:25:24.624645" elapsed="0.130980"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${PUB_NAME}</arg>
<arg>${IMAGE}</arg>
<arg>publisher</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${PUB_NAME}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-10T10:25:24.755845" elapsed="0.121217"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-10T10:25:33.877549" level="INFO">Slept 9 seconds.</msg>
<arg>9s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-10T10:25:24.877248" elapsed="9.000415"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-07-10T10:25:33.880668" level="INFO">${log_sub} = [Entrypoint] Starting subscriber in mode network_udp


[Subscriber] Ready and waiting...

[Subscriber] Received 209715 bytes (message 1)
[Subscriber] Received 209715 bytes (message 2)
[Subscriber] Rec...</msg>
<var>${log_sub}</var>
<arg>${SUB_NAME}</arg>
<status status="PASS" start="2025-07-10T10:25:33.877894" elapsed="0.002801"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-07-10T10:25:33.882850" level="INFO">${log_pub} = [Entrypoint] Starting publisher in mode network_udp
[Publisher] Waiting for at least 1 subscriber(s) on topic: topic_network_udp
[Publisher] Found 1 subscriber(s). Proceeding to send messages.
[Publis...</msg>
<var>${log_pub}</var>
<arg>${PUB_NAME}</arg>
<status status="PASS" start="2025-07-10T10:25:33.880783" elapsed="0.002092"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[CONTAINER LOG: PUBLISHER]\n${log_pub}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-10T10:25:33.882960" elapsed="0.000187"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-10T10:25:33.883390" level="INFO">
[CONTAINER LOG: PUBLISHER]
[Entrypoint] Starting publisher in mode network_udp
[Publisher] Waiting for at least 1 subscriber(s) on topic: topic_network_udp
[Publisher] Found 1 subscriber(s). Proceeding to send messages.
[Publisher] Send result: ✓, size: 209715 bytes
[Publisher] Send result: ✓, size: 209715 bytes
[Publisher] Send result: ✓, size: 209715 bytes
[Publisher] Send result: ✓, size: 209715 bytes
[Publisher] Finished sending.
</msg>
<arg>\n[CONTAINER LOG: PUBLISHER]\n${log_pub}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-10T10:25:33.883252" elapsed="0.000190"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[CONTAINER LOG: SUBSCRIBER]\n${log_sub}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-10T10:25:33.883538" elapsed="0.000160"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-10T10:25:33.883939" level="INFO">
[CONTAINER LOG: SUBSCRIBER]
[Entrypoint] Starting subscriber in mode network_udp


[Subscriber] Ready and waiting...

[Subscriber] Received 209715 bytes (message 1)
[Subscriber] Received 209715 bytes (message 2)
[Subscriber] Received 209715 bytes (message 3)
[Subscriber] Received 209715 bytes (message 4)
[Subscriber] Received 4 messages.
</msg>
<arg>\n[CONTAINER LOG: SUBSCRIBER]\n${log_sub}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-10T10:25:33.883812" elapsed="0.000197"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-07-10T10:25:33.885220" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>${SUB_NAME}</arg>
<status status="PASS" start="2025-07-10T10:25:33.884108" elapsed="0.001135"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-10T10:25:33.885482" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Subscriber failed in ${layer_tag}!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-10T10:25:33.885324" elapsed="0.000200"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Basic Pub/Sub Network ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-07-10T10:25:33.885598" elapsed="0.000140"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${SUB_NAME}</arg>
<status status="PASS" start="2025-07-10T10:25:33.885842" elapsed="0.005029"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${PUB_NAME}</arg>
<status status="PASS" start="2025-07-10T10:25:33.890954" elapsed="0.004945"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-10T10:25:34.896258" level="INFO">Slept 1 second.</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-10T10:25:33.896012" elapsed="1.000359"/>
</kw>
<arg>network_udp</arg>
<arg>network</arg>
<status status="PASS" start="2025-07-10T10:25:24.623352" elapsed="10.273108"/>
</kw>
<tag>basic_pub_sub_network_udp</tag>
<status status="PASS" start="2025-07-10T10:25:24.622872" elapsed="10.273719"/>
</test>
<test id="s1-s1-t5" name="Basic Pub/Sub Network TCP" line="54">
<kw name="Run Network Pub Sub Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-10T10:25:34.898253" level="INFO">${IMAGE} = basic_pub_sub_network_tcp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-10T10:25:34.898106" elapsed="0.000178"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-10T10:25:34.898472" level="INFO">${TOPIC} = topic_network_tcp</msg>
<var>${TOPIC}</var>
<arg>topic_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-10T10:25:34.898357" elapsed="0.000131"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-10T10:25:34.898660" level="INFO">${SUB_NAME} = sub_network_tcp</msg>
<var>${SUB_NAME}</var>
<arg>sub_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-10T10:25:34.898554" elapsed="0.000123"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-10T10:25:34.898839" level="INFO">${PUB_NAME} = pub_network_tcp</msg>
<var>${PUB_NAME}</var>
<arg>pub_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-10T10:25:34.898740" elapsed="0.000114"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Running network pub/sub test in mode: ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-10T10:25:34.898918" elapsed="0.000149"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${SUB_NAME}</arg>
<arg>${IMAGE}</arg>
<arg>subscriber</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${SUB_NAME}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-10T10:25:34.899147" elapsed="0.126256"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${PUB_NAME}</arg>
<arg>${IMAGE}</arg>
<arg>publisher</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${PUB_NAME}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-10T10:25:35.025565" elapsed="0.120442"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-10T10:25:44.146496" level="INFO">Slept 9 seconds.</msg>
<arg>9s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-10T10:25:35.146187" elapsed="9.000426"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-07-10T10:25:44.149770" level="INFO">${log_sub} = [Entrypoint] Starting subscriber in mode network_tcp


[Subscriber] Ready and waiting...

[Subscriber] Received 209715 bytes (message 1)
[Subscriber] Received 209715 bytes (message 2)
[Subscriber] Rec...</msg>
<var>${log_sub}</var>
<arg>${SUB_NAME}</arg>
<status status="PASS" start="2025-07-10T10:25:44.146784" elapsed="0.003014"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-07-10T10:25:44.151911" level="INFO">${log_pub} = [Entrypoint] Starting publisher in mode network_tcp
[Publisher] Waiting for at least 1 subscriber(s) on topic: topic_network_tcp
1752143136027 ms | 0e7317718b22 | pub_network_tcp | 7 | info | CTCPRead...</msg>
<var>${log_pub}</var>
<arg>${PUB_NAME}</arg>
<status status="PASS" start="2025-07-10T10:25:44.149887" elapsed="0.002049"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[CONTAINER LOG: PUBLISHER]\n${log_pub}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-10T10:25:44.152047" elapsed="0.000161"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-10T10:25:44.152470" level="INFO">
[CONTAINER LOG: PUBLISHER]
[Entrypoint] Starting publisher in mode network_tcp
[Publisher] Waiting for at least 1 subscriber(s) on topic: topic_network_tcp
1752143136027 ms | 0e7317718b22 | pub_network_tcp | 7 | info | CTCPReaderLayer - TCPPubSub (Info) -Publisher :::0: Created publisher and waiting for clients.
1752143136029 ms | 0e7317718b22 | pub_network_tcp | 7 | info | CTCPReaderLayer - TCPPubSub (Info) -Publisher :::38719: Subscriber ::ffff:172.18.0.2:51448 has connected.
[Publisher] Found 1 subscriber(s). Proceeding to send messages.
[Publisher] Send result: ✓, size: 209715 bytes
[Publisher] Send result: ✓, size: 209715 bytes
[Publisher] Send result: ✓, size: 209715 bytes
[Publisher] Send result: ✓, size: 209715 bytes
[Publisher] Finished sending.
</msg>
<arg>\n[CONTAINER LOG: PUBLISHER]\n${log_pub}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-10T10:25:44.152311" elapsed="0.000199"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[CONTAINER LOG: SUBSCRIBER]\n${log_sub}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-10T10:25:44.152580" elapsed="0.000132"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-10T10:25:44.152896" level="INFO">
[CONTAINER LOG: SUBSCRIBER]
[Entrypoint] Starting subscriber in mode network_tcp


[Subscriber] Ready and waiting...

[Subscriber] Received 209715 bytes (message 1)
[Subscriber] Received 209715 bytes (message 2)
[Subscriber] Received 209715 bytes (message 3)
[Subscriber] Received 209715 bytes (message 4)
1752143139550 ms | 10e71a021804 | sub_network_tcp | 7 | error | CTCPReaderLayer - TCPPubSub (Error) -SubscriberSession 172.18.0.2:51448-&gt;0e7317718b22:38719: Error reading header length: End of file
1752143139551 ms | 10e71a021804 | sub_network_tcp | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:57020: Failed connecting to publisher 0e7317718b22:38719: Connection refused
1752143139552 ms | 10e71a021804 | sub_network_tcp | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:57034: Failed connecting to publisher 0e7317718b22:38719: Connection refused
1752143139553 ms | 10e71a021804 | sub_network_tcp | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:57050: Failed connecting to publisher 0e7317718b22:38719: Connection refused
1752143139553 ms | 10e71a021804 | sub_network_tcp | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:57062: Failed connecting to publisher 0e7317718b22:38719: Connection refused
1752143139554 ms | 10e71a021804 | sub_network_tcp | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:57070: Failed connecting to publisher 0e7317718b22:38719: Connection refused
[Subscriber] Received 4 messages.
</msg>
<arg>\n[CONTAINER LOG: SUBSCRIBER]\n${log_sub}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-10T10:25:44.152801" elapsed="0.000131"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-07-10T10:25:44.154072" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>${SUB_NAME}</arg>
<status status="PASS" start="2025-07-10T10:25:44.153027" elapsed="0.001069"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-10T10:25:44.154330" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Subscriber failed in ${layer_tag}!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-10T10:25:44.154177" elapsed="0.000195"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Basic Pub/Sub Network ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-07-10T10:25:44.154447" elapsed="0.000137"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${SUB_NAME}</arg>
<status status="PASS" start="2025-07-10T10:25:44.154687" elapsed="0.005320"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${PUB_NAME}</arg>
<status status="PASS" start="2025-07-10T10:25:44.160090" elapsed="0.005079"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-10T10:25:45.165489" level="INFO">Slept 1 second.</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-10T10:25:44.165254" elapsed="1.000336"/>
</kw>
<arg>network_tcp</arg>
<arg>network</arg>
<status status="PASS" start="2025-07-10T10:25:34.897822" elapsed="10.267848"/>
</kw>
<tag>basic_pub_sub_network_tcp</tag>
<status status="PASS" start="2025-07-10T10:25:34.897426" elapsed="10.268359"/>
</test>
<status status="PASS" start="2025-07-10T10:24:36.389847" elapsed="68.776892"/>
</suite>
<suite id="s1-s2" name="Multi Pub Sub" source="/home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/multi_pub_sub/robottests/multi_pub_sub.robot">
<kw name="Init Test Context" type="SETUP">
<kw name="Set Test Context" owner="GlobalPathsLibrary">
<arg>multi_pub_sub</arg>
<arg>multi_pub_sub</arg>
<doc>Sets the test folder and tag prefix if it's a valid test case.
The folder must exist under integration_tests/ and contain typical test structure.</doc>
<status status="PASS" start="2025-07-10T10:25:45.170240" elapsed="0.000141"/>
</kw>
<kw name="Get Build Script Path" owner="GlobalPathsLibrary">
<msg time="2025-07-10T10:25:45.170549" level="INFO">${build} = /home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/multi_pub_sub/scripts/build_images.sh</msg>
<var>${build}</var>
<status status="PASS" start="2025-07-10T10:25:45.170460" elapsed="0.000109"/>
</kw>
<kw name="Get Network Name" owner="GlobalPathsLibrary">
<msg time="2025-07-10T10:25:45.170712" level="INFO">${net} = ecal_test_net</msg>
<var>${net}</var>
<status status="PASS" start="2025-07-10T10:25:45.170632" elapsed="0.000097"/>
</kw>
<kw name="Get Build Script Args" owner="GlobalPathsLibrary">
<msg time="2025-07-10T10:25:45.170862" level="INFO">${args} = ['multi_pub_sub']</msg>
<var>${args}</var>
<status status="PASS" start="2025-07-10T10:25:45.170789" elapsed="0.000099"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-07-10T10:25:45.171125" level="INFO">${BUILD_SCRIPT} = /home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/multi_pub_sub/scripts/build_images.sh</msg>
<arg>${BUILD_SCRIPT}</arg>
<arg>${build}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-07-10T10:25:45.170963" elapsed="0.000191"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-07-10T10:25:45.171337" level="INFO">${NETWORK} = ecal_test_net</msg>
<arg>${NETWORK}</arg>
<arg>${net}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-07-10T10:25:45.171227" elapsed="0.000136"/>
</kw>
<kw name="Get Test Description" owner="GlobalPathsLibrary">
<msg time="2025-07-10T10:25:45.171590" level="INFO">${desc} = This test validates eCAL communication in a scenario involving multiple publishers and subscribers.

Test Setup:
- Two publishers run in parallel and publish messages on the **same topic**.
• Publishe...</msg>
<var>${desc}</var>
<doc>Reads the *** Comments *** section from the .robot file and returns it as a string.</doc>
<status status="PASS" start="2025-07-10T10:25:45.171427" elapsed="0.000185"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-10T10:25:45.171765" level="INFO">This test validates eCAL communication in a scenario involving multiple publishers and subscribers.

Test Setup:
- Two publishers run in parallel and publish messages on the **same topic**.
• Publisher 1 sends messages containing the byte value **42**.
• Publisher 2 sends messages containing the byte value **43**.
- Two subscribers listen on that same topic and must receive all messages from both publishers.

Covered eCAL modes:
- local_shm
- local_udp
- (local_tcp)
- network_udp
- network_tcp

Goals:
- Ensure that eCAL correctly distributes messages from **multiple sources** to **multiple receivers**.
- Verify that **topic routing, message integrity, and delivery** work consistently across different transport modes.

Success Criteria:
- Each subscriber must receive **10 messages with value 42** and **10 with value 43**.
- If this condition is met, the subscriber exits with code **0**.
- If any expected messages are missing, the subscriber exits with code **1**.</msg>
<arg>${desc}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-10T10:25:45.171680" elapsed="0.000163"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>[SETUP] Building Docker image...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-10T10:25:45.171912" elapsed="0.000102"/>
</kw>
<kw name="Run Process" owner="Process">
<msg time="2025-07-10T10:25:45.172302" level="INFO">Starting process:
/home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/multi_pub_sub/scripts/build_images.sh multi_pub_sub</msg>
<msg time="2025-07-10T10:25:45.172753" level="INFO">Waiting for process to complete.</msg>
<msg time="2025-07-10T10:25:54.114329" level="INFO">Process completed.</msg>
<msg time="2025-07-10T10:25:54.114490" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<var>${result}</var>
<arg>${BUILD_SCRIPT}</arg>
<arg>@{args}</arg>
<doc>Runs a process and waits for it to complete.</doc>
<status status="PASS" start="2025-07-10T10:25:45.172121" elapsed="8.942393"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-10T10:25:54.115175" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${result.rc}</arg>
<arg>0</arg>
<arg>Failed to build Docker image!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-10T10:25:54.114659" elapsed="0.000572"/>
</kw>
<kw name="Create Docker Network" owner="MyDockerLibrary">
<arg>${NETWORK}</arg>
<status status="PASS" start="2025-07-10T10:25:54.115322" elapsed="0.006819"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-10T10:25:57.122493" level="INFO">Slept 3 seconds.</msg>
<arg>3s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-10T10:25:54.122255" elapsed="3.000341"/>
</kw>
<status status="PASS" start="2025-07-10T10:25:45.170078" elapsed="11.952598"/>
</kw>
<test id="s1-s2-t1" name="Multi Pub/Sub Local SHM Test" line="39">
<kw name="Run Multi Pub Sub Test Local">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-10T10:25:57.124612" level="INFO">${IMAGE} = multi_pub_sub_local_shm</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-10T10:25:57.124445" elapsed="0.000189"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-10T10:25:57.124830" level="INFO">${CONTAINER} = multi_locallocal_shm</msg>
<var>${CONTAINER}</var>
<arg>multi_local${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-10T10:25:57.124715" elapsed="0.000133"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Running local multi pub/sub test (all binarys in same Container) with ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-10T10:25:57.124918" elapsed="0.000156"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<arg>${IMAGE}</arg>
<arg>local_multi</arg>
<arg>${layer_tag}</arg>
<status status="PASS" start="2025-07-10T10:25:57.125165" elapsed="0.112097"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-10T10:26:15.237805" level="INFO">Slept 18 seconds.</msg>
<arg>18s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-10T10:25:57.237471" elapsed="18.000443"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-07-10T10:26:15.240892" level="INFO">${logs} = [Entrypoint] Starting local multi pub/sub test in mode local_shm
Shared memory monitoring is enabled (domain: ecal_mon - queue size: 1024)
[Publisher] Waiting for at least 2 subscriber(s) on topic: te...</msg>
<var>${logs}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-10T10:26:15.238094" elapsed="0.002825"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[CONTAINER LOG: All Local Binarys Multi Pub/Sub]\n${logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-10T10:26:15.241038" elapsed="0.000161"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-10T10:26:15.241443" level="INFO">
[CONTAINER LOG: All Local Binarys Multi Pub/Sub]
[Entrypoint] Starting local multi pub/sub test in mode local_shm
Shared memory monitoring is enabled (domain: ecal_mon - queue size: 1024)
[Publisher] Waiting for at least 2 subscriber(s) on topic: test_topic
Shared memory monitoring is enabled (domain: ecal_mon - queue size: 1024)
[Publisher] Waiting for at least 2 subscriber(s) on topic: test_topic
Shared memory monitoring is enabled (domain: ecal_mon - queue size: 1024)
[Subscriber 1] Waiting for messages...

Shared memory monitoring is enabled (domain: ecal_mon - queue size: 1024)
[Subscriber 2] Waiting for messages...
[Publisher] Found 2 subscriber(s). Proceeding to send messages.
[Publisher] Found 2 subscriber(s). Proceeding to send messages.
[Publisher 1] Started with mode=local_shm, topic=test_topic, node=multi_publisher, count=10, delay=1000ms
[Publisher 2] Started with mode=local_shm, topic=test_topic, node=multi_publisher, count=10, delay=1000ms

[Publisher 1] Finished sending messages.

[Publisher 2] Finished sending messages.

=== [Subscriber 2] Received Message Summary ===
PUB1 messages (42):--------------&gt; 10/10
PUB2 messages (43):-------------&gt; 10/10
[Subscriber 2] [✓] Received messages from both publishers.


=== [Subscriber 1] Received Message Summary ===
PUB1 messages (42):--------------&gt; 10/10
PUB2 messages (43):-------------&gt; 10/10
[Subscriber 1] [✓] Received messages from both publishers.

[Entrypoint] All subscribers received messages from both publishers.
</msg>
<arg>\n[CONTAINER LOG: All Local Binarys Multi Pub/Sub]\n${logs}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-10T10:26:15.241308" elapsed="0.000179"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-07-10T10:26:15.242601" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-10T10:26:15.241559" elapsed="0.001065"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-10T10:26:15.242843" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Local Multi Pub/Sub Test test failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-10T10:26:15.242706" elapsed="0.000180"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-10T10:26:15.242961" elapsed="0.005750"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-10T10:26:16.249047" level="INFO">Slept 1 second.</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-10T10:26:15.248797" elapsed="1.000360"/>
</kw>
<arg>local_shm</arg>
<status status="PASS" start="2025-07-10T10:25:57.123225" elapsed="19.126088"/>
</kw>
<tag>multi_pub_sub_local_shm</tag>
<status status="PASS" start="2025-07-10T10:25:57.122742" elapsed="19.126709"/>
</test>
<test id="s1-s2-t2" name="Multi Pub/Sub Local UDP Test" line="43">
<kw name="Run Multi Pub Sub Test Local">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-10T10:26:16.250887" level="INFO">${IMAGE} = multi_pub_sub_local_udp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-10T10:26:16.250742" elapsed="0.000166"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-10T10:26:16.251130" level="INFO">${CONTAINER} = multi_locallocal_udp</msg>
<var>${CONTAINER}</var>
<arg>multi_local${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-10T10:26:16.251008" elapsed="0.000140"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Running local multi pub/sub test (all binarys in same Container) with ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-10T10:26:16.251216" elapsed="0.000130"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<arg>${IMAGE}</arg>
<arg>local_multi</arg>
<arg>${layer_tag}</arg>
<status status="PASS" start="2025-07-10T10:26:16.251422" elapsed="0.119956"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-10T10:26:34.371940" level="INFO">Slept 18 seconds.</msg>
<arg>18s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-10T10:26:16.371591" elapsed="18.000506"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-07-10T10:26:34.375229" level="INFO">${logs} = [Entrypoint] Starting local multi pub/sub test in mode local_udp
[Publisher] Waiting for at least 2 subscriber(s) on topic: test_topic
[Publisher] Waiting for at least 2 subscriber(s) on topic: test_t...</msg>
<var>${logs}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-10T10:26:34.372269" elapsed="0.002986"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[CONTAINER LOG: All Local Binarys Multi Pub/Sub]\n${logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-10T10:26:34.375347" elapsed="0.000159"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-10T10:26:34.375772" level="INFO">
[CONTAINER LOG: All Local Binarys Multi Pub/Sub]
[Entrypoint] Starting local multi pub/sub test in mode local_udp
[Publisher] Waiting for at least 2 subscriber(s) on topic: test_topic
[Publisher] Waiting for at least 2 subscriber(s) on topic: test_topic
[Subscriber 1] Waiting for messages...

[Subscriber 2] Waiting for messages...
[Publisher] Found 2 subscriber(s). Proceeding to send messages.
[Publisher] Found 2 subscriber(s). Proceeding to send messages.
[Publisher 1] Started with mode=local_udp, topic=test_topic, node=multi_publisher, count=10, delay=1000ms
[Publisher 2] Started with mode=local_udp, topic=test_topic, node=multi_publisher, count=10, delay=1000ms

[Publisher 2] Finished sending messages.

[Publisher 1] Finished sending messages.

=== [Subscriber 2] Received Message Summary ===
PUB1 messages (42):--------------&gt; 10/10
PUB2 messages (43):-------------&gt; 10/10
[Subscriber 2] [✓] Received messages from both publishers.


=== [Subscriber 1] Received Message Summary ===
PUB1 messages (42):--------------&gt; 10/10
PUB2 messages (43):-------------&gt; 10/10
[Subscriber 1] [✓] Received messages from both publishers.

[Entrypoint] All subscribers received messages from both publishers.
</msg>
<arg>\n[CONTAINER LOG: All Local Binarys Multi Pub/Sub]\n${logs}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-10T10:26:34.375625" elapsed="0.000209"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-07-10T10:26:34.377211" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-10T10:26:34.375930" elapsed="0.001306"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-10T10:26:34.377457" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Local Multi Pub/Sub Test test failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-10T10:26:34.377319" elapsed="0.000181"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-10T10:26:34.377575" elapsed="0.005628"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-10T10:26:35.383528" level="INFO">Slept 1 second.</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-10T10:26:34.383286" elapsed="1.000347"/>
</kw>
<arg>local_udp</arg>
<status status="PASS" start="2025-07-10T10:26:16.250522" elapsed="19.133190"/>
</kw>
<tag>multi_pub_sub_local_udp</tag>
<status status="PASS" start="2025-07-10T10:26:16.250127" elapsed="19.133696"/>
</test>
<test id="s1-s2-t3" name="Multi Pub/Sub Network UDP Test" line="56">
<kw name="Run Multi Pub Sub Test Network">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-10T10:26:35.385283" level="INFO">${IMAGE} = multi_pub_sub_network_udp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-10T10:26:35.385133" elapsed="0.000171"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-10T10:26:35.385457" level="INFO">${TOPIC} = test_topic</msg>
<var>${TOPIC}</var>
<arg>test_topic</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-10T10:26:35.385377" elapsed="0.000097"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-10T10:26:35.385638" level="INFO">${PUB1} = pub1_network_udp</msg>
<var>${PUB1}</var>
<arg>pub1_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-10T10:26:35.385536" elapsed="0.000118"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-10T10:26:35.385812" level="INFO">${PUB2} = pub2_network_udp</msg>
<var>${PUB2}</var>
<arg>pub2_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-10T10:26:35.385716" elapsed="0.000112"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-10T10:26:35.386015" level="INFO">${SUB1} = sub1_network_udp</msg>
<var>${SUB1}</var>
<arg>sub1_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-10T10:26:35.385890" elapsed="0.000143"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-10T10:26:35.386199" level="INFO">${SUB2} = sub2_network_udp</msg>
<var>${SUB2}</var>
<arg>sub2_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-10T10:26:35.386100" elapsed="0.000114"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Starting multi pub/sub test with ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-10T10:26:35.386278" elapsed="0.000127"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${SUB1}</arg>
<arg>${IMAGE}</arg>
<arg>multi_subscriber</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-10T10:26:35.386484" elapsed="0.132690"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${SUB2}</arg>
<arg>${IMAGE}</arg>
<arg>multi_subscriber2</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-10T10:26:35.519348" elapsed="0.112282"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${PUB1}</arg>
<arg>${IMAGE}</arg>
<arg>multi_publisher</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-10T10:26:35.631896" elapsed="0.122518"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${PUB2}</arg>
<arg>${IMAGE}</arg>
<arg>multi_publisher2</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-10T10:26:35.754627" elapsed="0.128503"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-10T10:26:53.883661" level="INFO">Slept 18 seconds.</msg>
<arg>18s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-10T10:26:35.883342" elapsed="18.000433"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-07-10T10:26:53.886581" level="INFO">${log1} = [Entrypoint] Starting multi_subscriber in mode network_udp
[Subscriber 1] Waiting for messages...


=== [Subscriber 1] Received Message Summary ===
PUB1 messages (42):--------------&gt; 10/10
PUB2 messag...</msg>
<var>${log1}</var>
<arg>${SUB1}</arg>
<status status="PASS" start="2025-07-10T10:26:53.883938" elapsed="0.002672"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[CONTAINER LOG: SUBSCRIBER 1]\n${log1}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-10T10:26:53.886699" elapsed="0.000158"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-10T10:26:53.887099" level="INFO">
[CONTAINER LOG: SUBSCRIBER 1]
[Entrypoint] Starting multi_subscriber in mode network_udp
[Subscriber 1] Waiting for messages...


=== [Subscriber 1] Received Message Summary ===
PUB1 messages (42):--------------&gt; 10/10
PUB2 messages (43):-------------&gt; 10/10
[Subscriber 1] [✓] Received messages from both publishers.

</msg>
<arg>\n[CONTAINER LOG: SUBSCRIBER 1]\n${log1}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-10T10:26:53.886961" elapsed="0.000177"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-07-10T10:26:53.889209" level="INFO">${log2} = [Entrypoint] Starting multi_subscriber2 in mode network_udp
[Subscriber 2] Waiting for messages...

=== [Subscriber 2] Received Message Summary ===
PUB1 messages (42):--------------&gt; 10/10
PUB2 messag...</msg>
<var>${log2}</var>
<arg>${SUB2}</arg>
<status status="PASS" start="2025-07-10T10:26:53.887210" elapsed="0.002026"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[CONTAINER LOG: SUBSCRIBER 2]\n${log2}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-10T10:26:53.889320" elapsed="0.000148"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-10T10:26:53.889662" level="INFO">
[CONTAINER LOG: SUBSCRIBER 1]
[Entrypoint] Starting multi_subscriber2 in mode network_udp
[Subscriber 2] Waiting for messages...

=== [Subscriber 2] Received Message Summary ===
PUB1 messages (42):--------------&gt; 10/10
PUB2 messages (43):-------------&gt; 10/10
[Subscriber 2] [✓] Received messages from both publishers.

</msg>
<arg>\n[CONTAINER LOG: SUBSCRIBER 1]\n${log2}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-10T10:26:53.889558" elapsed="0.000141"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${SUB1}</arg>
<status status="PASS" start="2025-07-10T10:26:53.889767" elapsed="0.000979"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${SUB2}</arg>
<status status="PASS" start="2025-07-10T10:26:53.890828" elapsed="0.000981"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${PUB1}</arg>
<status status="PASS" start="2025-07-10T10:26:53.891891" elapsed="0.000944"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${PUB2}</arg>
<status status="PASS" start="2025-07-10T10:26:53.892915" elapsed="0.001114"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-07-10T10:26:53.894929" level="INFO">${exit1} = 0</msg>
<var>${exit1}</var>
<arg>${SUB1}</arg>
<status status="PASS" start="2025-07-10T10:26:53.894113" elapsed="0.000839"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-07-10T10:26:53.895883" level="INFO">${exit2} = 0</msg>
<var>${exit2}</var>
<arg>${SUB2}</arg>
<status status="PASS" start="2025-07-10T10:26:53.895062" elapsed="0.000844"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-10T10:26:53.896137" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit1}</arg>
<arg>0</arg>
<arg>Subscriber 1 failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-10T10:26:53.896005" elapsed="0.000176"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-10T10:26:53.896360" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit2}</arg>
<arg>0</arg>
<arg>Subscriber 2 failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-10T10:26:53.896255" elapsed="0.000142"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Multi Pub/Sub Test ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-07-10T10:26:53.896466" elapsed="0.000151"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${SUB1}</arg>
<status status="PASS" start="2025-07-10T10:26:53.896703" elapsed="0.004941"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${SUB2}</arg>
<status status="PASS" start="2025-07-10T10:26:53.901727" elapsed="0.005144"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${PUB1}</arg>
<status status="PASS" start="2025-07-10T10:26:53.906956" elapsed="0.005221"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${PUB2}</arg>
<status status="PASS" start="2025-07-10T10:26:53.912260" elapsed="0.005625"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-10T10:26:54.918238" level="INFO">Slept 1 second.</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-10T10:26:53.917991" elapsed="1.000360"/>
</kw>
<arg>network_udp</arg>
<arg>network</arg>
<status status="PASS" start="2025-07-10T10:26:35.384859" elapsed="19.533585"/>
</kw>
<tag>multi_pub_sub_network_udp</tag>
<status status="PASS" start="2025-07-10T10:26:35.384419" elapsed="19.534159"/>
</test>
<test id="s1-s2-t4" name="Multi Pub/Sub Network TCP Test" line="60">
<kw name="Run Multi Pub Sub Test Network">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-10T10:26:54.920445" level="INFO">${IMAGE} = multi_pub_sub_network_tcp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-10T10:26:54.920296" elapsed="0.000180"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-10T10:26:54.920633" level="INFO">${TOPIC} = test_topic</msg>
<var>${TOPIC}</var>
<arg>test_topic</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-10T10:26:54.920550" elapsed="0.000100"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-10T10:26:54.920814" level="INFO">${PUB1} = pub1_network_tcp</msg>
<var>${PUB1}</var>
<arg>pub1_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-10T10:26:54.920714" elapsed="0.000117"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-10T10:26:54.921012" level="INFO">${PUB2} = pub2_network_tcp</msg>
<var>${PUB2}</var>
<arg>pub2_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-10T10:26:54.920893" elapsed="0.000135"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-10T10:26:54.921259" level="INFO">${SUB1} = sub1_network_tcp</msg>
<var>${SUB1}</var>
<arg>sub1_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-10T10:26:54.921152" elapsed="0.000124"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-10T10:26:54.921449" level="INFO">${SUB2} = sub2_network_tcp</msg>
<var>${SUB2}</var>
<arg>sub2_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-10T10:26:54.921350" elapsed="0.000115"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Starting multi pub/sub test with ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-10T10:26:54.921529" elapsed="0.000128"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${SUB1}</arg>
<arg>${IMAGE}</arg>
<arg>multi_subscriber</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-10T10:26:54.921756" elapsed="0.139354"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${SUB2}</arg>
<arg>${IMAGE}</arg>
<arg>multi_subscriber2</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-10T10:26:55.061328" elapsed="0.121896"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${PUB1}</arg>
<arg>${IMAGE}</arg>
<arg>multi_publisher</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-10T10:26:55.183383" elapsed="0.122336"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${PUB2}</arg>
<arg>${IMAGE}</arg>
<arg>multi_publisher2</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-10T10:26:55.305900" elapsed="0.122789"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-10T10:27:13.429170" level="INFO">Slept 18 seconds.</msg>
<arg>18s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-10T10:26:55.428863" elapsed="18.000407"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-07-10T10:27:13.432153" level="INFO">${log1} = [Entrypoint] Starting multi_subscriber in mode network_tcp
[Subscriber 1] Waiting for messages...

1752143228210 ms | d54080857d0e | multi_subscriber | 7 | error | CTCPReaderLayer - TCPPubSub (Error) ...</msg>
<var>${log1}</var>
<arg>${SUB1}</arg>
<status status="PASS" start="2025-07-10T10:27:13.429428" elapsed="0.002751"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[CONTAINER LOG: SUBSCRIBER 1]\n${log1}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-10T10:27:13.432269" elapsed="0.000176"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-10T10:27:13.432732" level="INFO">
[CONTAINER LOG: SUBSCRIBER 1]
[Entrypoint] Starting multi_subscriber in mode network_tcp
[Subscriber 1] Waiting for messages...

1752143228210 ms | d54080857d0e | multi_subscriber | 7 | error | CTCPReaderLayer - TCPPubSub (Error) -SubscriberSession 172.18.0.2:49978-&gt;862817c7c5ba:40157: Error reading header length: End of file
1752143228211 ms | d54080857d0e | multi_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:33848: Failed connecting to publisher 862817c7c5ba:40157: Connection refused
1752143228212 ms | d54080857d0e | multi_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:33850: Failed connecting to publisher 862817c7c5ba:40157: Connection refused
1752143228212 ms | d54080857d0e | multi_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:33862: Failed connecting to publisher 862817c7c5ba:40157: Connection refused
1752143228213 ms | d54080857d0e | multi_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:33874: Failed connecting to publisher 862817c7c5ba:40157: Connection refused
1752143228213 ms | d54080857d0e | multi_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:33878: Failed connecting to publisher 862817c7c5ba:40157: Connection refused
1752143228234 ms | d54080857d0e | multi_subscriber | 7 | error | CTCPReaderLayer - TCPPubSub (Error) -SubscriberSession 172.18.0.2:48550-&gt;8815527dabf5:37779: Error reading header length: End of file
1752143228235 ms | d54080857d0e | multi_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:35804: Failed connecting to publisher 8815527dabf5:37779: Connection refused
1752143228235 ms | d54080857d0e | multi_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:35816: Failed connecting to publisher 8815527dabf5:37779: Connection refused
1752143228236 ms | d54080857d0e | multi_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:35820: Failed connecting to publisher 8815527dabf5:37779: Connection refused
1752143228237 ms | d54080857d0e | multi_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:35830: Failed connecting to publisher 8815527dabf5:37779: Connection refused
1752143228237 ms | d54080857d0e | multi_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:35836: Failed connecting to publisher 8815527dabf5:37779: Connection refused

=== [Subscriber 1] Received Message Summary ===
PUB1 messages (42):--------------&gt; 10/10
PUB2 messages (43):-------------&gt; 10/10
[Subscriber 1] [✓] Received messages from both publishers.

</msg>
<arg>\n[CONTAINER LOG: SUBSCRIBER 1]\n${log1}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-10T10:27:13.432561" elapsed="0.000261"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-07-10T10:27:13.435311" level="INFO">${log2} = [Entrypoint] Starting multi_subscriber2 in mode network_tcp
[Subscriber 2] Waiting for messages...
1752143228210 ms | 9c156a2d05db | multi_subscriber | 7 | error | CTCPReaderLayer - TCPPubSub (Error) ...</msg>
<var>${log2}</var>
<arg>${SUB2}</arg>
<status status="PASS" start="2025-07-10T10:27:13.432932" elapsed="0.002405"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[CONTAINER LOG: SUBSCRIBER 2]\n${log2}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-10T10:27:13.435422" elapsed="0.000156"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-10T10:27:13.435864" level="INFO">
[CONTAINER LOG: SUBSCRIBER 1]
[Entrypoint] Starting multi_subscriber2 in mode network_tcp
[Subscriber 2] Waiting for messages...
1752143228210 ms | 9c156a2d05db | multi_subscriber | 7 | error | CTCPReaderLayer - TCPPubSub (Error) -SubscriberSession 172.18.0.3:46570-&gt;862817c7c5ba:40157: Error reading header length: End of file
1752143228211 ms | 9c156a2d05db | multi_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.3:59424: Failed connecting to publisher 862817c7c5ba:40157: Connection refused
1752143228212 ms | 9c156a2d05db | multi_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.3:59434: Failed connecting to publisher 862817c7c5ba:40157: Connection refused
1752143228212 ms | 9c156a2d05db | multi_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.3:59436: Failed connecting to publisher 862817c7c5ba:40157: Connection refused
1752143228213 ms | 9c156a2d05db | multi_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.3:59442: Failed connecting to publisher 862817c7c5ba:40157: Connection refused
1752143228214 ms | 9c156a2d05db | multi_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.3:59458: Failed connecting to publisher 862817c7c5ba:40157: Connection refused
1752143228234 ms | 9c156a2d05db | multi_subscriber | 7 | error | CTCPReaderLayer - TCPPubSub (Error) -SubscriberSession 172.18.0.3:50660-&gt;8815527dabf5:37779: Error reading header length: End of file
1752143228235 ms | 9c156a2d05db | multi_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.3:35640: Failed connecting to publisher 8815527dabf5:37779: Connection refused
1752143228236 ms | 9c156a2d05db | multi_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.3:35656: Failed connecting to publisher 8815527dabf5:37779: Connection refused
1752143228236 ms | 9c156a2d05db | multi_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.3:35658: Failed connecting to publisher 8815527dabf5:37779: Connection refused
1752143228236 ms | 9c156a2d05db | multi_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.3:35666: Failed connecting to publisher 8815527dabf5:37779: Connection refused
1752143228237 ms | 9c156a2d05db | multi_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.3:35676: Failed connecting to publisher 8815527dabf5:37779: Connection refused

=== [Subscriber 2] Received Message Summary ===
PUB1 messages (42):--------------&gt; 10/10
PUB2 messages (43):-------------&gt; 10/10
[Subscriber 2] [✓] Received messages from both publishers.

</msg>
<arg>\n[CONTAINER LOG: SUBSCRIBER 1]\n${log2}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-10T10:27:13.435694" elapsed="0.000312"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${SUB1}</arg>
<status status="PASS" start="2025-07-10T10:27:13.436116" elapsed="0.001207"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${SUB2}</arg>
<status status="PASS" start="2025-07-10T10:27:13.437427" elapsed="0.001161"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${PUB1}</arg>
<status status="PASS" start="2025-07-10T10:27:13.438697" elapsed="0.001040"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${PUB2}</arg>
<status status="PASS" start="2025-07-10T10:27:13.439821" elapsed="0.000973"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-07-10T10:27:13.441780" level="INFO">${exit1} = 0</msg>
<var>${exit1}</var>
<arg>${SUB1}</arg>
<status status="PASS" start="2025-07-10T10:27:13.440878" elapsed="0.000926"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-07-10T10:27:13.442876" level="INFO">${exit2} = 0</msg>
<var>${exit2}</var>
<arg>${SUB2}</arg>
<status status="PASS" start="2025-07-10T10:27:13.441887" elapsed="0.001013"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-10T10:27:13.443146" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit1}</arg>
<arg>0</arg>
<arg>Subscriber 1 failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-10T10:27:13.443009" elapsed="0.000181"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-10T10:27:13.443378" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit2}</arg>
<arg>0</arg>
<arg>Subscriber 2 failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-10T10:27:13.443269" elapsed="0.000147"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Multi Pub/Sub Test ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-07-10T10:27:13.443488" elapsed="0.000141"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${SUB1}</arg>
<status status="PASS" start="2025-07-10T10:27:13.443713" elapsed="0.005090"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${SUB2}</arg>
<status status="PASS" start="2025-07-10T10:27:13.448886" elapsed="0.004898"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${PUB1}</arg>
<status status="PASS" start="2025-07-10T10:27:13.453902" elapsed="0.005438"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${PUB2}</arg>
<status status="PASS" start="2025-07-10T10:27:13.459421" elapsed="0.004878"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-10T10:27:14.464628" level="INFO">Slept 1 second.</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-10T10:27:13.464382" elapsed="1.000360"/>
</kw>
<arg>network_tcp</arg>
<arg>network</arg>
<status status="PASS" start="2025-07-10T10:26:54.920052" elapsed="19.544783"/>
</kw>
<tag>multi_pub_sub_network_tcp</tag>
<status status="PASS" start="2025-07-10T10:26:54.919585" elapsed="19.545410"/>
</test>
<status status="PASS" start="2025-07-10T10:25:45.167524" elapsed="89.298721"/>
</suite>
<suite id="s1-s3" name="Network Crash" source="/home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/network_crash/robottests/network_crash.robot">
<kw name="Init Test Context" type="SETUP">
<kw name="Set Test Context" owner="GlobalPathsLibrary">
<arg>network_crash</arg>
<arg>network_crash</arg>
<doc>Sets the test folder and tag prefix if it's a valid test case.
The folder must exist under integration_tests/ and contain typical test structure.</doc>
<status status="PASS" start="2025-07-10T10:27:14.469480" elapsed="0.000131"/>
</kw>
<kw name="Get Build Script Path" owner="GlobalPathsLibrary">
<msg time="2025-07-10T10:27:14.469776" level="INFO">${build} = /home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/network_crash/scripts/build_images.sh</msg>
<var>${build}</var>
<status status="PASS" start="2025-07-10T10:27:14.469688" elapsed="0.000108"/>
</kw>
<kw name="Get Network Name" owner="GlobalPathsLibrary">
<msg time="2025-07-10T10:27:14.469934" level="INFO">${net} = ecal_test_net</msg>
<var>${net}</var>
<status status="PASS" start="2025-07-10T10:27:14.469858" elapsed="0.000093"/>
</kw>
<kw name="Get Build Script Args" owner="GlobalPathsLibrary">
<msg time="2025-07-10T10:27:14.470132" level="INFO">${args} = ['network_crash']</msg>
<var>${args}</var>
<status status="PASS" start="2025-07-10T10:27:14.470047" elapsed="0.000103"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-07-10T10:27:14.470371" level="INFO">${BUILD_SCRIPT} = /home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/network_crash/scripts/build_images.sh</msg>
<arg>${BUILD_SCRIPT}</arg>
<arg>${build}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-07-10T10:27:14.470237" elapsed="0.000163"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-07-10T10:27:14.470632" level="INFO">${NETWORK} = ecal_test_net</msg>
<arg>${NETWORK}</arg>
<arg>${net}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-07-10T10:27:14.470515" elapsed="0.000144"/>
</kw>
<kw name="Get Test Description" owner="GlobalPathsLibrary">
<msg time="2025-07-10T10:27:14.470886" level="INFO">${desc} = Test Objective:
Verify that local UDP-based communication remains functional even if a separate network UDP publisher is disconnected —
simulating a network failure scenario such as a cable unplug.

T...</msg>
<var>${desc}</var>
<doc>Reads the *** Comments *** section from the .robot file and returns it as a string.</doc>
<status status="PASS" start="2025-07-10T10:27:14.470725" elapsed="0.000182"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-10T10:27:14.471092" level="INFO">Test Objective:
Verify that local UDP-based communication remains functional even if a separate network UDP publisher is disconnected —
simulating a network failure scenario such as a cable unplug.

Test Context:
This test validates the robustness of eCAL's UDP transport layer under fault conditions by ensuring that
local communication is not affected by network-layer interruptions.

Test Scenario:
1. A local UDP subscriber and two local UDP publishers run in the **same container** using eCAL's local mode.
- Publisher 1 sends payloads with value 42 from the beginning.
- Publisher 2 sends value 44, but only **after the network publisher is disconnected** (simulated delay).

2. A network UDP publisher runs in a **separate container**, using eCAL network mode and sends value 43.

3. All publishers run in parallel for a defined period (publisher 2 starts delayed after ~7s).

4. The test then **disconnects** the network UDP publisher from the Docker network.

Success Criteria:
- The subscriber receives:
• Messages with value 42 throughout the test.
• Messages with value 43 only **before** the disconnection.
• Messages with value 44 after the network crash (i.e., from local UDP Publisher 2).
- The subscriber container exits with code 0.
- The log confirms all expected messages have been received.

Note:
This test ensures **fault isolation** between local and network layers in eCAL middleware.</msg>
<arg>${desc}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-10T10:27:14.471001" elapsed="0.000129"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>[SETUP] Building image...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-10T10:27:14.471195" elapsed="0.000093"/>
</kw>
<kw name="Run Process" owner="Process">
<msg time="2025-07-10T10:27:14.471510" level="INFO">Starting process:
/home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/network_crash/scripts/build_images.sh network_crash</msg>
<msg time="2025-07-10T10:27:14.471935" level="INFO">Waiting for process to complete.</msg>
<msg time="2025-07-10T10:27:23.005114" level="INFO">Process completed.</msg>
<msg time="2025-07-10T10:27:23.005275" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<var>${result}</var>
<arg>${BUILD_SCRIPT}</arg>
<arg>@{args}</arg>
<doc>Runs a process and waits for it to complete.</doc>
<status status="PASS" start="2025-07-10T10:27:14.471372" elapsed="8.533929"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-10T10:27:23.005932" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${result.rc}</arg>
<arg>0</arg>
<arg>Docker image build failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-10T10:27:23.005453" elapsed="0.000585"/>
</kw>
<kw name="Create Docker Network" owner="MyDockerLibrary">
<arg>${NETWORK}</arg>
<status status="PASS" start="2025-07-10T10:27:23.006129" elapsed="0.007145"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-10T10:27:25.013642" level="INFO">Slept 2 seconds.</msg>
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-10T10:27:23.013383" elapsed="2.000364"/>
</kw>
<status status="PASS" start="2025-07-10T10:27:14.469335" elapsed="10.544493"/>
</kw>
<test id="s1-s3-t1" name="Local communication survives Network crash" line="45">
<kw name="Run Network Crash Survival Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-10T10:27:25.015018" level="INFO">${IMAGE} = network_crash_local_udp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_local_udp</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-10T10:27:25.014863" elapsed="0.000176"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-10T10:27:25.015201" level="INFO">${TOPIC} = test_topic</msg>
<var>${TOPIC}</var>
<arg>test_topic</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-10T10:27:25.015120" elapsed="0.000099"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-10T10:27:25.015365" level="INFO">${NET_PUB} = udp_network_pub</msg>
<var>${NET_PUB}</var>
<arg>udp_network_pub</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-10T10:27:25.015287" elapsed="0.000094"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-10T10:27:25.015520" level="INFO">${LOCAL_ALL} = udp_local_all</msg>
<var>${LOCAL_ALL}</var>
<arg>udp_local_all</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-10T10:27:25.015445" elapsed="0.000095"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n\n[INFO] Starting "LOCAL UDP (PUB1 + SUB + PUB3)" in one container and "NETWORK UDP (PUB2)" separately...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-10T10:27:25.015623" elapsed="0.000111"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${LOCAL_ALL}</arg>
<arg>${IMAGE}</arg>
<arg>udp_local_all</arg>
<arg>${TOPIC}</arg>
<arg>${LOCAL_ALL}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-10T10:27:25.015836" elapsed="0.131578"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${NET_PUB}</arg>
<arg>${IMAGE}</arg>
<arg>udp_network_pub</arg>
<arg>${TOPIC}</arg>
<arg>${NET_PUB}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-10T10:27:25.147620" elapsed="0.119296"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Letting PUB1 and PUB2 run in parallel for 7s...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-10T10:27:25.267139" elapsed="0.000170"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-10T10:27:32.267680" level="INFO">Slept 7 seconds.</msg>
<arg>7s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-10T10:27:25.267416" elapsed="7.000377"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[SIMULATION] Disconnecting NETWORK UDP Publisher..</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-10T10:27:32.267962" elapsed="0.000223"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-07-10T10:27:32.270862" level="INFO">${log_net} = [Entrypoint] Starting network UDP publisher...
[Publisher] Waiting for at least 1 subscriber(s) on topic: test_topic
[Publisher] Found 1 subscriber(s). Proceeding to send messages.
</msg>
<var>${log_net}</var>
<arg>${NET_PUB}</arg>
<status status="PASS" start="2025-07-10T10:27:32.268306" elapsed="0.002581"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-10T10:27:32.271113" level="INFO">
[LOG: NETWORK UDP PUB2 CONTAINER]
[Entrypoint] Starting network UDP publisher...
[Publisher] Waiting for at least 1 subscriber(s) on topic: test_topic
[Publisher] Found 1 subscriber(s). Proceeding to send messages.
</msg>
<arg>\n[LOG: NETWORK UDP PUB2 CONTAINER]\n${log_net}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-10T10:27:32.270995" elapsed="0.000201"/>
</kw>
<kw name="Disconnect Container From Network">
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[SIMULATION] Disconnecting ${container} from ${network} (simulate network failure)...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-10T10:27:32.271574" elapsed="0.000151"/>
</kw>
<kw name="Run Process" owner="Process">
<msg time="2025-07-10T10:27:32.272008" level="INFO">Starting process:
docker network disconnect ecal_test_net udp_network_pub</msg>
<msg time="2025-07-10T10:27:32.272663" level="INFO">Waiting for process to complete.</msg>
<msg time="2025-07-10T10:27:32.318859" level="INFO">Process completed.</msg>
<msg time="2025-07-10T10:27:32.319073" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<var>${result}</var>
<arg>docker</arg>
<arg>network</arg>
<arg>disconnect</arg>
<arg>${network}</arg>
<arg>${container}</arg>
<doc>Runs a process and waits for it to complete.</doc>
<status status="PASS" start="2025-07-10T10:27:32.271827" elapsed="0.047280"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-10T10:27:32.320076" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${result.rc}</arg>
<arg>0</arg>
<arg>Failed to disconnect ${container} from ${network}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-10T10:27:32.319308" elapsed="0.000837"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-10T10:27:33.320546" level="INFO">Slept 1 second.</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-10T10:27:32.320267" elapsed="1.000383"/>
</kw>
<arg>${NET_PUB}</arg>
<arg>${NETWORK}</arg>
<status status="PASS" start="2025-07-10T10:27:32.271330" elapsed="1.049399"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-10T10:28:06.321163" level="INFO">Slept 33 seconds.</msg>
<arg>33s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-10T10:27:33.320853" elapsed="33.000428"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-07-10T10:28:06.324538" level="INFO">${log_local} = [Entrypoint] Starting UDP subscriber, then UDP publisher...
[Publisher] Waiting for at least 1 subscriber(s) on topic: test_topic
[Publisher] Found 1 subscriber(s). Proceeding to send messages.
[Subsc...</msg>
<var>${log_local}</var>
<arg>${LOCAL_ALL}</arg>
<status status="PASS" start="2025-07-10T10:28:06.321450" elapsed="0.003113"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[LOG: LOCAL UDP PUB + SUB + PUB3 CONTAINER]\n${log_local}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-10T10:28:06.324654" elapsed="0.000163"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-10T10:28:06.325104" level="INFO">
[LOG: LOCAL UDP PUB + SUB + PUB3 CONTAINER]
[Entrypoint] Starting UDP subscriber, then UDP publisher...
[Publisher] Waiting for at least 1 subscriber(s) on topic: test_topic
[Publisher] Found 1 subscriber(s). Proceeding to send messages.
[Subscriber] Listening on topic 'test_topic'...
[Subscriber] Received: 42
[Subscriber] Received: 43
[Subscriber] Received: 42
[Subscriber] Received: 43
[Subscriber] Received: 42
[Subscriber] Received: 43
[Subscriber] Received: 42
[Subscriber] Received: 43
[Subscriber] Received: 42
[Subscriber] Received: 43
[Subscriber] Received: 42
[Subscriber] Received: 42
[Subscriber] Received: 42
[Subscriber] Received: 42
[Entrypoint] Starting delayed LOCAL UDP Publisher 2 after network failure...
[Publisher] Waiting for at least 1 subscriber(s) on topic: test_topic
[Publisher] Found 1 subscriber(s). Proceeding to send messages.
[Subscriber] Received: 42
[Subscriber] Received: 42
[Subscriber] Received: 44
[Subscriber] Received: 42
[Subscriber] Received: 44
[Subscriber] Received: 42
[Subscriber] Received: 44
[Subscriber] Received: 42
[Subscriber] Received: 44
[Subscriber] Received: 42
[Subscriber] Received: 44
[Subscriber] Received: 42
[Subscriber] Received: 44
[Subscriber] Received: 42
[Subscriber] Received: 44
[Subscriber] Received: 42
[Subscriber] Received: 44
[Subscriber] Received: 42
[Subscriber] Received: 44
[Subscriber] Received: 42
[Subscriber] Received: 44
[Subscriber] Received: 42
[Subscriber] Received: 44
[Subscriber] Received: 42
[Subscriber] Received: 44
[Subscriber] Received: 42
[Subscriber] Received: 44
[Subscriber] Received: 42
[Subscriber] Received: 44
[Subscriber] Received: 42
[Subscriber] Received: 44

=== Message Summary ===

Local UDP PUB1 messages (42):--------------&gt; 25/25
Network UDP PUB2 messages (43):-------------&gt; 5/25
Local UDP PUB3 messages after crash (44):--&gt; 15/15


[✓] All expected messages received: local before and after crash, and network.
[Entrypoint] Subscriber exited with code 0
</msg>
<arg>\n[LOG: LOCAL UDP PUB + SUB + PUB3 CONTAINER]\n${log_local}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-10T10:28:06.324931" elapsed="0.000245"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${LOCAL_ALL}</arg>
<status status="PASS" start="2025-07-10T10:28:06.325273" elapsed="0.001222"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-07-10T10:28:06.327732" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>${LOCAL_ALL}</arg>
<status status="PASS" start="2025-07-10T10:28:06.326611" elapsed="0.001145"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-10T10:28:06.328002" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>LOCAL container (PUB + SUB + PUB3) failed unexpectedly!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-10T10:28:06.327840" elapsed="0.000210"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Network Crash Test with Local Recovery Publisher</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-07-10T10:28:06.328128" elapsed="0.000129"/>
</kw>
<status status="PASS" start="2025-07-10T10:27:25.014413" elapsed="41.313916"/>
</kw>
<tag>network_crash_test</tag>
<status status="PASS" start="2025-07-10T10:27:25.013889" elapsed="41.314531"/>
</test>
<status status="PASS" start="2025-07-10T10:27:14.466840" elapsed="51.862361"/>
</suite>
<suite id="s1-s4" name="Pub Crash" source="/home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/pub_crash/robottests/pub_crash.robot">
<kw name="Init Test Context" type="SETUP">
<kw name="Set Test Context" owner="GlobalPathsLibrary">
<arg>pub_crash</arg>
<arg>pub_crash</arg>
<doc>Sets the test folder and tag prefix if it's a valid test case.
The folder must exist under integration_tests/ and contain typical test structure.</doc>
<status status="PASS" start="2025-07-10T10:28:06.332331" elapsed="0.000126"/>
</kw>
<kw name="Get Build Script Path" owner="GlobalPathsLibrary">
<msg time="2025-07-10T10:28:06.332624" level="INFO">${build} = /home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/pub_crash/scripts/build_images.sh</msg>
<var>${build}</var>
<status status="PASS" start="2025-07-10T10:28:06.332536" elapsed="0.000108"/>
</kw>
<kw name="Get Network Name" owner="GlobalPathsLibrary">
<msg time="2025-07-10T10:28:06.332787" level="INFO">${net} = ecal_test_net</msg>
<var>${net}</var>
<status status="PASS" start="2025-07-10T10:28:06.332709" elapsed="0.000096"/>
</kw>
<kw name="Get Build Script Args" owner="GlobalPathsLibrary">
<msg time="2025-07-10T10:28:06.332940" level="INFO">${args} = ['pub_crash']</msg>
<var>${args}</var>
<status status="PASS" start="2025-07-10T10:28:06.332865" elapsed="0.000093"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-07-10T10:28:06.333252" level="INFO">${BUILD_SCRIPT} = /home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/pub_crash/scripts/build_images.sh</msg>
<arg>${BUILD_SCRIPT}</arg>
<arg>${build}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-07-10T10:28:06.333101" elapsed="0.000181"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-07-10T10:28:06.333473" level="INFO">${NETWORK} = ecal_test_net</msg>
<arg>${NETWORK}</arg>
<arg>${net}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-07-10T10:28:06.333357" elapsed="0.000142"/>
</kw>
<kw name="Get Test Description" owner="GlobalPathsLibrary">
<msg time="2025-07-10T10:28:06.333707" level="INFO">${desc} = Test Objective:
Ensure that communication to the subscriber continues even if one publisher crashes.

Test Scenario:
- Two publishers are started:
1. crash_publisher: sends a few messages (value 42) a...</msg>
<var>${desc}</var>
<doc>Reads the *** Comments *** section from the .robot file and returns it as a string.</doc>
<status status="PASS" start="2025-07-10T10:28:06.333564" elapsed="0.000163"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-10T10:28:06.333879" level="INFO">Test Objective:
Ensure that communication to the subscriber continues even if one publisher crashes.

Test Scenario:
- Two publishers are started:
1. crash_publisher: sends a few messages (value 42) and then crashes.
2. test_publisher: continuously sends messages (value 43).
- One subscriber receives data from both publishers.
- A monitoring process tracks process appearance.

Success Criteria:
- Subscriber receives enough messages with value 43 after crash_publisher crashes.
- Subscriber exits with code 0, indicating continued communication.
- All containers terminate cleanly.</msg>
<arg>${desc}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-10T10:28:06.333796" elapsed="0.000113"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>[SETUP] Building Docker image...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-10T10:28:06.334007" elapsed="0.000102"/>
</kw>
<kw name="Run Process" owner="Process">
<msg time="2025-07-10T10:28:06.334340" level="INFO">Starting process:
/home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/pub_crash/scripts/build_images.sh pub_crash</msg>
<msg time="2025-07-10T10:28:06.334741" level="INFO">Waiting for process to complete.</msg>
<msg time="2025-07-10T10:28:15.161552" level="INFO">Process completed.</msg>
<msg time="2025-07-10T10:28:15.161713" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<var>${result}</var>
<arg>${BUILD_SCRIPT}</arg>
<arg>@{args}</arg>
<doc>Runs a process and waits for it to complete.</doc>
<status status="PASS" start="2025-07-10T10:28:06.334195" elapsed="8.827544"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-10T10:28:15.162409" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${result.rc}</arg>
<arg>0</arg>
<arg>Docker build failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-10T10:28:15.161890" elapsed="0.000569"/>
</kw>
<kw name="Create Docker Network" owner="MyDockerLibrary">
<arg>${NETWORK}</arg>
<status status="PASS" start="2025-07-10T10:28:15.162545" elapsed="0.006876"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-10T10:28:18.169764" level="INFO">Slept 3 seconds.</msg>
<arg>3s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-10T10:28:15.169533" elapsed="3.000337"/>
</kw>
<status status="PASS" start="2025-07-10T10:28:06.332200" elapsed="11.837748"/>
</kw>
<test id="s1-s4-t1" name="Communication Continues After Publisher Crash (UDP)" line="30">
<kw name="Run Network Communication Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-10T10:28:18.171211" level="INFO">${IMAGE} = pub_crash_network_udp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-10T10:28:18.171058" elapsed="0.000175"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-10T10:28:18.171389" level="INFO">${TOPIC} = test_topic</msg>
<var>${TOPIC}</var>
<arg>test_topic</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-10T10:28:18.171306" elapsed="0.000100"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-10T10:28:18.171574" level="INFO">${CRASH_PUB} = crash_pub_network_udp</msg>
<var>${CRASH_PUB}</var>
<arg>crash_pub_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-10T10:28:18.171471" elapsed="0.000120"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-10T10:28:18.171758" level="INFO">${TEST_PUB} = test_pub_network_udp</msg>
<var>${TEST_PUB}</var>
<arg>test_pub_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-10T10:28:18.171654" elapsed="0.000121"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-10T10:28:18.171940" level="INFO">${SUB_NAME} = sub_network_udp</msg>
<var>${SUB_NAME}</var>
<arg>sub_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-10T10:28:18.171840" elapsed="0.000117"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Starting communication continuity test with ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-10T10:28:18.172048" elapsed="0.000125"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${SUB_NAME}</arg>
<arg>${IMAGE}</arg>
<arg>subscriber</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-10T10:28:18.172258" elapsed="0.127844"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${CRASH_PUB}</arg>
<arg>${IMAGE}</arg>
<arg>crash_publisher</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-10T10:28:18.300315" elapsed="0.120878"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${TEST_PUB}</arg>
<arg>${IMAGE}</arg>
<arg>test_publisher</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${TEST_PUB}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-10T10:28:18.421355" elapsed="0.119570"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-10T10:28:53.541462" level="INFO">Slept 35 seconds.</msg>
<arg>35s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-10T10:28:18.541165" elapsed="35.000414"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-07-10T10:28:53.544512" level="INFO">${sub_logs} = [Entrypoint] Starting crash subscriber in mode network_udp

[Subscriber] Registering callback and waiting for messages...

[Subscriber] Received value: 42
[Subscriber] Received value: 43
[Subscriber] ...</msg>
<var>${sub_logs}</var>
<arg>${SUB_NAME}</arg>
<status status="PASS" start="2025-07-10T10:28:53.541743" elapsed="0.002795"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[SUBSCRIBER CONTAINER OUTPUT]\n${sub_logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-10T10:28:53.544628" elapsed="0.000159"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-10T10:28:53.545055" level="INFO">
[SUBSCRIBER CONTAINER OUTPUT]
[Entrypoint] Starting crash subscriber in mode network_udp

[Subscriber] Registering callback and waiting for messages...

[Subscriber] Received value: 42
[Subscriber] Received value: 43
[Subscriber] Received value: 42
[Subscriber] Received value: 43
[Subscriber] Received value: 42
[Subscriber] Received value: 43
[Subscriber] Received value: 42
[Subscriber] Received value: 43
[Subscriber] Received value: 42
[Subscriber] Received value: 43
[Subscriber] Received value: 42
[Subscriber] Received value: 43
[Subscriber] Received value: 42
[Subscriber] Received value: 43
[Subscriber] Received value: 42
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Summary] Received 8 x 42 (crash pub), 25 x 43 (test pub)

[✓] Communication continued after crash!

[✓] One Publisher crashed and no more messages received from the crashed publisher!
</msg>
<arg>\n[SUBSCRIBER CONTAINER OUTPUT]\n${sub_logs}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-10T10:28:53.544901" elapsed="0.000248"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-07-10T10:28:53.547283" level="INFO">${crash_logs} = [Entrypoint] Starting crash publisher in mode network_udp
[Publisher] Waiting for at least 1 subscriber(s) on topic: test_topic
[Publisher] Found 1 subscriber(s). Proceeding to send messages.
[Crash P...</msg>
<var>${crash_logs}</var>
<arg>${CRASH_PUB}</arg>
<status status="PASS" start="2025-07-10T10:28:53.545223" elapsed="0.002085"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[CRASH PUBLISHER OUTPUT]\n${crash_logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-10T10:28:53.547391" elapsed="0.000139"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-10T10:28:53.547752" level="INFO">
[CRASH PUBLISHER OUTPUT]
[Entrypoint] Starting crash publisher in mode network_udp
[Publisher] Waiting for at least 1 subscriber(s) on topic: test_topic
[Publisher] Found 1 subscriber(s). Proceeding to send messages.
[Crash Publisher] Starting and will crash after 10 messages...
[Crash Publisher] Sent buffer with content: 42 (message 1)
[Crash Publisher] Sent buffer with content: 42 (message 2)
[Crash Publisher] Sent buffer with content: 42 (message 3)
[Crash Publisher] Sent buffer with content: 42 (message 4)
[Crash Publisher] Sent buffer with content: 42 (message 5)
[Crash Publisher] Sent buffer with content: 42 (message 6)
[Crash Publisher] Sent buffer with content: 42 (message 7)
[Crash Publisher] Sent buffer with content: 42 (message 8)
[Crash Publisher] Crashing after message 7
./entrypoint.sh: line 60:     7 Aborted                 (core dumped) ./crash_publisher $ARGS $EXTRA
</msg>
<arg>\n[CRASH PUBLISHER OUTPUT]\n${crash_logs}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-10T10:28:53.547635" elapsed="0.000154"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${SUB_NAME}</arg>
<status status="PASS" start="2025-07-10T10:28:53.547860" elapsed="0.000987"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${CRASH_PUB}</arg>
<status status="PASS" start="2025-07-10T10:28:53.548928" elapsed="0.000981"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${TEST_PUB}</arg>
<status status="PASS" start="2025-07-10T10:28:53.550016" elapsed="0.000940"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-07-10T10:28:53.551903" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>${SUB_NAME}</arg>
<status status="PASS" start="2025-07-10T10:28:53.551064" elapsed="0.000862"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-10T10:28:53.552170" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Communication failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-10T10:28:53.552033" elapsed="0.000180"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Network Communication after one Publisher crash ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-07-10T10:28:53.552288" elapsed="0.000141"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${SUB_NAME}</arg>
<status status="PASS" start="2025-07-10T10:28:53.552524" elapsed="0.004918"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${CRASH_PUB}</arg>
<status status="PASS" start="2025-07-10T10:28:53.557524" elapsed="0.004836"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${TEST_PUB}</arg>
<status status="PASS" start="2025-07-10T10:28:53.562441" elapsed="0.004810"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-10T10:28:54.567580" level="INFO">Slept 1 second.</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-10T10:28:53.567334" elapsed="1.000366"/>
</kw>
<arg>network_udp</arg>
<arg>network</arg>
<status status="PASS" start="2025-07-10T10:28:18.170541" elapsed="36.397257"/>
</kw>
<tag>pub_crash_network_udp</tag>
<status status="PASS" start="2025-07-10T10:28:18.170040" elapsed="36.397874"/>
</test>
<test id="s1-s4-t2" name="Communication Continues After Publisher Crash (TCP)" line="34">
<kw name="Run Network Communication Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-10T10:28:54.569700" level="INFO">${IMAGE} = pub_crash_network_tcp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-10T10:28:54.569554" elapsed="0.000166"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-10T10:28:54.569873" level="INFO">${TOPIC} = test_topic</msg>
<var>${TOPIC}</var>
<arg>test_topic</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-10T10:28:54.569793" elapsed="0.000097"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-10T10:28:54.570078" level="INFO">${CRASH_PUB} = crash_pub_network_tcp</msg>
<var>${CRASH_PUB}</var>
<arg>crash_pub_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-10T10:28:54.569954" elapsed="0.000141"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-10T10:28:54.570258" level="INFO">${TEST_PUB} = test_pub_network_tcp</msg>
<var>${TEST_PUB}</var>
<arg>test_pub_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-10T10:28:54.570159" elapsed="0.000115"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-10T10:28:54.570434" level="INFO">${SUB_NAME} = sub_network_tcp</msg>
<var>${SUB_NAME}</var>
<arg>sub_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-10T10:28:54.570336" elapsed="0.000114"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Starting communication continuity test with ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-10T10:28:54.570513" elapsed="0.000116"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${SUB_NAME}</arg>
<arg>${IMAGE}</arg>
<arg>subscriber</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-10T10:28:54.570720" elapsed="0.129177"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${CRASH_PUB}</arg>
<arg>${IMAGE}</arg>
<arg>crash_publisher</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-10T10:28:54.700176" elapsed="0.122781"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${TEST_PUB}</arg>
<arg>${IMAGE}</arg>
<arg>test_publisher</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${TEST_PUB}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-10T10:28:54.823151" elapsed="0.122318"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-10T10:29:29.946047" level="INFO">Slept 35 seconds.</msg>
<arg>35s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-10T10:28:54.945688" elapsed="35.000469"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-07-10T10:29:29.949085" level="INFO">${sub_logs} = [Entrypoint] Starting crash subscriber in mode network_tcp

[Subscriber] Registering callback and waiting for messages...

[Subscriber] Received value: 42
[Subscriber] Received value: 43
[Subscriber] ...</msg>
<var>${sub_logs}</var>
<arg>${SUB_NAME}</arg>
<status status="PASS" start="2025-07-10T10:29:29.946311" elapsed="0.002801"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[SUBSCRIBER CONTAINER OUTPUT]\n${sub_logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-10T10:29:29.949201" elapsed="0.000171"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-10T10:29:29.949636" level="INFO">
[SUBSCRIBER CONTAINER OUTPUT]
[Entrypoint] Starting crash subscriber in mode network_tcp

[Subscriber] Registering callback and waiting for messages...

[Subscriber] Received value: 42
[Subscriber] Received value: 43
[Subscriber] Received value: 42
[Subscriber] Received value: 43
[Subscriber] Received value: 42
[Subscriber] Received value: 43
[Subscriber] Received value: 42
[Subscriber] Received value: 43
[Subscriber] Received value: 42
[Subscriber] Received value: 43
[Subscriber] Received value: 42
[Subscriber] Received value: 43
[Subscriber] Received value: 42
[Subscriber] Received value: 43
[Subscriber] Received value: 42
[Subscriber] Received value: 43
[Subscriber] Received value: 43
1752143345569 ms | d2ca00eda495 | ./test_subscriber | 7 | error | CTCPReaderLayer - TCPPubSub (Error) -SubscriberSession 172.18.0.2:37596-&gt;77b139057cb0:43215: Error reading header length: End of file
1752143345570 ms | d2ca00eda495 | ./test_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:34990: Failed connecting to publisher 77b139057cb0:43215: Connection refused
1752143345571 ms | d2ca00eda495 | ./test_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:34994: Failed connecting to publisher 77b139057cb0:43215: Connection refused
1752143345572 ms | d2ca00eda495 | ./test_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:35010: Failed connecting to publisher 77b139057cb0:43215: Connection refused
1752143345572 ms | d2ca00eda495 | ./test_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:35016: Failed connecting to publisher 77b139057cb0:43215: Connection refused
1752143345573 ms | d2ca00eda495 | ./test_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:35018: Failed connecting to publisher 77b139057cb0:43215: Connection refused
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Subscriber] Received value: 43
1752143362253 ms | d2ca00eda495 | ./test_subscriber | 7 | error | CTCPReaderLayer - TCPPubSub (Error) -SubscriberSession 172.18.0.2:49122-&gt;44b416630104:45999: Error reading header length: End of file
1752143362254 ms | d2ca00eda495 | ./test_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:54134: Failed connecting to publisher 44b416630104:45999: Connection refused
1752143362254 ms | d2ca00eda495 | ./test_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:54150: Failed connecting to publisher 44b416630104:45999: Connection refused
1752143362255 ms | d2ca00eda495 | ./test_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:54152: Failed connecting to publisher 44b416630104:45999: Connection refused
1752143362256 ms | d2ca00eda495 | ./test_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:54164: Failed connecting to publisher 44b416630104:45999: Connection refused
1752143362256 ms | d2ca00eda495 | ./test_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:54168: Failed connecting to publisher 44b416630104:45999: Connection refused
[Summary] Received 8 x 42 (crash pub), 25 x 43 (test pub)

[✓] Communication continued after crash!

[✓] One Publisher crashed and no more messages received from the crashed publisher!
</msg>
<arg>\n[SUBSCRIBER CONTAINER OUTPUT]\n${sub_logs}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-10T10:29:29.949482" elapsed="0.000258"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-07-10T10:29:29.952186" level="INFO">${crash_logs} = [Entrypoint] Starting crash publisher in mode network_tcp
[Publisher] Waiting for at least 1 subscriber(s) on topic: test_topic
1752143335702 ms | 77b139057cb0 | ./crash_publisher | 7 | info | CTCPRea...</msg>
<var>${crash_logs}</var>
<arg>${CRASH_PUB}</arg>
<status status="PASS" start="2025-07-10T10:29:29.949849" elapsed="0.002362"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[CRASH PUBLISHER OUTPUT]\n${crash_logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-10T10:29:29.952293" elapsed="0.000139"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-10T10:29:29.952661" level="INFO">
[CRASH PUBLISHER OUTPUT]
[Entrypoint] Starting crash publisher in mode network_tcp
[Publisher] Waiting for at least 1 subscriber(s) on topic: test_topic
1752143335702 ms | 77b139057cb0 | ./crash_publisher | 7 | info | CTCPReaderLayer - TCPPubSub (Info) -Publisher :::0: Created publisher and waiting for clients.
1752143335703 ms | 77b139057cb0 | ./crash_publisher | 7 | info | CTCPReaderLayer - TCPPubSub (Info) -Publisher :::43215: Subscriber ::ffff:172.18.0.2:37596 has connected.
[Publisher] Found 1 subscriber(s). Proceeding to send messages.
[Crash Publisher] Starting and will crash after 10 messages...
[Crash Publisher] Sent buffer with content: 42 (message 1)
[Crash Publisher] Sent buffer with content: 42 (message 2)
[Crash Publisher] Sent buffer with content: 42 (message 3)
[Crash Publisher] Sent buffer with content: 42 (message 4)
[Crash Publisher] Sent buffer with content: 42 (message 5)
[Crash Publisher] Sent buffer with content: 42 (message 6)
[Crash Publisher] Sent buffer with content: 42 (message 7)
[Crash Publisher] Sent buffer with content: 42 (message 8)
[Crash Publisher] Crashing after message 7
./entrypoint.sh: line 60:     7 Aborted                 (core dumped) ./crash_publisher $ARGS $EXTRA
</msg>
<arg>\n[CRASH PUBLISHER OUTPUT]\n${crash_logs}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-10T10:29:29.952543" elapsed="0.000156"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${SUB_NAME}</arg>
<status status="PASS" start="2025-07-10T10:29:29.952769" elapsed="0.000985"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${CRASH_PUB}</arg>
<status status="PASS" start="2025-07-10T10:29:29.953866" elapsed="0.000949"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${TEST_PUB}</arg>
<status status="PASS" start="2025-07-10T10:29:29.954896" elapsed="0.000927"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-07-10T10:29:29.956797" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>${SUB_NAME}</arg>
<status status="PASS" start="2025-07-10T10:29:29.955904" elapsed="0.000916"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-10T10:29:29.957064" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Communication failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-10T10:29:29.956902" elapsed="0.000207"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Network Communication after one Publisher crash ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-07-10T10:29:29.957186" elapsed="0.000140"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${SUB_NAME}</arg>
<status status="PASS" start="2025-07-10T10:29:29.957419" elapsed="0.004985"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${CRASH_PUB}</arg>
<status status="PASS" start="2025-07-10T10:29:29.962488" elapsed="0.004727"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${TEST_PUB}</arg>
<status status="PASS" start="2025-07-10T10:29:29.967298" elapsed="0.004982"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-10T10:29:30.972617" level="INFO">Slept 1 second.</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-10T10:29:29.972364" elapsed="1.000375"/>
</kw>
<arg>network_tcp</arg>
<arg>network</arg>
<status status="PASS" start="2025-07-10T10:28:54.569325" elapsed="36.403514"/>
</kw>
<tag>pub_crash_network_tcp</tag>
<status status="PASS" start="2025-07-10T10:28:54.568876" elapsed="36.404138"/>
</test>
<test id="s1-s4-t3" name="Communication Continues After Publisher Crash (SHM)" line="38">
<kw name="Run Local Communication Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-10T10:29:30.975031" level="INFO">${IMAGE} = pub_crash_local_shm</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-10T10:29:30.974852" elapsed="0.000202"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-10T10:29:30.975243" level="INFO">${CONTAINER} = local_all_local_shm</msg>
<var>${CONTAINER}</var>
<arg>local_all_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-10T10:29:30.975131" elapsed="0.000130"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\nStarting local test container with ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-10T10:29:30.975329" elapsed="0.000124"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<arg>${IMAGE}</arg>
<arg>local_all</arg>
<arg>${layer_tag}</arg>
<status status="PASS" start="2025-07-10T10:29:30.975546" elapsed="0.125631"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-10T10:30:06.101759" level="INFO">Slept 35 seconds.</msg>
<arg>35s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-10T10:29:31.101405" elapsed="35.000468"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-07-10T10:30:06.105251" level="INFO">${logs} = [Entrypoint] Starting local test (pub/sub/monitor) in mode local_shm
Shared memory monitoring is enabled (domain: ecal_mon - queue size: 1024)
[Publisher] Waiting for at least 1 subscriber(s) on topic...</msg>
<var>${logs}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-10T10:30:06.102056" elapsed="0.003221"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n\n[CONTAINER LOG: LOCAL PUB+SUB]\n\n${logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-10T10:30:06.105369" elapsed="0.000173"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-10T10:30:06.105808" level="INFO">

[CONTAINER LOG: LOCAL PUB+SUB]

[Entrypoint] Starting local test (pub/sub/monitor) in mode local_shm
Shared memory monitoring is enabled (domain: ecal_mon - queue size: 1024)
[Publisher] Waiting for at least 1 subscriber(s) on topic: test_topic
Shared memory monitoring is enabled (domain: ecal_mon - queue size: 1024)
[Publisher] Waiting for at least 1 subscriber(s) on topic: test_topic
Shared memory monitoring is enabled (domain: ecal_mon - queue size: 1024)

[Subscriber] Registering callback and waiting for messages...

[Publisher] Found 1 subscriber(s). Proceeding to send messages.
[Publisher] Found 1 subscriber(s). Proceeding to send messages.
[Crash Publisher] Starting and will crash after 10 messages...

 [Test Publisher] Started with mode=local_shm, topic=test_topic, node=test_publisher, count=25, delay=1000ms
[Crash Publisher] Sent buffer with content: 42 (message 1)
[Test Publisher] Sent buffer with content: 43 (message 1)
[Subscriber] Received value: 42
[Crash Publisher] Sent buffer with content: 42 (message 2)
[Subscriber] Received value: 42
[Test Publisher] Sent buffer with content: 43 (message 2)
[Crash Publisher] Sent buffer with content: 42 (message 3)
[Subscriber] Received value: 42
[Test Publisher] Sent buffer with content: 43 (message 3)
[Crash Publisher] Sent buffer with content: 42 (message 4)
[Subscriber] Received value: 42
[Test Publisher] Sent buffer with content: 43 (message 4)
[Crash Publisher] Sent buffer with content: 42 (message 5)
[Test Publisher] Sent buffer with content: 43 (message 5)
[Subscriber] Received value: 42
[Crash Publisher] Sent buffer with content: 42 (message 6)
[Test Publisher] Sent buffer with content: 43 (message 6)
[Subscriber] Received value: 42
[Crash Publisher] Sent buffer with content: 42 (message 7)
[Test Publisher] Sent buffer with content: 43 (message 7)
[Subscriber] Received value: 42
[Test Publisher] Sent buffer with content: 43 (message 8)
[Crash Publisher] Sent buffer with content: 42 (message 8)
[Subscriber] Received value: 42
[Crash Publisher] Crashing after message 7
[Test Publisher] Sent buffer with content: 43 (message 9)
[Test Publisher] Sent buffer with content: 43 (message 10)
[Test Publisher] Sent buffer with content: 43 (message 11)
[Test Publisher] Sent buffer with content: 43 (message 12)
[Test Publisher] Sent buffer with content: 43 (message 13)
[Test Publisher] Sent buffer with content: 43 (message 14)
[Test Publisher] Sent buffer with content: 43 (message 15)
[Test Publisher] Sent buffer with content: 43 (message 16)
[Test Publisher] Sent buffer with content: 43 (message 17)
[Test Publisher] Sent buffer with content: 43 (message 18)
[Test Publisher] Sent buffer with content: 43 (message 19)
[Test Publisher] Sent buffer with content: 43 (message 20)
[Test Publisher] Sent buffer with content: 43 (message 21)
[Test Publisher] Sent buffer with content: 43 (message 22)
[Test Publisher] Sent buffer with content: 43 (message 23)
[Test Publisher] Sent buffer with content: 43 (message 24)
[Test Publisher] Sent buffer with content: 43 (message 25)
[Summary] Received 8 x 42 (crash pub), 0 x 43 (test pub)

[✓] Communication continued after crash!

[✓] One Publisher crashed and no more messages received from the crashed publisher!
./entrypoint.sh: line 55:     7 Aborted                 (core dumped) ./crash_publisher $ARGS
</msg>
<arg>\n\n[CONTAINER LOG: LOCAL PUB+SUB]\n\n${logs}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-10T10:30:06.105649" elapsed="0.000240"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-07-10T10:30:06.107363" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-10T10:30:06.106007" elapsed="0.001387"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-10T10:30:06.107681" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Local test failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-10T10:30:06.107505" elapsed="0.000234"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Local Communication after one Publisher crash ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-07-10T10:30:06.107841" elapsed="0.000209"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-10T10:30:06.108147" elapsed="0.005359"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-10T10:30:07.113846" level="INFO">Slept 1 second.</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-10T10:30:06.113592" elapsed="1.000371"/>
</kw>
<arg>local_shm</arg>
<status status="PASS" start="2025-07-10T10:29:30.974628" elapsed="36.139447"/>
</kw>
<tag>pub_crash_local_shm</tag>
<status status="PASS" start="2025-07-10T10:29:30.974235" elapsed="36.139954"/>
</test>
<status status="PASS" start="2025-07-10T10:28:06.329763" elapsed="120.785050"/>
</suite>
<suite id="s1-s5" name="Rpc N To N Test" source="/home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/rpc_n_to_n_test/robottests/rpc_n_to_n_test.robot">
<kw name="Init Test Context" type="SETUP">
<kw name="Set Test Context" owner="GlobalPathsLibrary">
<arg>rpc_n_to_n_test</arg>
<arg>rpc_n_to_n_test</arg>
<doc>Sets the test folder and tag prefix if it's a valid test case.
The folder must exist under integration_tests/ and contain typical test structure.</doc>
<status status="PASS" start="2025-07-10T10:30:07.118264" elapsed="0.000134"/>
</kw>
<kw name="Get Build Script Path" owner="GlobalPathsLibrary">
<msg time="2025-07-10T10:30:07.118574" level="INFO">${build} = /home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/rpc_n_to_n_test/scripts/build_images.sh</msg>
<var>${build}</var>
<status status="PASS" start="2025-07-10T10:30:07.118478" elapsed="0.000116"/>
</kw>
<kw name="Get Network Name" owner="GlobalPathsLibrary">
<msg time="2025-07-10T10:30:07.118733" level="INFO">${net} = ecal_test_net</msg>
<var>${net}</var>
<status status="PASS" start="2025-07-10T10:30:07.118657" elapsed="0.000092"/>
</kw>
<kw name="Get Build Script Args" owner="GlobalPathsLibrary">
<msg time="2025-07-10T10:30:07.118895" level="INFO">${args} = ['rpc_n_to_n_test']</msg>
<var>${args}</var>
<status status="PASS" start="2025-07-10T10:30:07.118814" elapsed="0.000098"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-07-10T10:30:07.119154" level="INFO">${BUILD_SCRIPT} = /home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/rpc_n_to_n_test/scripts/build_images.sh</msg>
<arg>${BUILD_SCRIPT}</arg>
<arg>${build}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-07-10T10:30:07.119017" elapsed="0.000167"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-07-10T10:30:07.119370" level="INFO">${NETWORK} = ecal_test_net</msg>
<arg>${NETWORK}</arg>
<arg>${net}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-07-10T10:30:07.119257" elapsed="0.000140"/>
</kw>
<kw name="Get Test Description" owner="GlobalPathsLibrary">
<msg time="2025-07-10T10:30:07.119630" level="INFO">${desc} = This test validates N-to-N RPC communication using eCAL, where multiple clients
send concurrent Ping requests to multiple servers.

Test Setup:
- 2 RPC servers provide a method called "Ping".
- 2 RPC ...</msg>
<var>${desc}</var>
<doc>Reads the *** Comments *** section from the .robot file and returns it as a string.</doc>
<status status="PASS" start="2025-07-10T10:30:07.119477" elapsed="0.000173"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-10T10:30:07.119803" level="INFO">This test validates N-to-N RPC communication using eCAL, where multiple clients
send concurrent Ping requests to multiple servers.

Test Setup:
- 2 RPC servers provide a method called "Ping".
- 2 RPC clients call this method on all available servers.
- Each client must receive a valid "PONG" response from all available servers.

Goals:
- Validate that RPC communication scales to N clients and N servers.
- Ensure all clients connect and receive correct responses from all servers.

Success Criteria:
- Each client prints the correct number of "PONG" responses.
- All clients exit with code 0.</msg>
<arg>${desc}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-10T10:30:07.119719" elapsed="0.000114"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>[SETUP] Building Docker image...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-10T10:30:07.119898" elapsed="0.000113"/>
</kw>
<kw name="Run Process" owner="Process">
<msg time="2025-07-10T10:30:07.120286" level="INFO">Starting process:
/home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/rpc_n_to_n_test/scripts/build_images.sh rpc_n_to_n_test</msg>
<msg time="2025-07-10T10:30:07.120698" level="INFO">Waiting for process to complete.</msg>
<msg time="2025-07-10T10:30:07.863046" level="INFO">Process completed.</msg>
<msg time="2025-07-10T10:30:07.863217" level="INFO">${result} = &lt;result object with rc 1&gt;</msg>
<var>${result}</var>
<arg>${BUILD_SCRIPT}</arg>
<arg>@{args}</arg>
<doc>Runs a process and waits for it to complete.</doc>
<status status="PASS" start="2025-07-10T10:30:07.120122" elapsed="0.743120"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-10T10:30:07.863897" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg time="2025-07-10T10:30:07.864049" level="FAIL">Failed to build Docker image!: 1 != 0</msg>
<arg>${result.rc}</arg>
<arg>0</arg>
<arg>Failed to build Docker image!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="FAIL" start="2025-07-10T10:30:07.863389" elapsed="0.001207">Failed to build Docker image!: 1 != 0</status>
</kw>
<kw name="Create Docker Network" owner="MyDockerLibrary">
<arg>${NETWORK}</arg>
<status status="NOT RUN" start="2025-07-10T10:30:07.864706" elapsed="0.000018"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" start="2025-07-10T10:30:07.864792" elapsed="0.000015"/>
</kw>
<status status="FAIL" start="2025-07-10T10:30:07.118108" elapsed="0.746796">Failed to build Docker image!: 1 != 0</status>
</kw>
<test id="s1-s5-t1" name="RPC N-to-N Test" line="33">
<tag>rpc_n_to_n_test</tag>
<status status="FAIL" start="2025-07-10T10:30:07.864985" elapsed="0.000302">Parent suite setup failed:
Failed to build Docker image!: 1 != 0</status>
</test>
<status status="FAIL" start="2025-07-10T10:30:07.115425" elapsed="0.750126">Suite setup failed:
Failed to build Docker image!: 1 != 0</status>
</suite>
<suite id="s1-s6" name="Rpc Ping Test" source="/home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/rpc_ping_test/robottests/rpc_ping_test.robot">
<kw name="Init Test Context" type="SETUP">
<kw name="Set Test Context" owner="GlobalPathsLibrary">
<arg>rpc_ping_test</arg>
<arg>rpc_ping_test</arg>
<doc>Sets the test folder and tag prefix if it's a valid test case.
The folder must exist under integration_tests/ and contain typical test structure.</doc>
<status status="PASS" start="2025-07-10T10:30:07.868652" elapsed="0.000127"/>
</kw>
<kw name="Get Build Script Path" owner="GlobalPathsLibrary">
<msg time="2025-07-10T10:30:07.869035" level="INFO">${build} = /home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/rpc_ping_test/scripts/build_images.sh</msg>
<var>${build}</var>
<status status="PASS" start="2025-07-10T10:30:07.868868" elapsed="0.000191"/>
</kw>
<kw name="Get Network Name" owner="GlobalPathsLibrary">
<msg time="2025-07-10T10:30:07.869216" level="INFO">${net} = ecal_test_net</msg>
<var>${net}</var>
<status status="PASS" start="2025-07-10T10:30:07.869132" elapsed="0.000103"/>
</kw>
<kw name="Get Build Script Args" owner="GlobalPathsLibrary">
<msg time="2025-07-10T10:30:07.869379" level="INFO">${args} = ['rpc_ping_test']</msg>
<var>${args}</var>
<status status="PASS" start="2025-07-10T10:30:07.869300" elapsed="0.000097"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-07-10T10:30:07.869604" level="INFO">${BUILD_SCRIPT} = /home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/rpc_ping_test/scripts/build_images.sh</msg>
<arg>${BUILD_SCRIPT}</arg>
<arg>${build}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-07-10T10:30:07.869472" elapsed="0.000161"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-07-10T10:30:07.869820" level="INFO">${NETWORK} = ecal_test_net</msg>
<arg>${NETWORK}</arg>
<arg>${net}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-07-10T10:30:07.869706" elapsed="0.000141"/>
</kw>
<kw name="Get Test Description" owner="GlobalPathsLibrary">
<msg time="2025-07-10T10:30:07.870096" level="INFO">${desc} = This test checks a basic RPC communication between a client and a server.

Test Setup:
- The server provides a method called "Ping".
- The client sends one "PING" request to this method.

Goals:
- Ens...</msg>
<var>${desc}</var>
<doc>Reads the *** Comments *** section from the .robot file and returns it as a string.</doc>
<status status="PASS" start="2025-07-10T10:30:07.869912" elapsed="0.000207"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-10T10:30:07.870285" level="INFO">This test checks a basic RPC communication between a client and a server.

Test Setup:
- The server provides a method called "Ping".
- The client sends one "PING" request to this method.

Goals:
- Ensure RPC client-server interaction works over network UDP.
- Validate that the server responds with "PONG".
- The client must connect, call the method, and receive a valid response.

Success Criteria:
- The server receives a call and returns a response.
- The client prints the response and exits with code 0.</msg>
<arg>${desc}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-10T10:30:07.870196" elapsed="0.000120"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>[SETUP] Building Docker image...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-10T10:30:07.870385" elapsed="0.000092"/>
</kw>
<kw name="Run Process" owner="Process">
<msg time="2025-07-10T10:30:07.870707" level="INFO">Starting process:
/home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/rpc_ping_test/scripts/build_images.sh rpc_ping_test</msg>
<msg time="2025-07-10T10:30:07.871087" level="INFO">Waiting for process to complete.</msg>
<msg time="2025-07-10T10:30:08.577919" level="INFO">Process completed.</msg>
<msg time="2025-07-10T10:30:08.578100" level="INFO">${result} = &lt;result object with rc 1&gt;</msg>
<var>${result}</var>
<arg>${BUILD_SCRIPT}</arg>
<arg>@{args}</arg>
<doc>Runs a process and waits for it to complete.</doc>
<status status="PASS" start="2025-07-10T10:30:07.870565" elapsed="0.707561"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-10T10:30:08.578737" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg time="2025-07-10T10:30:08.578829" level="FAIL">Failed to build Docker image!: 1 != 0</msg>
<arg>${result.rc}</arg>
<arg>0</arg>
<arg>Failed to build Docker image!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="FAIL" start="2025-07-10T10:30:08.578272" elapsed="0.000634">Failed to build Docker image!: 1 != 0</status>
</kw>
<kw name="Create Docker Network" owner="MyDockerLibrary">
<arg>${NETWORK}</arg>
<status status="NOT RUN" start="2025-07-10T10:30:08.579029" elapsed="0.000019"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" start="2025-07-10T10:30:08.579116" elapsed="0.000015"/>
</kw>
<status status="FAIL" start="2025-07-10T10:30:07.868514" elapsed="0.710700">Failed to build Docker image!: 1 != 0</status>
</kw>
<test id="s1-s6-t1" name="RPC Ping Test" line="30">
<tag>rpc_server_client_ping_test</tag>
<status status="FAIL" start="2025-07-10T10:30:08.579277" elapsed="0.000287">Parent suite setup failed:
Failed to build Docker image!: 1 != 0</status>
</test>
<status status="FAIL" start="2025-07-10T10:30:07.866071" elapsed="0.713741">Suite setup failed:
Failed to build Docker image!: 1 != 0</status>
</suite>
<suite id="s1-s7" name="Rpc Reconnect Test" source="/home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/rpc_reconnect_test/robottests/rpc_reconnect_test.robot">
<kw name="Init Test Context" type="SETUP">
<kw name="Set Test Context" owner="GlobalPathsLibrary">
<arg>rpc_reconnect_test</arg>
<arg>rpc_reconnect_test</arg>
<doc>Sets the test folder and tag prefix if it's a valid test case.
The folder must exist under integration_tests/ and contain typical test structure.</doc>
<status status="PASS" start="2025-07-10T10:30:08.584011" elapsed="0.000133"/>
</kw>
<kw name="Get Build Script Path" owner="GlobalPathsLibrary">
<msg time="2025-07-10T10:30:08.584312" level="INFO">${build} = /home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/rpc_reconnect_test/scripts/build_images.sh</msg>
<var>${build}</var>
<status status="PASS" start="2025-07-10T10:30:08.584225" elapsed="0.000107"/>
</kw>
<kw name="Get Build Script Args" owner="GlobalPathsLibrary">
<msg time="2025-07-10T10:30:08.584473" level="INFO">${args} = ['rpc_reconnect_test']</msg>
<var>${args}</var>
<status status="PASS" start="2025-07-10T10:30:08.584397" elapsed="0.000093"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-07-10T10:30:08.584692" level="INFO">${BUILD_SCRIPT} = /home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/rpc_reconnect_test/scripts/build_images.sh</msg>
<arg>${BUILD_SCRIPT}</arg>
<arg>${build}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-07-10T10:30:08.584563" elapsed="0.000158"/>
</kw>
<kw name="Create Docker Network With Subnet" owner="MyDockerLibrary">
<arg>${NETWORK}</arg>
<arg>172.28.0.0/16</arg>
<doc>Creates a Docker bridge network with a given subnet if it does not already exist.</doc>
<status status="PASS" start="2025-07-10T10:30:08.584786" elapsed="0.062648"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>[SETUP] Building Docker image...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-10T10:30:08.647621" elapsed="0.000173"/>
</kw>
<kw name="Run Process" owner="Process">
<msg time="2025-07-10T10:30:08.648131" level="INFO">Starting process:
/home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/rpc_reconnect_test/scripts/build_images.sh rpc_reconnect_test</msg>
<msg time="2025-07-10T10:30:08.648465" level="INFO">Waiting for process to complete.</msg>
<msg time="2025-07-10T10:30:09.348837" level="INFO">Process completed.</msg>
<msg time="2025-07-10T10:30:09.349047" level="INFO">${result} = &lt;result object with rc 1&gt;</msg>
<var>${result}</var>
<arg>${BUILD_SCRIPT}</arg>
<arg>@{args}</arg>
<doc>Runs a process and waits for it to complete.</doc>
<status status="PASS" start="2025-07-10T10:30:08.647897" elapsed="0.701179"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-10T10:30:09.349944" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg time="2025-07-10T10:30:09.350088" level="FAIL">Failed to build Docker image!: 1 != 0</msg>
<arg>${result.rc}</arg>
<arg>0</arg>
<arg>Failed to build Docker image!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="FAIL" start="2025-07-10T10:30:09.349328" elapsed="0.000827">Failed to build Docker image!: 1 != 0</status>
</kw>
<kw name="Sleep" owner="BuiltIn">
<arg>3s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" start="2025-07-10T10:30:09.350294" elapsed="0.000025"/>
</kw>
<status status="FAIL" start="2025-07-10T10:30:08.583847" elapsed="0.766572">Failed to build Docker image!: 1 != 0</status>
</kw>
<test id="s1-s7-t1" name="RPC Reconnect Test" line="28">
<tag>rpc_reconnect</tag>
<status status="FAIL" start="2025-07-10T10:30:09.350491" elapsed="0.000361">Parent suite setup failed:
Failed to build Docker image!: 1 != 0</status>
</test>
<status status="FAIL" start="2025-07-10T10:30:08.580349" elapsed="0.771166">Suite setup failed:
Failed to build Docker image!: 1 != 0</status>
</suite>
<suite id="s1-s8" name="Sub Crash" source="/home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/sub_crash/robottests/sub_crash.robot">
<kw name="Init Test Context" type="SETUP">
<kw name="Set Test Context" owner="GlobalPathsLibrary">
<arg>sub_crash</arg>
<arg>sub_crash</arg>
<doc>Sets the test folder and tag prefix if it's a valid test case.
The folder must exist under integration_tests/ and contain typical test structure.</doc>
<status status="PASS" start="2025-07-10T10:30:09.364955" elapsed="0.000165"/>
</kw>
<kw name="Get Build Script Path" owner="GlobalPathsLibrary">
<msg time="2025-07-10T10:30:09.365300" level="INFO">${build} = /home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/sub_crash/scripts/build_images.sh</msg>
<var>${build}</var>
<status status="PASS" start="2025-07-10T10:30:09.365206" elapsed="0.000115"/>
</kw>
<kw name="Get Network Name" owner="GlobalPathsLibrary">
<msg time="2025-07-10T10:30:09.365465" level="INFO">${net} = ecal_test_net</msg>
<var>${net}</var>
<status status="PASS" start="2025-07-10T10:30:09.365387" elapsed="0.000096"/>
</kw>
<kw name="Get Build Script Args" owner="GlobalPathsLibrary">
<msg time="2025-07-10T10:30:09.365622" level="INFO">${args} = ['sub_crash']</msg>
<var>${args}</var>
<status status="PASS" start="2025-07-10T10:30:09.365545" elapsed="0.000094"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-07-10T10:30:09.365841" level="INFO">${BUILD_SCRIPT} = /home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/sub_crash/scripts/build_images.sh</msg>
<arg>${BUILD_SCRIPT}</arg>
<arg>${build}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-07-10T10:30:09.365710" elapsed="0.000159"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-07-10T10:30:09.366085" level="INFO">${NETWORK} = ecal_test_net</msg>
<arg>${NETWORK}</arg>
<arg>${net}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-07-10T10:30:09.365943" elapsed="0.000170"/>
</kw>
<kw name="Get Test Description" owner="GlobalPathsLibrary">
<msg time="2025-07-10T10:30:09.366327" level="INFO">${desc} = Test Objective:
Ensure that a second subscriber continues to receive messages even if one subscriber crashes.

Test Scenario:
- One publisher (`test_publisher`) sends continuous messages (value 43).
-...</msg>
<var>${desc}</var>
<doc>Reads the *** Comments *** section from the .robot file and returns it as a string.</doc>
<status status="PASS" start="2025-07-10T10:30:09.366180" elapsed="0.000168"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-10T10:30:09.366506" level="INFO">Test Objective:
Ensure that a second subscriber continues to receive messages even if one subscriber crashes.

Test Scenario:
- One publisher (`test_publisher`) sends continuous messages (value 43).
- Two subscribers are started:
1. `crash_subscriber`: receives a few messages and then crashes.
2. `test_subscriber`: receives messages throughout the test duration.
- A monitoring process tracks all components.

Success Criteria:
- `test_subscriber` must receive a number of messages.
- `test_subscriber` must exit with code 0.
- The crash of one subscriber does not affect the continued communication of the other.</msg>
<arg>${desc}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-10T10:30:09.366419" elapsed="0.000120"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>[SETUP] Building Docker image...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-10T10:30:09.366606" elapsed="0.000095"/>
</kw>
<kw name="Run Process" owner="Process">
<msg time="2025-07-10T10:30:09.366931" level="INFO">Starting process:
/home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/sub_crash/scripts/build_images.sh sub_crash</msg>
<msg time="2025-07-10T10:30:09.367322" level="INFO">Waiting for process to complete.</msg>
<msg time="2025-07-10T10:30:18.378451" level="INFO">Process completed.</msg>
<msg time="2025-07-10T10:30:18.378616" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<var>${result}</var>
<arg>${BUILD_SCRIPT}</arg>
<arg>@{args}</arg>
<doc>Runs a process and waits for it to complete.</doc>
<status status="PASS" start="2025-07-10T10:30:09.366789" elapsed="9.011852"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-10T10:30:18.379305" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${result.rc}</arg>
<arg>0</arg>
<arg>Docker build failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-10T10:30:18.378798" elapsed="0.000556"/>
</kw>
<kw name="Create Docker Network" owner="MyDockerLibrary">
<arg>${NETWORK}</arg>
<status status="PASS" start="2025-07-10T10:30:18.379440" elapsed="0.006965"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-10T10:30:21.386749" level="INFO">Slept 3 seconds.</msg>
<arg>3s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-10T10:30:18.386522" elapsed="3.000330"/>
</kw>
<status status="PASS" start="2025-07-10T10:30:09.364803" elapsed="12.022129"/>
</kw>
<test id="s1-s8-t1" name="Network Communication Continues After Subscriber Crash (UDP)" line="30">
<kw name="Run Network Communication Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-10T10:30:21.387897" level="INFO">${IMAGE} = sub_crash_network_udp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-10T10:30:21.387749" elapsed="0.000168"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-10T10:30:21.388092" level="INFO">${TOPIC} = test_topic</msg>
<var>${TOPIC}</var>
<arg>test_topic</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-10T10:30:21.388005" elapsed="0.000104"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-10T10:30:21.388421" level="INFO">${CRASH_SUB} = crash_sub_network_udp</msg>
<var>${CRASH_SUB}</var>
<arg>crash_sub_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-10T10:30:21.388175" elapsed="0.000264"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-10T10:30:21.388611" level="INFO">${TEST_SUB} = test_sub_network_udp</msg>
<var>${TEST_SUB}</var>
<arg>test_sub_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-10T10:30:21.388509" elapsed="0.000120"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-10T10:30:21.388850" level="INFO">${TEST_PUB} = test_pub_network_udp</msg>
<var>${TEST_PUB}</var>
<arg>test_pub_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-10T10:30:21.388739" elapsed="0.000128"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Starting subscriber crash continuity test with ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-10T10:30:21.388946" elapsed="0.000138"/>
</kw>
<kw name="Create Docker Network" owner="MyDockerLibrary">
<arg>${NETWORK}</arg>
<status status="PASS" start="2025-07-10T10:30:21.389181" elapsed="0.007145"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${CRASH_SUB}</arg>
<arg>${IMAGE}</arg>
<arg>crash_subscriber</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${CRASH_SUB}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-10T10:30:21.396443" elapsed="0.125237"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${TEST_SUB}</arg>
<arg>${IMAGE}</arg>
<arg>test_subscriber</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${TEST_SUB}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-10T10:30:21.521840" elapsed="0.128315"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${TEST_PUB}</arg>
<arg>${IMAGE}</arg>
<arg>test_publisher</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${TEST_PUB}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-10T10:30:21.650335" elapsed="0.125477"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${CRASH_SUB}</arg>
<status status="PASS" start="2025-07-10T10:30:21.776072" elapsed="7.078771"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${TEST_SUB}</arg>
<status status="PASS" start="2025-07-10T10:30:28.855073" elapsed="26.856239"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${TEST_PUB}</arg>
<status status="PASS" start="2025-07-10T10:30:55.711539" elapsed="0.001683"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-07-10T10:30:55.715627" level="INFO">${test_sub_logs} = [Entrypoint] Starting crash publisher in mode network_udp

[Test_Subscriber] Waiting for messages...
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Receive...</msg>
<var>${test_sub_logs}</var>
<arg>${TEST_SUB}</arg>
<status status="PASS" start="2025-07-10T10:30:55.713315" elapsed="0.002339"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[SUBSCRIBER CONTAINER OUTPUT]\n${test_sub_logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-10T10:30:55.715743" elapsed="0.000161"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-10T10:30:55.716195" level="INFO">
[SUBSCRIBER CONTAINER OUTPUT]
[Entrypoint] Starting crash publisher in mode network_udp

[Test_Subscriber] Waiting for messages...
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43

[✓] Communication successful, received 30 messages.
</msg>
<arg>\n[SUBSCRIBER CONTAINER OUTPUT]\n${test_sub_logs}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-10T10:30:55.716038" elapsed="0.000204"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-07-10T10:30:55.718467" level="INFO">${crash_sub_logs} = [Entrypoint] Starting crash subscriber in mode network_udp

[Crash Subscriber] Registered and sleeping before crash...

[Crash_Subscriber] Received value: 43
[Crash_Subscriber] Received value: 43
[Cra...</msg>
<var>${crash_sub_logs}</var>
<arg>${CRASH_SUB}</arg>
<status status="PASS" start="2025-07-10T10:30:55.716318" elapsed="0.002176"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[CRASH SUBSCRIBER CONTAINER OUTPUT]\n${crash_sub_logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-10T10:30:55.718580" elapsed="0.000144"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-10T10:30:55.718960" level="INFO">
[CRASH SUBSCRIBER CONTAINER OUTPUT]
[Entrypoint] Starting crash subscriber in mode network_udp

[Crash Subscriber] Registered and sleeping before crash...

[Crash_Subscriber] Received value: 43
[Crash_Subscriber] Received value: 43
[Crash_Subscriber] Received value: 43
[Crash_Subscriber] Received value: 43
[Crash_Subscriber] Received value: 43

[Crash Subscriber] Simulating crash now.


[Crash Subscriber] Received 5 messages before crash.
./entrypoint.sh: line 61:     7 Aborted                 (core dumped) ./crash_subscriber $ARGS $EXTRA
</msg>
<arg>\n[CRASH SUBSCRIBER CONTAINER OUTPUT]\n${crash_sub_logs}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-10T10:30:55.718839" elapsed="0.000190"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-07-10T10:30:55.720019" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>${TEST_SUB}</arg>
<status status="PASS" start="2025-07-10T10:30:55.719106" elapsed="0.000938"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-10T10:30:55.720261" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Communication failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-10T10:30:55.720128" elapsed="0.000178"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Network Communication after one Subscriber crash ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-07-10T10:30:55.720382" elapsed="0.000139"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${CRASH_SUB}</arg>
<status status="PASS" start="2025-07-10T10:30:55.720619" elapsed="0.004895"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${TEST_SUB}</arg>
<status status="PASS" start="2025-07-10T10:30:55.725597" elapsed="0.004879"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${TEST_PUB}</arg>
<status status="PASS" start="2025-07-10T10:30:55.730563" elapsed="0.004927"/>
</kw>
<arg>network_udp</arg>
<arg>network</arg>
<status status="PASS" start="2025-07-10T10:30:21.387512" elapsed="34.348039"/>
</kw>
<tag>sub_crash_network_udp</tag>
<status status="PASS" start="2025-07-10T10:30:21.387018" elapsed="34.348626"/>
</test>
<test id="s1-s8-t2" name="Network Communication Continues After Publisher Crash (TCP)" line="34">
<kw name="Run Network Communication Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-10T10:30:55.737242" level="INFO">${IMAGE} = sub_crash_network_tcp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-10T10:30:55.737103" elapsed="0.000161"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-10T10:30:55.737466" level="INFO">${TOPIC} = test_topic</msg>
<var>${TOPIC}</var>
<arg>test_topic</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-10T10:30:55.737377" elapsed="0.000108"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-10T10:30:55.737663" level="INFO">${CRASH_SUB} = crash_sub_network_tcp</msg>
<var>${CRASH_SUB}</var>
<arg>crash_sub_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-10T10:30:55.737555" elapsed="0.000125"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-10T10:30:55.737848" level="INFO">${TEST_SUB} = test_sub_network_tcp</msg>
<var>${TEST_SUB}</var>
<arg>test_sub_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-10T10:30:55.737747" elapsed="0.000118"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-10T10:30:55.738069" level="INFO">${TEST_PUB} = test_pub_network_tcp</msg>
<var>${TEST_PUB}</var>
<arg>test_pub_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-10T10:30:55.737929" elapsed="0.000158"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Starting subscriber crash continuity test with ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-10T10:30:55.738156" elapsed="0.000122"/>
</kw>
<kw name="Create Docker Network" owner="MyDockerLibrary">
<arg>${NETWORK}</arg>
<status status="PASS" start="2025-07-10T10:30:55.738366" elapsed="0.006761"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${CRASH_SUB}</arg>
<arg>${IMAGE}</arg>
<arg>crash_subscriber</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${CRASH_SUB}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-10T10:30:55.745219" elapsed="0.120263"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${TEST_SUB}</arg>
<arg>${IMAGE}</arg>
<arg>test_subscriber</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${TEST_SUB}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-10T10:30:55.865681" elapsed="0.119929"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${TEST_PUB}</arg>
<arg>${IMAGE}</arg>
<arg>test_publisher</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${TEST_PUB}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-10T10:30:55.985790" elapsed="0.125722"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${CRASH_SUB}</arg>
<status status="PASS" start="2025-07-10T10:30:56.111704" elapsed="7.206917"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${TEST_SUB}</arg>
<status status="PASS" start="2025-07-10T10:31:03.318832" elapsed="26.725639"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${TEST_PUB}</arg>
<status status="PASS" start="2025-07-10T10:31:30.044648" elapsed="0.001567"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-07-10T10:31:30.048585" level="INFO">${test_sub_logs} = [Entrypoint] Starting crash publisher in mode network_tcp

[Test_Subscriber] Waiting for messages...
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Receive...</msg>
<var>${test_sub_logs}</var>
<arg>${TEST_SUB}</arg>
<status status="PASS" start="2025-07-10T10:31:30.046312" elapsed="0.002301"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[SUBSCRIBER CONTAINER OUTPUT]\n${test_sub_logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-10T10:31:30.048702" elapsed="0.000165"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-10T10:31:30.049165" level="INFO">
[SUBSCRIBER CONTAINER OUTPUT]
[Entrypoint] Starting crash publisher in mode network_tcp

[Test_Subscriber] Waiting for messages...
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
1752143488521 ms | f21267b321d9 | ./test_subscriber | 7 | error | CTCPReaderLayer - TCPPubSub (Error) -SubscriberSession 172.18.0.3:50792-&gt;80a4ce44193d:40863: Error reading header length: End of file
1752143488522 ms | f21267b321d9 | ./test_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.3:37170: Failed connecting to publisher 80a4ce44193d:40863: Connection refused
1752143488522 ms | f21267b321d9 | ./test_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.3:37174: Failed connecting to publisher 80a4ce44193d:40863: Connection refused
1752143488523 ms | f21267b321d9 | ./test_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.3:37178: Failed connecting to publisher 80a4ce44193d:40863: Connection refused
1752143488524 ms | f21267b321d9 | ./test_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.3:37194: Failed connecting to publisher 80a4ce44193d:40863: Connection refused
1752143488524 ms | f21267b321d9 | ./test_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.3:37206: Failed connecting to publisher 80a4ce44193d:40863: Connection refused

[✓] Communication successful, received 30 messages.
</msg>
<arg>\n[SUBSCRIBER CONTAINER OUTPUT]\n${test_sub_logs}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-10T10:31:30.048998" elapsed="0.000256"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-07-10T10:31:30.051630" level="INFO">${crash_sub_logs} = [Entrypoint] Starting crash subscriber in mode network_tcp

[Crash Subscriber] Registered and sleeping before crash...

[Crash_Subscriber] Received value: 43
[Crash_Subscriber] Received value: 43
[Cra...</msg>
<var>${crash_sub_logs}</var>
<arg>${CRASH_SUB}</arg>
<status status="PASS" start="2025-07-10T10:31:30.049361" elapsed="0.002294"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[CRASH SUBSCRIBER CONTAINER OUTPUT]\n${crash_sub_logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-10T10:31:30.051740" elapsed="0.000145"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-10T10:31:30.052167" level="INFO">
[CRASH SUBSCRIBER CONTAINER OUTPUT]
[Entrypoint] Starting crash subscriber in mode network_tcp

[Crash Subscriber] Registered and sleeping before crash...

[Crash_Subscriber] Received value: 43
[Crash_Subscriber] Received value: 43
[Crash_Subscriber] Received value: 43
[Crash_Subscriber] Received value: 43
[Crash_Subscriber] Received value: 43

[Crash Subscriber] Received 5 messages before crash.

[Crash Subscriber] Simulating crash now.

./entrypoint.sh: line 61:     7 Aborted                 (core dumped) ./crash_subscriber $ARGS $EXTRA
</msg>
<arg>\n[CRASH SUBSCRIBER CONTAINER OUTPUT]\n${crash_sub_logs}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-10T10:31:30.052025" elapsed="0.000235"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-07-10T10:31:30.053305" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>${TEST_SUB}</arg>
<status status="PASS" start="2025-07-10T10:31:30.052368" elapsed="0.000961"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-10T10:31:30.053544" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Communication failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-10T10:31:30.053411" elapsed="0.000178"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Network Communication after one Subscriber crash ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-07-10T10:31:30.053663" elapsed="0.000142"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${CRASH_SUB}</arg>
<status status="PASS" start="2025-07-10T10:31:30.053908" elapsed="0.004823"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${TEST_SUB}</arg>
<status status="PASS" start="2025-07-10T10:31:30.058816" elapsed="0.004824"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${TEST_PUB}</arg>
<status status="PASS" start="2025-07-10T10:31:30.063724" elapsed="0.005649"/>
</kw>
<arg>network_tcp</arg>
<arg>network</arg>
<status status="PASS" start="2025-07-10T10:30:55.736868" elapsed="34.332565"/>
</kw>
<tag>pub_crash_network_tcp</tag>
<status status="PASS" start="2025-07-10T10:30:55.736452" elapsed="34.333077"/>
</test>
<test id="s1-s8-t3" name="Local Communication Continues After Subscriber Crash (SHM)" line="38">
<kw name="Run Local Communication Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-10T10:31:30.071033" level="INFO">${IMAGE} = sub_crash_local_shm</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-10T10:31:30.070868" elapsed="0.000189"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-10T10:31:30.071242" level="INFO">${CONTAINER} = local_all_local_shm</msg>
<var>${CONTAINER}</var>
<arg>local_all_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-10T10:31:30.071132" elapsed="0.000128"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Starting local test container with ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-10T10:31:30.071327" elapsed="0.000118"/>
</kw>
<kw name="Create Docker Network" owner="MyDockerLibrary">
<arg>${NETWORK}</arg>
<status status="PASS" start="2025-07-10T10:31:30.071546" elapsed="0.006739"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<arg>${IMAGE}</arg>
<arg>local_all</arg>
<arg>${layer_tag}</arg>
<status status="PASS" start="2025-07-10T10:31:30.078397" elapsed="0.114991"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-07-10T10:32:04.256613" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-10T10:31:30.193619" elapsed="34.063036"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-10T10:32:04.257059" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Local test failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-10T10:32:04.256814" elapsed="0.000308"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-07-10T10:32:04.259750" level="INFO">${logs} = [Entrypoint] Starting local test (pub/sub/monitor) in mode local_shm
Shared memory monitoring is enabled (domain: ecal_mon - queue size: 1024)
[Publisher] Waiting for at least 2 subscriber(s) on topic...</msg>
<var>${logs}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-10T10:32:04.257225" elapsed="0.002550"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n\n[LOCAL TEST CONTAINER OUTPUT]\n\n${logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-10T10:32:04.259862" elapsed="0.000172"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Local Communication after one Subscriber crash ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-07-10T10:32:04.260132" elapsed="0.000162"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-10T10:32:04.260403" elapsed="0.004854"/>
</kw>
<arg>local_shm</arg>
<status status="PASS" start="2025-07-10T10:31:30.070673" elapsed="34.194646"/>
</kw>
<tag>sub_crash_local_shm</tag>
<status status="PASS" start="2025-07-10T10:31:30.070296" elapsed="34.195119"/>
</test>
<test id="s1-s8-t4" name="Local Communication Continues After Subscriber Crash (UDP)" line="42">
<kw name="Run Local Communication Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-10T10:32:04.266764" level="INFO">${IMAGE} = sub_crash_local_udp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-10T10:32:04.266626" elapsed="0.000160"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-10T10:32:04.266995" level="INFO">${CONTAINER} = local_all_local_udp</msg>
<var>${CONTAINER}</var>
<arg>local_all_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-10T10:32:04.266860" elapsed="0.000160"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Starting local test container with ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-10T10:32:04.267091" elapsed="0.000132"/>
</kw>
<kw name="Create Docker Network" owner="MyDockerLibrary">
<arg>${NETWORK}</arg>
<status status="PASS" start="2025-07-10T10:32:04.267312" elapsed="0.006868"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<arg>${IMAGE}</arg>
<arg>local_all</arg>
<arg>${layer_tag}</arg>
<status status="PASS" start="2025-07-10T10:32:04.274284" elapsed="0.107024"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-07-10T10:32:38.443599" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-10T10:32:04.381524" elapsed="34.062129"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-10T10:32:38.444079" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Local test failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-10T10:32:38.443829" elapsed="0.000304"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-07-10T10:32:38.447040" level="INFO">${logs} = [Entrypoint] Starting local test (pub/sub/monitor) in mode local_udp
[Publisher] Waiting for at least 2 subscriber(s) on topic: test_topic

[Crash Subscriber] Registered and sleeping before crash...

...</msg>
<var>${logs}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-10T10:32:38.444220" elapsed="0.002900"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n\n[LOCAL TEST CONTAINER OUTPUT]\n\n${logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-10T10:32:38.447210" elapsed="0.000161"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Local Communication after one Subscriber crash ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-07-10T10:32:38.447466" elapsed="0.000157"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-10T10:32:38.447698" elapsed="0.005296"/>
</kw>
<arg>local_udp</arg>
<status status="PASS" start="2025-07-10T10:32:04.266428" elapsed="34.186628"/>
</kw>
<tag>sub_crash_local_udp</tag>
<status status="PASS" start="2025-07-10T10:32:04.266043" elapsed="34.187106"/>
</test>
<test id="s1-s8-t5" name="Local Communication Continues After Subscriber Crash (TCP)" line="46">
<kw name="Run Local Communication Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-10T10:32:38.454473" level="INFO">${IMAGE} = sub_crash_local_tcp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-10T10:32:38.454336" elapsed="0.000159"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-10T10:32:38.454679" level="INFO">${CONTAINER} = local_all_local_tcp</msg>
<var>${CONTAINER}</var>
<arg>local_all_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-10T10:32:38.454570" elapsed="0.000135"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Starting local test container with ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-10T10:32:38.454772" elapsed="0.000126"/>
</kw>
<kw name="Create Docker Network" owner="MyDockerLibrary">
<arg>${NETWORK}</arg>
<status status="PASS" start="2025-07-10T10:32:38.455005" elapsed="0.006520"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<arg>${IMAGE}</arg>
<arg>local_all</arg>
<arg>${layer_tag}</arg>
<status status="PASS" start="2025-07-10T10:32:38.461616" elapsed="0.107310"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-07-10T10:33:12.632673" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-10T10:32:38.569175" elapsed="34.063562"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-10T10:33:12.633191" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Local test failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-10T10:33:12.632905" elapsed="0.000350"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-07-10T10:33:12.636111" level="INFO">${logs} = [Entrypoint] Starting local test (pub/sub/monitor) in mode local_tcp

[Crash Subscriber] Registered and sleeping before crash...


[Test_Subscriber] Waiting for messages...
[Publisher] Waiting for at ...</msg>
<var>${logs}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-10T10:33:12.633341" elapsed="0.002798"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n\n[LOCAL TEST CONTAINER OUTPUT]\n\n${logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-10T10:33:12.636227" elapsed="0.000176"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Local Communication after one Subscriber crash ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-07-10T10:33:12.636504" elapsed="0.000186"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-10T10:33:12.636792" elapsed="0.004996"/>
</kw>
<arg>local_tcp</arg>
<status status="PASS" start="2025-07-10T10:32:38.454139" elapsed="34.187710"/>
</kw>
<tag>sub_crash_local_tcp</tag>
<status status="PASS" start="2025-07-10T10:32:38.453745" elapsed="34.188198"/>
</test>
<status status="PASS" start="2025-07-10T10:30:09.352146" elapsed="183.290457"/>
</suite>
<suite id="s1-s9" name="Sub Send Crash" source="/home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/sub_send_crash/robottests/sub_send_crash.robot">
<kw name="Init Test Context" type="SETUP">
<kw name="Set Test Context" owner="GlobalPathsLibrary">
<arg>sub_send_crash</arg>
<arg>sub_send_crash</arg>
<doc>Sets the test folder and tag prefix if it's a valid test case.
The folder must exist under integration_tests/ and contain typical test structure.</doc>
<status status="PASS" start="2025-07-10T10:33:12.645834" elapsed="0.000130"/>
</kw>
<kw name="Get Build Script Path" owner="GlobalPathsLibrary">
<msg time="2025-07-10T10:33:12.646174" level="INFO">${build} = /home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/sub_send_crash/scripts/build_images.sh</msg>
<var>${build}</var>
<status status="PASS" start="2025-07-10T10:33:12.646082" elapsed="0.000113"/>
</kw>
<kw name="Get Network Name" owner="GlobalPathsLibrary">
<msg time="2025-07-10T10:33:12.646339" level="INFO">${net} = ecal_test_net</msg>
<var>${net}</var>
<status status="PASS" start="2025-07-10T10:33:12.646260" elapsed="0.000097"/>
</kw>
<kw name="Get Build Script Args" owner="GlobalPathsLibrary">
<msg time="2025-07-10T10:33:12.646495" level="INFO">${args} = ['sub_send_crash']</msg>
<var>${args}</var>
<status status="PASS" start="2025-07-10T10:33:12.646418" elapsed="0.000093"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-07-10T10:33:12.646719" level="INFO">${BUILD_SCRIPT} = /home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/sub_send_crash/scripts/build_images.sh</msg>
<arg>${BUILD_SCRIPT}</arg>
<arg>${build}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-07-10T10:33:12.646586" elapsed="0.000161"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-07-10T10:33:12.646934" level="INFO">${NETWORK} = ecal_test_net</msg>
<arg>${NETWORK}</arg>
<arg>${net}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-07-10T10:33:12.646818" elapsed="0.000142"/>
</kw>
<kw name="Get Test Description" owner="GlobalPathsLibrary">
<msg time="2025-07-10T10:33:12.647214" level="INFO">${desc} = Test Objective:
This test verifies that if one subscriber crashes during the reception of a large message,
other subscribers or the publisher remain unaffected and stable.

Test Scenario:
- A `large_p...</msg>
<var>${desc}</var>
<doc>Reads the *** Comments *** section from the .robot file and returns it as a string.</doc>
<status status="PASS" start="2025-07-10T10:33:12.647066" elapsed="0.000168"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-10T10:33:12.647389" level="INFO">Test Objective:
This test verifies that if one subscriber crashes during the reception of a large message,
other subscribers or the publisher remain unaffected and stable.

Test Scenario:
- A `large_publisher` sends very large messages (~50MB+).
- One `crash_subscriber` is designed to crash during message reception (e.g., via simulated failure during callback).
- One `test_subscriber` continues running and must successfully receive all messages.
- In an additional test case, a variant with `zero_copy_mode` enabled is used to evaluate the performance and fault tolerance in a high-throughput configuration.

Success Criteria:
- The `test_subscriber` must receive messages without crashing and exit with code 0.
- The `crash_subscriber` should crash as intended.
- The `large_publisher` must remain operational and not be blocked or destabilized.
- In SHM mode with `zero_copy`, the system should handle the shared memory access without affecting other subscribers or the pubisher.

Notes:
- Zero-Copy mode is only applicable to Shared Memory (SHM) transport.
- The Local UDP test is skipped for large messages because of message size limitations.
- This test failes because of SHM with zero copy mode, which is a known issue in the current implementation.</msg>
<arg>${desc}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-10T10:33:12.647305" elapsed="0.000161"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>[SETUP] Building image...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-10T10:33:12.647536" elapsed="0.000096"/>
</kw>
<kw name="Run Process" owner="Process">
<msg time="2025-07-10T10:33:12.647868" level="INFO">Starting process:
/home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/sub_send_crash/scripts/build_images.sh sub_send_crash</msg>
<msg time="2025-07-10T10:33:12.648241" level="INFO">Waiting for process to complete.</msg>
<msg time="2025-07-10T10:33:21.611631" level="INFO">Process completed.</msg>
<msg time="2025-07-10T10:33:21.611795" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<var>${result}</var>
<arg>${BUILD_SCRIPT}</arg>
<arg>@{args}</arg>
<doc>Runs a process and waits for it to complete.</doc>
<status status="PASS" start="2025-07-10T10:33:12.647722" elapsed="8.964097"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-10T10:33:21.612458" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${result.rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-10T10:33:21.611999" elapsed="0.000508"/>
</kw>
<kw name="Create Docker Network" owner="MyDockerLibrary">
<arg>${NETWORK}</arg>
<status status="PASS" start="2025-07-10T10:33:21.612588" elapsed="0.007096"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-10T10:33:24.620026" level="INFO">Slept 3 seconds.</msg>
<arg>3s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-10T10:33:21.619794" elapsed="3.000335"/>
</kw>
<status status="PASS" start="2025-07-10T10:33:12.645702" elapsed="11.974510"/>
</kw>
<test id="s1-s9-t1" name="Crash During Reception (SHM)" line="36">
<kw name="Run Local Crash Receive Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-10T10:33:24.621106" level="INFO">${IMAGE} = sub_send_crash_local_shm</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-10T10:33:24.620941" elapsed="0.000186"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-10T10:33:24.621311" level="INFO">${CONTAINER} = local_all_local_shm</msg>
<var>${CONTAINER}</var>
<arg>local_all_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-10T10:33:24.621200" elapsed="0.000129"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Starting crash test in LOCAL mode: ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-10T10:33:24.621395" elapsed="0.000124"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<arg>${IMAGE}</arg>
<arg>local_all</arg>
<arg>${layer_tag}</arg>
<arg>test_topic</arg>
<arg>${CONTAINER}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-10T10:33:24.621612" elapsed="0.130108"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-10T10:33:59.752313" level="INFO">Slept 35 seconds.</msg>
<arg>35s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-10T10:33:24.751948" elapsed="35.000500"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-07-10T10:33:59.755512" level="INFO">${logs} = [Entrypoint] Starting all processes locally in one container (mode local_shm)
Shared memory monitoring is enabled (domain: ecal_mon - queue size: 1024)
[Publisher] Prepared 50MB message.
[Publisher] W...</msg>
<var>${logs}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-10T10:33:59.752631" elapsed="0.002907"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[LOCAL TEST CONTAINER OUTPUT]\n${logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-10T10:33:59.755631" elapsed="0.000166"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-10T10:33:59.756077" level="INFO">
[LOCAL TEST CONTAINER OUTPUT]
[Entrypoint] Starting all processes locally in one container (mode local_shm)
Shared memory monitoring is enabled (domain: ecal_mon - queue size: 1024)
[Publisher] Prepared 50MB message.
[Publisher] Waiting for at least 2 subscriber(s) on topic: test_topic
[Publisher] Found 2 subscriber(s). Proceeding to send messages.
[Crash_Sub] Simulating crash after 2 seconds during active reception
Shared memory monitoring is enabled (domain: ecal_mon - queue size: 1024)
[Crash_Sub] Listening to topic 'test_topic' in mode 'local_shm'
[Crash_Sub] Received 52428800 bytes
[Publisher] Subscriber detected. Starting to send.
[Publisher] Send result: ✓, size: 52428800 bytes
[Publisher] Send result: ✓, size: 52428800 bytes
[Publisher] Send result: ✓, size: 52428800 bytes
[Publisher] Finished sending.
Shared memory monitoring is enabled (domain: ecal_mon - queue size: 1024)
[Test_Sub] Ready and waiting...
[Test_Sub] Received 52428800 bytes (message 1)
[Test_Sub] Received 52428800 bytes (message 2)
[Test_Sub] Received 52428800 bytes (message 3)
[✓] Received 3 messages.
./entrypoint.sh: line 45:    14 Aborted                 (core dumped) ./crash_send_subscriber $ARGS
</msg>
<arg>\n[LOCAL TEST CONTAINER OUTPUT]\n${logs}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-10T10:33:59.755900" elapsed="0.000247"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-07-10T10:33:59.757412" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-10T10:33:59.756254" elapsed="0.001181"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-10T10:33:59.757654" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Local container failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-10T10:33:59.757517" elapsed="0.000180"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-07-10T10:33:59.759776" level="INFO">${logs} = [Entrypoint] Starting all processes locally in one container (mode local_shm)
Shared memory monitoring is enabled (domain: ecal_mon - queue size: 1024)
[Publisher] Prepared 50MB message.
[Publisher] W...</msg>
<var>${logs}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-10T10:33:59.757773" elapsed="0.002027"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Local Crash Receive Test ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-07-10T10:33:59.759880" elapsed="0.000229"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-10T10:33:59.760195" elapsed="0.005529"/>
</kw>
<arg>local_shm</arg>
<status status="PASS" start="2025-07-10T10:33:24.620712" elapsed="35.145081"/>
</kw>
<tag>crash_receive_local_shm</tag>
<status status="PASS" start="2025-07-10T10:33:24.620272" elapsed="35.145627"/>
</test>
<test id="s1-s9-t2" name="Crash During Reception (TCP)" line="50">
<kw name="Run Local Crash Receive Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-10T10:33:59.767261" level="INFO">${IMAGE} = sub_send_crash_local_tcp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-10T10:33:59.767121" elapsed="0.000162"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-10T10:33:59.767469" level="INFO">${CONTAINER} = local_all_local_tcp</msg>
<var>${CONTAINER}</var>
<arg>local_all_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-10T10:33:59.767360" elapsed="0.000127"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Starting crash test in LOCAL mode: ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-10T10:33:59.767555" elapsed="0.000126"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<arg>${IMAGE}</arg>
<arg>local_all</arg>
<arg>${layer_tag}</arg>
<arg>test_topic</arg>
<arg>${CONTAINER}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-10T10:33:59.767772" elapsed="0.128874"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-10T10:34:34.897238" level="INFO">Slept 35 seconds.</msg>
<arg>35s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-10T10:33:59.896875" elapsed="35.000482"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-07-10T10:34:34.900399" level="INFO">${logs} = [Entrypoint] Starting all processes locally in one container (mode local_tcp)
[Publisher] Prepared 50MB message.
[Publisher] Waiting for at least 2 subscriber(s) on topic: test_topic
1752143641899 ms ...</msg>
<var>${logs}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-10T10:34:34.897533" elapsed="0.002893"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[LOCAL TEST CONTAINER OUTPUT]\n${logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-10T10:34:34.900516" elapsed="0.000165"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-10T10:34:34.900959" level="INFO">
[LOCAL TEST CONTAINER OUTPUT]
[Entrypoint] Starting all processes locally in one container (mode local_tcp)
[Publisher] Prepared 50MB message.
[Publisher] Waiting for at least 2 subscriber(s) on topic: test_topic
1752143641899 ms | e4ab9e44e4f6 | large_publisher | 7 | info | CTCPReaderLayer - TCPPubSub (Info) -Publisher :::0: Created publisher and waiting for clients.
1752143641900 ms | e4ab9e44e4f6 | large_publisher | 7 | info | CTCPReaderLayer - TCPPubSub (Info) -Publisher :::43197: Subscriber ::ffff:172.18.0.2:36942 has connected.
1752143641900 ms | e4ab9e44e4f6 | large_publisher | 7 | info | CTCPReaderLayer - TCPPubSub (Info) -Publisher :::43197: Subscriber ::ffff:172.18.0.2:36958 has connected.
[Publisher] Found 2 subscriber(s). Proceeding to send messages.
[Crash_Sub] Simulating crash after 2 seconds during active reception
[Crash_Sub] Listening to topic 'test_topic' in mode 'local_tcp'
[Crash_Sub] Received 52428800 bytes
[Publisher] Subscriber detected. Starting to send.
[Publisher] Send result: ✓, size: 52428800 bytes
[Publisher] Send result: ✓, size: 52428800 bytes
1752143644452 ms | e4ab9e44e4f6 | large_publisher | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -PublisherSession ::ffff:172.18.0.2:43197-&gt;?: Failed sending data: Broken pipe
[Publisher] Send result: ✓, size: 52428800 bytes
[Publisher] Finished sending.
[Test_Sub] Ready and waiting...
[Test_Sub] Received 52428800 bytes (message 1)
[Test_Sub] Received 52428800 bytes (message 2)
[Test_Sub] Received 52428800 bytes (message 3)
1752143646470 ms | e4ab9e44e4f6 | test_sub | 13 | error | CTCPReaderLayer - TCPPubSub (Error) -SubscriberSession 172.18.0.2:36942-&gt;e4ab9e44e4f6:43197: Error reading header length: End of file
1752143646470 ms | e4ab9e44e4f6 | test_sub | 13 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:33396: Failed connecting to publisher e4ab9e44e4f6:43197: Connection refused
1752143646470 ms | e4ab9e44e4f6 | test_sub | 13 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:33410: Failed connecting to publisher e4ab9e44e4f6:43197: Connection refused
1752143646471 ms | e4ab9e44e4f6 | test_sub | 13 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:33426: Failed connecting to publisher e4ab9e44e4f6:43197: Connection refused
1752143646471 ms | e4ab9e44e4f6 | test_sub | 13 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:33434: Failed connecting to publisher e4ab9e44e4f6:43197: Connection refused
1752143646471 ms | e4ab9e44e4f6 | test_sub | 13 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:33438: Failed connecting to publisher e4ab9e44e4f6:43197: Connection refused
[✓] Received 3 messages.
./entrypoint.sh: line 45:    14 Aborted                 (core dumped) ./crash_send_subscriber $ARGS
</msg>
<arg>\n[LOCAL TEST CONTAINER OUTPUT]\n${logs}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-10T10:34:34.900795" elapsed="0.000283"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-07-10T10:34:34.902563" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-10T10:34:34.901196" elapsed="0.001401"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-10T10:34:34.902816" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Local container failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-10T10:34:34.902682" elapsed="0.000178"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-07-10T10:34:34.905101" level="INFO">${logs} = [Entrypoint] Starting all processes locally in one container (mode local_tcp)
[Publisher] Prepared 50MB message.
[Publisher] Waiting for at least 2 subscriber(s) on topic: test_topic
1752143641899 ms ...</msg>
<var>${logs}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-10T10:34:34.902935" elapsed="0.002191"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Local Crash Receive Test ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-07-10T10:34:34.905206" elapsed="0.000150"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-10T10:34:34.905457" elapsed="0.004855"/>
</kw>
<arg>local_tcp</arg>
<status status="PASS" start="2025-07-10T10:33:59.766899" elapsed="35.143473"/>
</kw>
<tag>crash_receive_local_tcp</tag>
<status status="PASS" start="2025-07-10T10:33:59.766553" elapsed="35.143909"/>
</test>
<test id="s1-s9-t3" name="Crash During Reception (Network UDP)" line="54">
<kw name="Run Network Crash Receive Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-10T10:34:34.911751" level="INFO">${IMAGE} = sub_send_crash_network_udp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-10T10:34:34.911612" elapsed="0.000162"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-10T10:34:34.911996" level="INFO">${TOPIC} = test_topic</msg>
<var>${TOPIC}</var>
<arg>test_topic</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-10T10:34:34.911885" elapsed="0.000133"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-10T10:34:34.912205" level="INFO">${SUB_OK} = sub_ok_network_udp</msg>
<var>${SUB_OK}</var>
<arg>sub_ok_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-10T10:34:34.912092" elapsed="0.000131"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-10T10:34:34.912409" level="INFO">${SUB_CRASH} = sub_crash_network_udp</msg>
<var>${SUB_CRASH}</var>
<arg>sub_crash_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-10T10:34:34.912291" elapsed="0.000138"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-10T10:34:34.912600" level="INFO">${PUBLISHER} = pub_network_udp</msg>
<var>${PUBLISHER}</var>
<arg>pub_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-10T10:34:34.912497" elapsed="0.000120"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Starting crash test in NETWORK mode: ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-10T10:34:34.912683" elapsed="0.000117"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${SUB_OK}</arg>
<arg>${IMAGE}</arg>
<arg>test_subscriber</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${SUB_OK}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-10T10:34:34.912901" elapsed="0.134959"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${SUB_CRASH}</arg>
<arg>${IMAGE}</arg>
<arg>crash_subscriber</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${SUB_CRASH}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-10T10:34:35.048070" elapsed="0.126983"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${PUBLISHER}</arg>
<arg>${IMAGE}</arg>
<arg>large_publisher</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${PUBLISHER}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-10T10:34:35.175216" elapsed="0.121546"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${SUB_OK}</arg>
<status status="PASS" start="2025-07-10T10:34:35.296947" elapsed="30.822123"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${SUB_CRASH}</arg>
<status status="PASS" start="2025-07-10T10:35:06.119227" elapsed="0.001381"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${PUBLISHER}</arg>
<status status="PASS" start="2025-07-10T10:35:06.120696" elapsed="0.001137"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-07-10T10:35:06.124125" level="INFO">${log1} = [Entrypoint] Starting stable subscriber in mode network_udp
[Test_Sub] Ready and waiting...
[Test_Sub] Received 52428800 bytes (message 1)
[Test_Sub] Received 52428800 bytes (message 2)
[Test_Sub] Rec...</msg>
<var>${log1}</var>
<arg>${SUB_OK}</arg>
<status status="PASS" start="2025-07-10T10:35:06.121948" elapsed="0.002205"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-07-10T10:35:06.126275" level="INFO">${log2} = [Entrypoint] Starting crashing subscriber in mode network_udp
[Crash_Sub] Simulating crash after 2 seconds during active reception
[Crash_Sub] Listening to topic 'test_topic' in mode 'network_udp'
[Cr...</msg>
<var>${log2}</var>
<arg>${SUB_CRASH}</arg>
<status status="PASS" start="2025-07-10T10:35:06.124239" elapsed="0.002061"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-07-10T10:35:06.128470" level="INFO">${log3} = [Entrypoint] Starting large publisher in mode network_udp
[Publisher] Prepared 50MB message.
[Publisher] Waiting for at least 2 subscriber(s) on topic: test_topic
[Publisher] Found 2 subscriber(s). Pr...</msg>
<var>${log3}</var>
<arg>${PUBLISHER}</arg>
<status status="PASS" start="2025-07-10T10:35:06.126383" elapsed="0.002112"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[LOG: SUBSCRIBER]\n${log1}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-10T10:35:06.128596" elapsed="0.000154"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[LOG: CRASH_SUBSCRIBER]\n${log2}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-10T10:35:06.128856" elapsed="0.000181"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[LOG: PUBLISHER]\n${log3}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-10T10:35:06.129145" elapsed="0.000137"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-10T10:35:06.129516" level="INFO">
[LOG: SUBSCRIBER]
[Entrypoint] Starting stable subscriber in mode network_udp
[Test_Sub] Ready and waiting...
[Test_Sub] Received 52428800 bytes (message 1)
[Test_Sub] Received 52428800 bytes (message 2)
[Test_Sub] Received 52428800 bytes (message 3)
[✓] Received 3 messages.
</msg>
<arg>\n[LOG: SUBSCRIBER]\n${log1}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-10T10:35:06.129401" elapsed="0.000162"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-10T10:35:06.129723" level="INFO">
[LOG: CRASH_SUBSCRIBER]
[Entrypoint] Starting crashing subscriber in mode network_udp
[Crash_Sub] Simulating crash after 2 seconds during active reception
[Crash_Sub] Listening to topic 'test_topic' in mode 'network_udp'
[Crash_Sub] Received 52428800 bytes
./entrypoint.sh: line 62:     7 Aborted                 (core dumped) ./crash_send_subscriber $ARGS $EXTRA
</msg>
<arg>\n[LOG: CRASH_SUBSCRIBER]\n${log2}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-10T10:35:06.129632" elapsed="0.000121"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-10T10:35:06.129905" level="INFO">
[LOG: PUBLISHER]
[Entrypoint] Starting large publisher in mode network_udp
[Publisher] Prepared 50MB message.
[Publisher] Waiting for at least 2 subscriber(s) on topic: test_topic
[Publisher] Found 2 subscriber(s). Proceeding to send messages.
[Publisher] Subscriber detected. Starting to send.
[Publisher] Send result: ✓, size: 52428800 bytes
[Publisher] Send result: ✓, size: 52428800 bytes
[Publisher] Send result: ✓, size: 52428800 bytes
[Publisher] Finished sending.
</msg>
<arg>\n[LOG: PUBLISHER]\n${log3}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-10T10:35:06.129817" elapsed="0.000120"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-07-10T10:35:06.130867" level="INFO">${exit1} = 0</msg>
<var>${exit1}</var>
<arg>${SUB_OK}</arg>
<status status="PASS" start="2025-07-10T10:35:06.130030" elapsed="0.000859"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-10T10:35:06.131128" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit1}</arg>
<arg>0</arg>
<arg>Stable subscriber failed unexpectedly!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-10T10:35:06.130990" elapsed="0.000182"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Network Crash Receive Test ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-07-10T10:35:06.131246" elapsed="0.000137"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${SUB_OK}</arg>
<status status="PASS" start="2025-07-10T10:35:06.131476" elapsed="0.005081"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${SUB_CRASH}</arg>
<status status="PASS" start="2025-07-10T10:35:06.136640" elapsed="0.004844"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${PUBLISHER}</arg>
<status status="PASS" start="2025-07-10T10:35:06.141605" elapsed="0.005199"/>
</kw>
<arg>network_udp</arg>
<arg>network</arg>
<status status="PASS" start="2025-07-10T10:34:34.911406" elapsed="31.235457"/>
</kw>
<tag>crash_receive_network_udp</tag>
<status status="PASS" start="2025-07-10T10:34:34.911011" elapsed="31.235946"/>
</test>
<test id="s1-s9-t4" name="Crash During Reception (Network TCP)" line="58">
<kw name="Run Network Crash Receive Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-10T10:35:06.148829" level="INFO">${IMAGE} = sub_send_crash_network_tcp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-10T10:35:06.148682" elapsed="0.000168"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-10T10:35:06.149043" level="INFO">${TOPIC} = test_topic</msg>
<var>${TOPIC}</var>
<arg>test_topic</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-10T10:35:06.148934" elapsed="0.000129"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-10T10:35:06.149239" level="INFO">${SUB_OK} = sub_ok_network_tcp</msg>
<var>${SUB_OK}</var>
<arg>sub_ok_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-10T10:35:06.149132" elapsed="0.000124"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-10T10:35:06.149439" level="INFO">${SUB_CRASH} = sub_crash_network_tcp</msg>
<var>${SUB_CRASH}</var>
<arg>sub_crash_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-10T10:35:06.149321" elapsed="0.000137"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-10T10:35:06.149663" level="INFO">${PUBLISHER} = pub_network_tcp</msg>
<var>${PUBLISHER}</var>
<arg>pub_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-10T10:35:06.149537" elapsed="0.000151"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Starting crash test in NETWORK mode: ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-10T10:35:06.149766" elapsed="0.000139"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${SUB_OK}</arg>
<arg>${IMAGE}</arg>
<arg>test_subscriber</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${SUB_OK}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-10T10:35:06.150024" elapsed="0.126700"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${SUB_CRASH}</arg>
<arg>${IMAGE}</arg>
<arg>crash_subscriber</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${SUB_CRASH}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-10T10:35:06.276911" elapsed="0.121653"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${PUBLISHER}</arg>
<arg>${IMAGE}</arg>
<arg>large_publisher</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${PUBLISHER}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-10T10:35:06.398780" elapsed="0.120644"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${SUB_OK}</arg>
<status status="PASS" start="2025-07-10T10:35:06.519604" elapsed="30.823682"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${SUB_CRASH}</arg>
<status status="PASS" start="2025-07-10T10:35:37.343446" elapsed="0.001479"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${PUBLISHER}</arg>
<status status="PASS" start="2025-07-10T10:35:37.345047" elapsed="0.001055"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-07-10T10:35:37.348382" level="INFO">${log1} = [Entrypoint] Starting stable subscriber in mode network_tcp
[Test_Sub] Ready and waiting...
[Test_Sub] Received 52428800 bytes (message 1)
[Test_Sub] Received 52428800 bytes (message 2)
[Test_Sub] Rec...</msg>
<var>${log1}</var>
<arg>${SUB_OK}</arg>
<status status="PASS" start="2025-07-10T10:35:37.346195" elapsed="0.002214"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-07-10T10:35:37.350504" level="INFO">${log2} = [Entrypoint] Starting crashing subscriber in mode network_tcp
[Crash_Sub] Listening to topic 'test_topic' in mode 'network_tcp'
[Crash_Sub] Received 52428800 bytes
[Crash_Sub] Simulating crash after 2...</msg>
<var>${log2}</var>
<arg>${SUB_CRASH}</arg>
<status status="PASS" start="2025-07-10T10:35:37.348493" elapsed="0.002036"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-07-10T10:35:37.352692" level="INFO">${log3} = [Entrypoint] Starting large publisher in mode network_tcp
[Publisher] Prepared 50MB message.
[Publisher] Waiting for at least 2 subscriber(s) on topic: test_topic
1752143707278 ms | 0074fd9f17cd | lar...</msg>
<var>${log3}</var>
<arg>${PUBLISHER}</arg>
<status status="PASS" start="2025-07-10T10:35:37.350611" elapsed="0.002106"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[LOG: SUBSCRIBER]\n${log1}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-10T10:35:37.352805" elapsed="0.000157"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[LOG: CRASH_SUBSCRIBER]\n${log2}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-10T10:35:37.353102" elapsed="0.000167"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[LOG: PUBLISHER]\n${log3}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-10T10:35:37.353373" elapsed="0.000159"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-10T10:35:37.353768" level="INFO">
[LOG: SUBSCRIBER]
[Entrypoint] Starting stable subscriber in mode network_tcp
[Test_Sub] Ready and waiting...
[Test_Sub] Received 52428800 bytes (message 1)
[Test_Sub] Received 52428800 bytes (message 2)
[Test_Sub] Received 52428800 bytes (message 3)
1752143711992 ms | a33bd634009b | test_sub | 7 | error | CTCPReaderLayer - TCPPubSub (Error) -SubscriberSession 172.18.0.2:56440-&gt;0074fd9f17cd:43701: Error reading header length: End of file
1752143711992 ms | a33bd634009b | test_sub | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:56442: Failed connecting to publisher 0074fd9f17cd:43701: Connection refused
1752143711993 ms | a33bd634009b | test_sub | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:56450: Failed connecting to publisher 0074fd9f17cd:43701: Connection refused
1752143711993 ms | a33bd634009b | test_sub | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:56462: Failed connecting to publisher 0074fd9f17cd:43701: Connection refused
1752143711994 ms | a33bd634009b | test_sub | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:56472: Failed connecting to publisher 0074fd9f17cd:43701: Connection refused
1752143711994 ms | a33bd634009b | test_sub | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:56480: Failed connecting to publisher 0074fd9f17cd:43701: Connection refused
[✓] Received 3 messages.
</msg>
<arg>\n[LOG: SUBSCRIBER]\n${log1}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-10T10:35:37.353628" elapsed="0.000202"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-10T10:35:37.354065" level="INFO">
[LOG: CRASH_SUBSCRIBER]
[Entrypoint] Starting crashing subscriber in mode network_tcp
[Crash_Sub] Listening to topic 'test_topic' in mode 'network_tcp'
[Crash_Sub] Received 52428800 bytes
[Crash_Sub] Simulating crash after 2 seconds during active reception
./entrypoint.sh: line 62:     7 Aborted                 (core dumped) ./crash_send_subscriber $ARGS $EXTRA
</msg>
<arg>\n[LOG: CRASH_SUBSCRIBER]\n${log2}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-10T10:35:37.353924" elapsed="0.000236"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-10T10:35:37.354381" level="INFO">
[LOG: PUBLISHER]
[Entrypoint] Starting large publisher in mode network_tcp
[Publisher] Prepared 50MB message.
[Publisher] Waiting for at least 2 subscriber(s) on topic: test_topic
1752143707278 ms | 0074fd9f17cd | large_publisher | 7 | info | CTCPReaderLayer - TCPPubSub (Info) -Publisher :::0: Created publisher and waiting for clients.
1752143707279 ms | 0074fd9f17cd | large_publisher | 7 | info | CTCPReaderLayer - TCPPubSub (Info) -Publisher :::43701: Subscriber ::ffff:172.18.0.3:34302 has connected.
1752143707279 ms | 0074fd9f17cd | large_publisher | 7 | info | CTCPReaderLayer - TCPPubSub (Info) -Publisher :::43701: Subscriber ::ffff:172.18.0.2:56440 has connected.
[Publisher] Found 2 subscriber(s). Proceeding to send messages.
[Publisher] Subscriber detected. Starting to send.
[Publisher] Send result: ✓, size: 52428800 bytes
1752143709974 ms | 0074fd9f17cd | large_publisher | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -PublisherSession ::ffff:172.18.0.4:43701-&gt;?: Failed sending data: Broken pipe
[Publisher] Send result: ✓, size: 52428800 bytes
[Publisher] Send result: ✓, size: 52428800 bytes
[Publisher] Finished sending.
</msg>
<arg>\n[LOG: PUBLISHER]\n${log3}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-10T10:35:37.354256" elapsed="0.000181"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-07-10T10:35:37.355594" level="INFO">${exit1} = 0</msg>
<var>${exit1}</var>
<arg>${SUB_OK}</arg>
<status status="PASS" start="2025-07-10T10:35:37.354525" elapsed="0.001093"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-10T10:35:37.355836" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit1}</arg>
<arg>0</arg>
<arg>Stable subscriber failed unexpectedly!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-10T10:35:37.355703" elapsed="0.000178"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Network Crash Receive Test ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-07-10T10:35:37.355958" elapsed="0.000182"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${SUB_OK}</arg>
<status status="PASS" start="2025-07-10T10:35:37.356226" elapsed="0.005206"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${SUB_CRASH}</arg>
<status status="PASS" start="2025-07-10T10:35:37.361513" elapsed="0.005111"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${PUBLISHER}</arg>
<status status="PASS" start="2025-07-10T10:35:37.366705" elapsed="0.005365"/>
</kw>
<arg>network_tcp</arg>
<arg>network</arg>
<status status="PASS" start="2025-07-10T10:35:06.148478" elapsed="31.223651"/>
</kw>
<tag>crash_receive_network_tcp</tag>
<status status="PASS" start="2025-07-10T10:35:06.148076" elapsed="31.224147"/>
</test>
<status status="PASS" start="2025-07-10T10:33:12.643189" elapsed="144.730082"/>
</suite>
<status status="FAIL" start="2025-07-10T10:24:36.371370" elapsed="661.002638"/>
</suite>
<statistics>
<total>
<stat pass="22" fail="3" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">basic_pub_sub_local_shm</stat>
<stat pass="1" fail="0" skip="0">basic_pub_sub_local_tcp</stat>
<stat pass="1" fail="0" skip="0">basic_pub_sub_local_udp</stat>
<stat pass="1" fail="0" skip="0">basic_pub_sub_network_tcp</stat>
<stat pass="1" fail="0" skip="0">basic_pub_sub_network_udp</stat>
<stat pass="1" fail="0" skip="0">crash_receive_local_shm</stat>
<stat pass="1" fail="0" skip="0">crash_receive_local_tcp</stat>
<stat pass="1" fail="0" skip="0">crash_receive_network_tcp</stat>
<stat pass="1" fail="0" skip="0">crash_receive_network_udp</stat>
<stat pass="1" fail="0" skip="0">multi_pub_sub_local_shm</stat>
<stat pass="1" fail="0" skip="0">multi_pub_sub_local_udp</stat>
<stat pass="1" fail="0" skip="0">multi_pub_sub_network_tcp</stat>
<stat pass="1" fail="0" skip="0">multi_pub_sub_network_udp</stat>
<stat pass="1" fail="0" skip="0">network_crash_test</stat>
<stat pass="1" fail="0" skip="0">pub_crash_local_shm</stat>
<stat pass="2" fail="0" skip="0">pub_crash_network_tcp</stat>
<stat pass="1" fail="0" skip="0">pub_crash_network_udp</stat>
<stat pass="0" fail="1" skip="0">rpc_n_to_n_test</stat>
<stat pass="0" fail="1" skip="0">rpc_reconnect</stat>
<stat pass="0" fail="1" skip="0">rpc_server_client_ping_test</stat>
<stat pass="1" fail="0" skip="0">sub_crash_local_shm</stat>
<stat pass="1" fail="0" skip="0">sub_crash_local_tcp</stat>
<stat pass="1" fail="0" skip="0">sub_crash_local_udp</stat>
<stat pass="1" fail="0" skip="0">sub_crash_network_udp</stat>
</tag>
<suite>
<stat name="Basic Pub Sub &amp; Multi Pub Sub &amp; Network Crash &amp; Pub Crash &amp; Rpc N To N Test &amp; Rpc Ping Test &amp; Rpc Reconnect Test &amp; Sub Crash &amp; Sub Send Crash" id="s1" pass="22" fail="3" skip="0">Basic Pub Sub &amp; Multi Pub Sub &amp; Network Crash &amp; Pub Crash &amp; Rpc N To N Test &amp; Rpc Ping Test &amp; Rpc Reconnect Test &amp; Sub Crash &amp; Sub Send Crash</stat>
<stat name="Basic Pub Sub" id="s1-s1" pass="5" fail="0" skip="0">Basic Pub Sub &amp; Multi Pub Sub &amp; Network Crash &amp; Pub Crash &amp; Rpc N To N Test &amp; Rpc Ping Test &amp; Rpc Reconnect Test &amp; Sub Crash &amp; Sub Send Crash.Basic Pub Sub</stat>
<stat name="Multi Pub Sub" id="s1-s2" pass="4" fail="0" skip="0">Basic Pub Sub &amp; Multi Pub Sub &amp; Network Crash &amp; Pub Crash &amp; Rpc N To N Test &amp; Rpc Ping Test &amp; Rpc Reconnect Test &amp; Sub Crash &amp; Sub Send Crash.Multi Pub Sub</stat>
<stat name="Network Crash" id="s1-s3" pass="1" fail="0" skip="0">Basic Pub Sub &amp; Multi Pub Sub &amp; Network Crash &amp; Pub Crash &amp; Rpc N To N Test &amp; Rpc Ping Test &amp; Rpc Reconnect Test &amp; Sub Crash &amp; Sub Send Crash.Network Crash</stat>
<stat name="Pub Crash" id="s1-s4" pass="3" fail="0" skip="0">Basic Pub Sub &amp; Multi Pub Sub &amp; Network Crash &amp; Pub Crash &amp; Rpc N To N Test &amp; Rpc Ping Test &amp; Rpc Reconnect Test &amp; Sub Crash &amp; Sub Send Crash.Pub Crash</stat>
<stat name="Rpc N To N Test" id="s1-s5" pass="0" fail="1" skip="0">Basic Pub Sub &amp; Multi Pub Sub &amp; Network Crash &amp; Pub Crash &amp; Rpc N To N Test &amp; Rpc Ping Test &amp; Rpc Reconnect Test &amp; Sub Crash &amp; Sub Send Crash.Rpc N To N Test</stat>
<stat name="Rpc Ping Test" id="s1-s6" pass="0" fail="1" skip="0">Basic Pub Sub &amp; Multi Pub Sub &amp; Network Crash &amp; Pub Crash &amp; Rpc N To N Test &amp; Rpc Ping Test &amp; Rpc Reconnect Test &amp; Sub Crash &amp; Sub Send Crash.Rpc Ping Test</stat>
<stat name="Rpc Reconnect Test" id="s1-s7" pass="0" fail="1" skip="0">Basic Pub Sub &amp; Multi Pub Sub &amp; Network Crash &amp; Pub Crash &amp; Rpc N To N Test &amp; Rpc Ping Test &amp; Rpc Reconnect Test &amp; Sub Crash &amp; Sub Send Crash.Rpc Reconnect Test</stat>
<stat name="Sub Crash" id="s1-s8" pass="5" fail="0" skip="0">Basic Pub Sub &amp; Multi Pub Sub &amp; Network Crash &amp; Pub Crash &amp; Rpc N To N Test &amp; Rpc Ping Test &amp; Rpc Reconnect Test &amp; Sub Crash &amp; Sub Send Crash.Sub Crash</stat>
<stat name="Sub Send Crash" id="s1-s9" pass="4" fail="0" skip="0">Basic Pub Sub &amp; Multi Pub Sub &amp; Network Crash &amp; Pub Crash &amp; Rpc N To N Test &amp; Rpc Ping Test &amp; Rpc Reconnect Test &amp; Sub Crash &amp; Sub Send Crash.Sub Send Crash</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
