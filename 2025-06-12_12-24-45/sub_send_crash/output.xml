<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 7.3 (Python 3.12.3 on linux)" generated="2025-06-12T12:46:35.741218" rpa="false" schemaversion="5">
<suite id="s1" name="Sub Send Crash" source="/home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/sub_send_crash/robottests/sub_send_crash.robot">
<kw name="Init Test Context" type="SETUP">
<kw name="Set Test Context" owner="GlobalPathsLibrary">
<arg>sub_send_crash</arg>
<arg>sub_send_crash</arg>
<doc>Sets the test folder (e.g. basic_pub_sub or message_validation) and tag prefix (e.g. basic_pub_sub).
Should be called once in Suite Setup if you're using non-default test cases.</doc>
<status status="PASS" start="2025-06-12T12:46:35.836165" elapsed="0.000171"/>
</kw>
<kw name="Get Build Script Path" owner="GlobalPathsLibrary">
<msg time="2025-06-12T12:46:35.836574" level="INFO">${build} = /home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/sub_send_crash/scripts/build_images.sh</msg>
<var>${build}</var>
<status status="PASS" start="2025-06-12T12:46:35.836452" elapsed="0.000150"/>
</kw>
<kw name="Get Network Name" owner="GlobalPathsLibrary">
<msg time="2025-06-12T12:46:35.836765" level="INFO">${net} = ecal_test_net</msg>
<var>${net}</var>
<status status="PASS" start="2025-06-12T12:46:35.836678" elapsed="0.000112"/>
</kw>
<kw name="Get Build Script Args" owner="GlobalPathsLibrary">
<msg time="2025-06-12T12:46:35.836939" level="INFO">${args} = ['sub_send_crash']</msg>
<var>${args}</var>
<status status="PASS" start="2025-06-12T12:46:35.836857" elapsed="0.000134"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-06-12T12:46:35.837255" level="INFO">${BUILD_SCRIPT} = /home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/sub_send_crash/scripts/build_images.sh</msg>
<arg>${BUILD_SCRIPT}</arg>
<arg>${build}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-06-12T12:46:35.837087" elapsed="0.000200"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-06-12T12:46:35.837502" level="INFO">${NETWORK} = ecal_test_net</msg>
<arg>${NETWORK}</arg>
<arg>${net}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-06-12T12:46:35.837370" elapsed="0.000168"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>[SETUP] Building image...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-12T12:46:35.837670" elapsed="0.000117"/>
</kw>
<kw name="Run Process" owner="Process">
<msg time="2025-06-12T12:46:35.838122" level="INFO">Starting process:
/home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/sub_send_crash/scripts/build_images.sh sub_send_crash</msg>
<msg time="2025-06-12T12:46:35.838586" level="INFO">Waiting for process to complete.</msg>
<msg time="2025-06-12T12:46:45.450203" level="INFO">Process completed.</msg>
<msg time="2025-06-12T12:46:45.450378" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<var>${result}</var>
<arg>${BUILD_SCRIPT}</arg>
<arg>@{args}</arg>
<doc>Runs a process and waits for it to complete.</doc>
<status status="PASS" start="2025-06-12T12:46:35.837896" elapsed="9.612507"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-06-12T12:46:45.451046" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${result.rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-06-12T12:46:45.450556" elapsed="0.000548"/>
</kw>
<kw name="Create Docker Network" owner="MyDockerLibrary">
<arg>${NETWORK}</arg>
<status status="PASS" start="2025-06-12T12:46:45.451191" elapsed="0.007572"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-06-12T12:46:48.459144" level="INFO">Slept 3 seconds.</msg>
<arg>3s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-06-12T12:46:45.458871" elapsed="3.000403"/>
</kw>
<status status="PASS" start="2025-06-12T12:46:35.835626" elapsed="12.623754"/>
</kw>
<test id="s1-t1" name="Crash During Reception (SHM)" line="36">
<kw name="Run Local Crash Receive Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-12T12:46:48.460595" level="INFO">${IMAGE} = sub_send_crash_local_shm</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-12T12:46:48.460436" elapsed="0.000180"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-12T12:46:48.460808" level="INFO">${CONTAINER} = local_all_local_shm</msg>
<var>${CONTAINER}</var>
<arg>local_all_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-12T12:46:48.460692" elapsed="0.000135"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Starting crash test in LOCAL mode: ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-12T12:46:48.460896" elapsed="0.000159"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<arg>${IMAGE}</arg>
<arg>local_all</arg>
<arg>${layer_tag}</arg>
<arg>test_topic</arg>
<arg>${CONTAINER}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-06-12T12:46:48.461156" elapsed="0.128270"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-06-12T12:47:23.590031" level="INFO">Slept 35 seconds.</msg>
<arg>35s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-06-12T12:46:48.589654" elapsed="35.000510"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-06-12T12:47:23.593288" level="INFO">${logs} = [Entrypoint] Starting all processes locally in one container (mode local_shm)
Shared memory monitoring is enabled (domain: ecal_mon - queue size: 1024)
[Publisher] Prepared 100MB message.
[Publisher] ...</msg>
<var>${logs}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-06-12T12:47:23.590344" elapsed="0.002971"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[LOCAL TEST CONTAINER OUTPUT]\n${logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-12T12:47:23.593411" elapsed="0.000162"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-06-12T12:47:23.594799" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-06-12T12:47:23.593678" elapsed="0.001144"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-06-12T12:47:23.595071" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Local container failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-06-12T12:47:23.594903" elapsed="0.000215"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-06-12T12:47:23.597178" level="INFO">${logs} = [Entrypoint] Starting all processes locally in one container (mode local_shm)
Shared memory monitoring is enabled (domain: ecal_mon - queue size: 1024)
[Publisher] Prepared 100MB message.
[Publisher] ...</msg>
<var>${logs}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-06-12T12:47:23.595197" elapsed="0.002006"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Local Crash Receive Test ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-06-12T12:47:23.597285" elapsed="0.000164"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-06-12T12:47:23.597539" elapsed="0.007263"/>
</kw>
<arg>local_shm</arg>
<status status="PASS" start="2025-06-12T12:46:48.460191" elapsed="35.144691"/>
</kw>
<tag>crash_receive_local_shm</tag>
<status status="PASS" start="2025-06-12T12:46:48.459469" elapsed="35.145547"/>
</test>
<test id="s1-t2" name="Crash with Zero Copy Enabled in Reception (SHM)" line="40">
<kw name="Run with Zero Copy Enabled Local Crash Receive Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-12T12:47:23.606362" level="INFO">${IMAGE} = sub_send_crash_local_shm</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-12T12:47:23.606223" elapsed="0.000159"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-12T12:47:23.606568" level="INFO">${CONTAINER} = zero_copy_local_all_local_shm</msg>
<var>${CONTAINER}</var>
<arg>zero_copy_local_all_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-12T12:47:23.606458" elapsed="0.000128"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Starting crash test with zero copy enabled in LOCAL mode: ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-12T12:47:23.606655" elapsed="0.000128"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<arg>${IMAGE}</arg>
<arg>zero_copy_local_all</arg>
<arg>${layer_tag}</arg>
<arg>test_topic</arg>
<arg>${CONTAINER}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-06-12T12:47:23.606872" elapsed="0.130782"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-06-12T12:47:58.738202" level="INFO">Slept 35 seconds.</msg>
<arg>35s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-06-12T12:47:23.737859" elapsed="35.000464"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-06-12T12:47:58.741349" level="INFO">${logs} = [Entrypoint] Starting all processes with Zero-Copy Publisher in one container (mode local_shm)
Shared memory monitoring is enabled (domain: ecal_mon - queue size: 1024)
[Publisher] Prepared 50MB messa...</msg>
<var>${logs}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-06-12T12:47:58.738496" elapsed="0.002879"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[LOCAL SHM WITH ZERO COPY TEST CONTAINER OUTPUT]\n${logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-12T12:47:58.741475" elapsed="0.000162"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-06-12T12:47:58.742939" level="INFO">${exit_code} = 1</msg>
<var>${exit_code}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-06-12T12:47:58.741743" elapsed="0.001246"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-06-12T12:47:58.743213" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg time="2025-06-12T12:47:58.743324" level="FAIL">Local container with zero copy shm failed!: 1 != 0</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Local container with zero copy shm failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="FAIL" start="2025-06-12T12:47:58.743072" elapsed="0.000392">Local container with zero copy shm failed!: 1 != 0</status>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<var>${logs}</var>
<arg>${CONTAINER}</arg>
<status status="NOT RUN" start="2025-06-12T12:47:58.743557" elapsed="0.000017"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Local Crash with zero copy enabled Test ${layer_tag}</arg>
<arg>${True}</arg>
<status status="NOT RUN" start="2025-06-12T12:47:58.743636" elapsed="0.000016"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<status status="NOT RUN" start="2025-06-12T12:47:58.743710" elapsed="0.000012"/>
</kw>
<arg>local_shm</arg>
<status status="FAIL" start="2025-06-12T12:47:23.606027" elapsed="35.137784">Local container with zero copy shm failed!: 1 != 0</status>
</kw>
<tag>zero_copy_crash_receive_local_shm</tag>
<status status="FAIL" start="2025-06-12T12:47:23.605617" elapsed="35.138321">Local container with zero copy shm failed!: 1 != 0</status>
</test>
<test id="s1-t3" name="Crash During Reception (TCP)" line="49">
<kw name="Run Local Crash Receive Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-12T12:47:58.745098" level="INFO">${IMAGE} = sub_send_crash_local_tcp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-12T12:47:58.744937" elapsed="0.000182"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-12T12:47:58.745302" level="INFO">${CONTAINER} = local_all_local_tcp</msg>
<var>${CONTAINER}</var>
<arg>local_all_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-12T12:47:58.745192" elapsed="0.000128"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Starting crash test in LOCAL mode: ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-12T12:47:58.745385" elapsed="0.000121"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<arg>${IMAGE}</arg>
<arg>local_all</arg>
<arg>${layer_tag}</arg>
<arg>test_topic</arg>
<arg>${CONTAINER}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-06-12T12:47:58.745606" elapsed="0.138090"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-06-12T12:48:33.884273" level="INFO">Slept 35 seconds.</msg>
<arg>35s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-06-12T12:47:58.883883" elapsed="35.000510"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-06-12T12:48:33.887438" level="INFO">${logs} = [Entrypoint] Starting all processes locally in one container (mode local_tcp)
[Publisher] Prepared 100MB message.
[Publisher] Waiting for at least 2 subscriber(s) on topic: test_topic
1749732480886 ms...</msg>
<var>${logs}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-06-12T12:48:33.884562" elapsed="0.002902"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[LOCAL TEST CONTAINER OUTPUT]\n${logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-12T12:48:33.887558" elapsed="0.000175"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-06-12T12:48:33.889018" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-06-12T12:48:33.887843" elapsed="0.001200"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-06-12T12:48:33.889303" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Local container failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-06-12T12:48:33.889126" elapsed="0.000244"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-06-12T12:48:33.891921" level="INFO">${logs} = [Entrypoint] Starting all processes locally in one container (mode local_tcp)
[Publisher] Prepared 100MB message.
[Publisher] Waiting for at least 2 subscriber(s) on topic: test_topic
1749732480886 ms...</msg>
<var>${logs}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-06-12T12:48:33.889450" elapsed="0.002495"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Local Crash Receive Test ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-06-12T12:48:33.892053" elapsed="0.000158"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-06-12T12:48:33.892331" elapsed="0.005017"/>
</kw>
<arg>local_tcp</arg>
<status status="PASS" start="2025-06-12T12:47:58.744738" elapsed="35.152668"/>
</kw>
<tag>crash_receive_local_tcp</tag>
<status status="PASS" start="2025-06-12T12:47:58.744420" elapsed="35.153112"/>
</test>
<test id="s1-t4" name="Crash During Reception (Network UDP)" line="53">
<kw name="Run Network Crash Receive Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-12T12:48:33.898726" level="INFO">${IMAGE} = sub_send_crash_network_udp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-12T12:48:33.898589" elapsed="0.000157"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-12T12:48:33.898905" level="INFO">${TOPIC} = test_topic</msg>
<var>${TOPIC}</var>
<arg>test_topic</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-12T12:48:33.898821" elapsed="0.000102"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-12T12:48:33.899150" level="INFO">${SUB_OK} = sub_ok_network_udp</msg>
<var>${SUB_OK}</var>
<arg>sub_ok_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-12T12:48:33.899031" elapsed="0.000138"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-12T12:48:33.899347" level="INFO">${SUB_CRASH} = sub_crash_network_udp</msg>
<var>${SUB_CRASH}</var>
<arg>sub_crash_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-12T12:48:33.899241" elapsed="0.000123"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-12T12:48:33.899537" level="INFO">${PUBLISHER} = pub_network_udp</msg>
<var>${PUBLISHER}</var>
<arg>pub_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-12T12:48:33.899429" elapsed="0.000126"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Starting crash test in NETWORK mode: ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-12T12:48:33.899620" elapsed="0.000125"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${SUB_OK}</arg>
<arg>${IMAGE}</arg>
<arg>test_subscriber</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${SUB_OK}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-06-12T12:48:33.899828" elapsed="0.138914"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${SUB_CRASH}</arg>
<arg>${IMAGE}</arg>
<arg>crash_subscriber</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${SUB_CRASH}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-06-12T12:48:34.038909" elapsed="0.137095"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${PUBLISHER}</arg>
<arg>${IMAGE}</arg>
<arg>large_publisher</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${PUBLISHER}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-06-12T12:48:34.176187" elapsed="0.125217"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${SUB_OK}</arg>
<status status="PASS" start="2025-06-12T12:48:34.301577" elapsed="30.805855"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${SUB_CRASH}</arg>
<status status="PASS" start="2025-06-12T12:49:05.107612" elapsed="0.001674"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${PUBLISHER}</arg>
<status status="PASS" start="2025-06-12T12:49:05.109377" elapsed="0.001005"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-06-12T12:49:05.112577" level="INFO">${log1} = [Entrypoint] Starting stable subscriber in mode network_udp
[Test_Sub] Ready and waiting...
[Test_Sub] Received 52428800 bytes (message 1)
[Test_Sub] Received 52428800 bytes (message 2)
[Test_Sub] Rec...</msg>
<var>${log1}</var>
<arg>${SUB_OK}</arg>
<status status="PASS" start="2025-06-12T12:49:05.110470" elapsed="0.002134"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-06-12T12:49:05.114854" level="INFO">${log2} = [Entrypoint] Starting crashing subscriber in mode network_udp
[Crash_Sub] Simulating crash after 2 seconds during active reception
[Crash_Sub] Listening to topic 'test_topic' in mode 'network_udp'
[Cr...</msg>
<var>${log2}</var>
<arg>${SUB_CRASH}</arg>
<status status="PASS" start="2025-06-12T12:49:05.112687" elapsed="0.002193"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-06-12T12:49:05.117049" level="INFO">${log3} = [Entrypoint] Starting large publisher in mode network_udp
[Publisher] Prepared 100MB message.
[Publisher] Waiting for at least 2 subscriber(s) on topic: test_topic
[Publisher] Found 2 subscriber(s). P...</msg>
<var>${log3}</var>
<arg>${PUBLISHER}</arg>
<status status="PASS" start="2025-06-12T12:49:05.114987" elapsed="0.002087"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[LOG: SUBSCRIBER]\n${log1}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-12T12:49:05.117159" elapsed="0.000161"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[LOG: CRASH_SUBSCRIBER]\n${log2}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-12T12:49:05.117427" elapsed="0.000138"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[LOG: PUBLISHER]\n${log3}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-12T12:49:05.117651" elapsed="0.000168"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-06-12T12:49:05.119062" level="INFO">${exit1} = 0</msg>
<var>${exit1}</var>
<arg>${SUB_OK}</arg>
<status status="PASS" start="2025-06-12T12:49:05.117928" elapsed="0.001160"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-06-12T12:49:05.119316" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit1}</arg>
<arg>0</arg>
<arg>Stable subscriber failed unexpectedly!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-06-12T12:49:05.119173" elapsed="0.000190"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Network Crash Receive Test ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-06-12T12:49:05.119442" elapsed="0.000145"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${SUB_OK}</arg>
<status status="PASS" start="2025-06-12T12:49:05.119685" elapsed="0.005191"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${SUB_CRASH}</arg>
<status status="PASS" start="2025-06-12T12:49:05.124980" elapsed="0.004873"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${PUBLISHER}</arg>
<status status="PASS" start="2025-06-12T12:49:05.129937" elapsed="0.005331"/>
</kw>
<arg>network_udp</arg>
<arg>network</arg>
<status status="PASS" start="2025-06-12T12:48:33.898386" elapsed="31.236943"/>
</kw>
<tag>crash_receive_network_udp</tag>
<status status="PASS" start="2025-06-12T12:48:33.898000" elapsed="31.237419"/>
</test>
<test id="s1-t5" name="Crash During Reception (Network TCP)" line="57">
<kw name="Run Network Crash Receive Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-12T12:49:05.137066" level="INFO">${IMAGE} = sub_send_crash_network_tcp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-12T12:49:05.136899" elapsed="0.000190"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-12T12:49:05.137248" level="INFO">${TOPIC} = test_topic</msg>
<var>${TOPIC}</var>
<arg>test_topic</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-12T12:49:05.137164" elapsed="0.000102"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-12T12:49:05.137439" level="INFO">${SUB_OK} = sub_ok_network_tcp</msg>
<var>${SUB_OK}</var>
<arg>sub_ok_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-12T12:49:05.137332" elapsed="0.000166"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-12T12:49:05.137682" level="INFO">${SUB_CRASH} = sub_crash_network_tcp</msg>
<var>${SUB_CRASH}</var>
<arg>sub_crash_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-12T12:49:05.137572" elapsed="0.000128"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-12T12:49:05.137867" level="INFO">${PUBLISHER} = pub_network_tcp</msg>
<var>${PUBLISHER}</var>
<arg>pub_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-12T12:49:05.137766" elapsed="0.000118"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Starting crash test in NETWORK mode: ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-12T12:49:05.137971" elapsed="0.000135"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${SUB_OK}</arg>
<arg>${IMAGE}</arg>
<arg>test_subscriber</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${SUB_OK}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-06-12T12:49:05.138209" elapsed="0.145047"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${SUB_CRASH}</arg>
<arg>${IMAGE}</arg>
<arg>crash_subscriber</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${SUB_CRASH}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-06-12T12:49:05.283421" elapsed="0.123080"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${PUBLISHER}</arg>
<arg>${IMAGE}</arg>
<arg>large_publisher</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${PUBLISHER}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-06-12T12:49:05.406698" elapsed="0.126381"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${SUB_OK}</arg>
<status status="PASS" start="2025-06-12T12:49:05.533252" elapsed="30.814222"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${SUB_CRASH}</arg>
<status status="PASS" start="2025-06-12T12:49:36.347648" elapsed="0.001476"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${PUBLISHER}</arg>
<status status="PASS" start="2025-06-12T12:49:36.349231" elapsed="0.000953"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-06-12T12:49:36.352502" level="INFO">${log1} = [Entrypoint] Starting stable subscriber in mode network_tcp
[Test_Sub] Ready and waiting...
[Test_Sub] Received 52428800 bytes (message 1)
[Test_Sub] Received 52428800 bytes (message 2)
[Test_Sub] Rec...</msg>
<var>${log1}</var>
<arg>${SUB_OK}</arg>
<status status="PASS" start="2025-06-12T12:49:36.350270" elapsed="0.002259"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-06-12T12:49:36.354770" level="INFO">${log2} = [Entrypoint] Starting crashing subscriber in mode network_tcp
[Crash_Sub] Simulating crash after 2 seconds during active reception
[Crash_Sub] Listening to topic 'test_topic' in mode 'network_tcp'
[Cr...</msg>
<var>${log2}</var>
<arg>${SUB_CRASH}</arg>
<status status="PASS" start="2025-06-12T12:49:36.352613" elapsed="0.002184"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-06-12T12:49:36.356905" level="INFO">${log3} = [Entrypoint] Starting large publisher in mode network_tcp
[Publisher] Prepared 100MB message.
[Publisher] Waiting for at least 2 subscriber(s) on topic: test_topic
1749732546281 ms | 8e5287409552 | la...</msg>
<var>${log3}</var>
<arg>${PUBLISHER}</arg>
<status status="PASS" start="2025-06-12T12:49:36.354881" elapsed="0.002049"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[LOG: SUBSCRIBER]\n${log1}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-12T12:49:36.357044" elapsed="0.000159"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[LOG: CRASH_SUBSCRIBER]\n${log2}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-12T12:49:36.357305" elapsed="0.000148"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[LOG: PUBLISHER]\n${log3}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-12T12:49:36.357563" elapsed="0.000182"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-06-12T12:49:36.359106" level="INFO">${exit1} = 0</msg>
<var>${exit1}</var>
<arg>${SUB_OK}</arg>
<status status="PASS" start="2025-06-12T12:49:36.357851" elapsed="0.001288"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-06-12T12:49:36.359438" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit1}</arg>
<arg>0</arg>
<arg>Stable subscriber failed unexpectedly!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-06-12T12:49:36.359254" elapsed="0.000246"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Network Crash Receive Test ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-06-12T12:49:36.359602" elapsed="0.000183"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${SUB_OK}</arg>
<status status="PASS" start="2025-06-12T12:49:36.359882" elapsed="0.005742"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${SUB_CRASH}</arg>
<status status="PASS" start="2025-06-12T12:49:36.365716" elapsed="0.005741"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${PUBLISHER}</arg>
<status status="PASS" start="2025-06-12T12:49:36.371550" elapsed="0.004872"/>
</kw>
<arg>network_tcp</arg>
<arg>network</arg>
<status status="PASS" start="2025-06-12T12:49:05.136697" elapsed="31.239795"/>
</kw>
<tag>crash_receive_network_tcp</tag>
<status status="PASS" start="2025-06-12T12:49:05.136317" elapsed="31.240270"/>
</test>
<status status="FAIL" start="2025-06-12T12:46:35.741967" elapsed="180.635675"/>
</suite>
<statistics>
<total>
<stat pass="4" fail="1" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">crash_receive_local_shm</stat>
<stat pass="1" fail="0" skip="0">crash_receive_local_tcp</stat>
<stat pass="1" fail="0" skip="0">crash_receive_network_tcp</stat>
<stat pass="1" fail="0" skip="0">crash_receive_network_udp</stat>
<stat pass="0" fail="1" skip="0">zero_copy_crash_receive_local_shm</stat>
</tag>
<suite>
<stat name="Sub Send Crash" id="s1" pass="4" fail="1" skip="0">Sub Send Crash</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
