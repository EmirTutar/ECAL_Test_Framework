name: eCAL Integration Tests

on:
  repository_dispatch:
    types: [run-tests]
  workflow_dispatch:

jobs:
  run-tests:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Set up Docker
      uses: docker/setup-buildx-action@v3

    - name: Build ecal_base Image
      run: |
        docker build -t ecal_base -f integration_tests/docker/Dockerfile.ecal_base .
    
    - name: Install Robot Framework + Docker SDK
      run: |
        python3 -m pip install --upgrade pip
        pip install robotframework docker

    - name: Set PYTHONPATH
      run: echo "PYTHONPATH=$PWD/integration_tests/lib" >> $GITHUB_ENV

    # Test 1: basic_pub_sub
    - name: Run Test basic_pub_sub
      run: |
        cd integration_tests/basic_pub_sub
        robot robottests/basic_pub_sub.robot || echo "Test failed"

    # Test 2: message_validation
    - name: Run Test message_validation
      run: |
        cd integration_tests/message_validation
        robot robottests/message_validation.robot || echo "Test failed"

    # Test 3: multi_pub_sub
    - name: Run Test multi_pub_sub
      run: |
        cd integration_tests/multi_pub_sub
        robot robottests/multi_pub_sub.robot || echo "Test failed"

    # Test 4: network_crash
    - name: Run Test network_crash
      run: |
        cd integration_tests/network_crash
        robot robottests/network_crash.robot || echo "Test failed"

    # Test 5: pub_crash
    - name: Run Test pub_crash
      run: |
        cd integration_tests/pub_crash
        robot robottests/pub_crash.robot || echo "Test failed"

    # Test 6: sub_crash
    - name: Run Test sub_crash
      run: |
        cd integration_tests/sub_crash
        robot robottests/sub_crash.robot || echo "Test failed"

    # Test 7: sub_send_crash
    - name: Run Test sub_send_crash
      run: |
        cd integration_tests/sub_send_crash
        robot robottests/sub_send_crash.robot || echo "Test failed"

    # Archive all Robot logs
    - name: Archive Robot Logs
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: robot-logs
        path: |
          integration_tests/**/log.html
          integration_tests/**/output.xml
          integration_tests/**/report.html

    - name: Create Timestamped Reports Folder
      if: always()
      run: |
        echo "REPORT_TS=$(date +'%Y-%m-%d_%H-%M-%S')" >> $GITHUB_ENV

    - name: Copy Robot Reports to gh-pages folder with timestamps
      if: always()
      run: |
        mkdir -p gh-pages/${REPORT_TS}
        for dir in integration_tests/*; do
          test_name=$(basename $dir)
          mkdir -p gh-pages/${REPORT_TS}/${test_name}
          cp $dir/log.html gh-pages/${REPORT_TS}/${test_name}/ || true
          cp $dir/report.html gh-pages/${REPORT_TS}/${test_name}/ || true
          cp $dir/output.xml gh-pages/${REPORT_TS}/${test_name}/ || true
        done

    - name: Generate index.html for GitHub Pages
      if: always()
      run: |
        INDEX_FILE=gh-pages/index.html
        echo "<html><head><title>eCAL Integration Reports</title></head><body>" > $INDEX_FILE
        echo "<h1>eCAL Test Runs</h1><ul>" >> $INDEX_FILE
        for folder in $(ls -1 gh-pages | grep -E '^[0-9]{4}-'); do
          echo "<li><b>${folder}</b><ul>" >> $INDEX_FILE
          for test in $(ls -1 gh-pages/$folder); do
            echo "<li>${test}: " >> $INDEX_FILE
            echo "<a href='${folder}/${test}/log.html'>log</a> | " >> $INDEX_FILE
            echo "<a href='${folder}/${test}/report.html'>report</a> | " >> $INDEX_FILE
            echo "<a href='${folder}/${test}/output.xml'>xml</a>" >> $INDEX_FILE
            echo "</li>" >> $INDEX_FILE
          done
          echo "</ul></li>" >> $INDEX_FILE
        done
        echo "</ul></body></html>" >> $INDEX_FILE

    - name: Deploy to GitHub Pages
      if: always()
      run: |
        cd gh-pages
        touch .nojekyll
        git init
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git checkout -b gh-pages
        git add .
        git commit -m "Deploy test report at ${REPORT_TS}"
        git push --force "https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}" gh-pages
