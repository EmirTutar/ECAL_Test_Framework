<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 7.3.2 (Python 3.12.3 on linux)" generated="2025-07-24T12:40:07.404228" rpa="false" schemaversion="5">
<suite id="s1" name="Basic Pub Sub &amp; Multi Pub Sub &amp; Network Crash &amp; Pub Crash &amp; Rpc N To N Test &amp; Rpc Ping Test &amp; Rpc Reconnect Test &amp; Sub Crash &amp; Sub Send Crash">
<suite id="s1-s1" name="Basic Pub Sub" source="/home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/basic_pub_sub/robottests/basic_pub_sub.robot">
<kw name="Init Test Context" type="SETUP">
<kw name="Set Test Context" owner="GlobalPathsLibrary">
<arg>basic_pub_sub</arg>
<arg>basic_pub_sub</arg>
<doc>Sets the test folder and tag prefix if it's a valid test case.
The folder must exist under integration_tests/ and contain typical test structure.</doc>
<status status="PASS" start="2025-07-24T12:40:07.518040" elapsed="0.000195"/>
</kw>
<kw name="Get Build Script Path" owner="GlobalPathsLibrary">
<msg time="2025-07-24T12:40:07.518451" level="INFO">${build} = /home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/basic_pub_sub/scripts/build_images.sh</msg>
<var>${build}</var>
<status status="PASS" start="2025-07-24T12:40:07.518341" elapsed="0.000136"/>
</kw>
<kw name="Get Network Name" owner="GlobalPathsLibrary">
<msg time="2025-07-24T12:40:07.518680" level="INFO">${net} = ecal_test_net</msg>
<var>${net}</var>
<status status="PASS" start="2025-07-24T12:40:07.518586" elapsed="0.000114"/>
</kw>
<kw name="Get Build Script Args" owner="GlobalPathsLibrary">
<msg time="2025-07-24T12:40:07.518849" level="INFO">${args} = ['basic_pub_sub']</msg>
<var>${args}</var>
<status status="PASS" start="2025-07-24T12:40:07.518767" elapsed="0.000100"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-07-24T12:40:07.519127" level="INFO">${BUILD_SCRIPT} = /home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/basic_pub_sub/scripts/build_images.sh</msg>
<arg>${BUILD_SCRIPT}</arg>
<arg>${build}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-07-24T12:40:07.518953" elapsed="0.000223"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-07-24T12:40:07.519478" level="INFO">${NETWORK} = ecal_test_net</msg>
<arg>${NETWORK}</arg>
<arg>${net}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-07-24T12:40:07.519300" elapsed="0.000223"/>
</kw>
<kw name="Get Test Description" owner="GlobalPathsLibrary">
<msg time="2025-07-24T12:40:07.519860" level="INFO">${desc} = This test checks basic communication between a single publisher and a single subscriber.

Test Setup:
- The publisher sends 4 messages, each 0.2 MB in size, on a single topic.
- The subscriber listens...</msg>
<var>${desc}</var>
<doc>Reads the *** Comments *** section from the .robot file and returns it as a string.</doc>
<status status="PASS" start="2025-07-24T12:40:07.519655" elapsed="0.000236"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-24T12:40:07.520136" level="INFO">This test checks basic communication between a single publisher and a single subscriber.

Test Setup:
- The publisher sends 4 messages, each 0.2 MB in size, on a single topic.
- The subscriber listens on that topic for 6 seconds and counts received messages.

Covered eCAL modes:
- local_shm
- local_udp
- local_tcp
- network_udp
- network_tcp

Goals:
- Ensure that basic 1:1 communication works reliably across all transport modes.
- Validate correct transmission of payloads (200 KB).

Success Criteria:
- The subscriber receives exactly 4 messages.
- If true, it exits with code 0.
- Otherwise, it exits with code 1.</msg>
<arg>${desc}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-24T12:40:07.519999" elapsed="0.000193"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>[SETUP] Building Docker image...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T12:40:07.520300" elapsed="0.000144"/>
</kw>
<kw name="Run Process" owner="Process">
<msg time="2025-07-24T12:40:07.520822" level="INFO">Starting process:
/home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/basic_pub_sub/scripts/build_images.sh basic_pub_sub</msg>
<msg time="2025-07-24T12:40:07.521272" level="INFO">Waiting for process to complete.</msg>
<msg time="2025-07-24T12:40:21.313648" level="INFO">Process completed.</msg>
<msg time="2025-07-24T12:40:21.313816" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<var>${result}</var>
<arg>${BUILD_SCRIPT}</arg>
<arg>@{args}</arg>
<doc>Runs a process and waits for it to complete.</doc>
<status status="PASS" start="2025-07-24T12:40:07.520590" elapsed="13.793251"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-24T12:40:21.314678" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${result.rc}</arg>
<arg>0</arg>
<arg>Failed to build Docker image!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-24T12:40:21.313993" elapsed="0.000739"/>
</kw>
<kw name="Create Docker Network" owner="MyDockerLibrary">
<arg>${NETWORK}</arg>
<status status="PASS" start="2025-07-24T12:40:21.314822" elapsed="0.041992"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-24T12:40:24.357289" level="INFO">Slept 3 seconds.</msg>
<arg>3s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-24T12:40:21.356982" elapsed="3.000418"/>
</kw>
<status status="PASS" start="2025-07-24T12:40:07.517604" elapsed="16.839896"/>
</kw>
<test id="s1-s1-t1" name="Basic Pub/Sub Local SHM" line="38">
<kw name="Run Local Pub Sub Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T12:40:24.358564" level="INFO">${IMAGE} = basic_pub_sub_local_shm</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T12:40:24.358391" elapsed="0.000195"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T12:40:24.358775" level="INFO">${CONTAINER} = basic_local_local_shm</msg>
<var>${CONTAINER}</var>
<arg>basic_local_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T12:40:24.358662" elapsed="0.000130"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Running local pub/sub test in mode: ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T12:40:24.358858" elapsed="0.000125"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<arg>${IMAGE}</arg>
<arg>local</arg>
<arg>${layer_tag}</arg>
<arg>test_topic</arg>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-24T12:40:24.359058" elapsed="0.126685"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-24T12:40:33.486234" level="INFO">Slept 9 seconds.</msg>
<arg>9s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-24T12:40:24.485906" elapsed="9.000442"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-07-24T12:40:33.489754" level="INFO">${logs} = [Entrypoint] Starting subscriber and publisher in mode local_shm
Shared memory monitoring is enabled (domain: ecal_mon - queue size: 1024)
[Publisher] Waiting for at least 1 subscriber(s) on topic: te...</msg>
<var>${logs}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-24T12:40:33.486522" elapsed="0.003263"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[CONTAINER LOG: LOCAL PUB+SUB]\n${logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T12:40:33.489885" elapsed="0.000164"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-24T12:40:33.490286" level="INFO">
[CONTAINER LOG: LOCAL PUB+SUB]
[Entrypoint] Starting subscriber and publisher in mode local_shm
Shared memory monitoring is enabled (domain: ecal_mon - queue size: 1024)
[Publisher] Waiting for at least 1 subscriber(s) on topic: test_topic
[Publisher] Found 1 subscriber(s). Proceeding to send messages.
[Publisher] Send result: ✓, size: 209715 bytes
[Publisher] Send result: ✓, size: 209715 bytes
[Publisher] Send result: ✓, size: 209715 bytes
[Publisher] Send result: ✓, size: 209715 bytes
[Publisher] Finished sending.
Shared memory monitoring is enabled (domain: ecal_mon - queue size: 1024)


[Subscriber] Ready and waiting...

[Subscriber] Received 209715 bytes (message 1)
[Subscriber] Received 209715 bytes (message 2)
[Subscriber] Received 209715 bytes (message 3)
[Subscriber] Received 209715 bytes (message 4)
[Subscriber] Received 4 messages.
</msg>
<arg>\n[CONTAINER LOG: LOCAL PUB+SUB]\n${logs}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-24T12:40:33.490159" elapsed="0.000217"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-07-24T12:40:33.491480" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-24T12:40:33.490454" elapsed="0.001049"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-24T12:40:33.491754" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Local communication test failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-24T12:40:33.491611" elapsed="0.000188"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Basic Pub/Sub Local ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-07-24T12:40:33.491874" elapsed="0.000136"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-24T12:40:33.492103" elapsed="0.004901"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-24T12:40:34.497331" level="INFO">Slept 1 second.</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-24T12:40:33.497091" elapsed="1.000355"/>
</kw>
<arg>local_shm</arg>
<status status="PASS" start="2025-07-24T12:40:24.358142" elapsed="10.139434"/>
</kw>
<tag>basic_pub_sub_local_shm</tag>
<status status="PASS" start="2025-07-24T12:40:24.357611" elapsed="10.140114"/>
</test>
<test id="s1-s1-t2" name="Basic Pub/Sub Local UDP" line="42">
<kw name="Run Local Pub Sub Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T12:40:34.499380" level="INFO">${IMAGE} = basic_pub_sub_local_udp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T12:40:34.499143" elapsed="0.000259"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T12:40:34.499641" level="INFO">${CONTAINER} = basic_local_local_udp</msg>
<var>${CONTAINER}</var>
<arg>basic_local_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T12:40:34.499484" elapsed="0.000176"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Running local pub/sub test in mode: ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T12:40:34.499729" elapsed="0.000123"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<arg>${IMAGE}</arg>
<arg>local</arg>
<arg>${layer_tag}</arg>
<arg>test_topic</arg>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-24T12:40:34.499948" elapsed="0.111579"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-24T12:40:43.612044" level="INFO">Slept 9 seconds.</msg>
<arg>9s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-24T12:40:34.611760" elapsed="9.000394"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-07-24T12:40:43.615277" level="INFO">${logs} = [Entrypoint] Starting subscriber and publisher in mode local_udp
[Publisher] Waiting for at least 1 subscriber(s) on topic: test_topic
[Publisher] Found 1 subscriber(s). Proceeding to send messages.
[...</msg>
<var>${logs}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-24T12:40:43.612321" elapsed="0.002988"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[CONTAINER LOG: LOCAL PUB+SUB]\n${logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T12:40:43.615408" elapsed="0.000180"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-24T12:40:43.615854" level="INFO">
[CONTAINER LOG: LOCAL PUB+SUB]
[Entrypoint] Starting subscriber and publisher in mode local_udp
[Publisher] Waiting for at least 1 subscriber(s) on topic: test_topic
[Publisher] Found 1 subscriber(s). Proceeding to send messages.
[Publisher] Send result: ✓, size: 209715 bytes
[Publisher] Send result: ✓, size: 209715 bytes
[Publisher] Send result: ✓, size: 209715 bytes
[Publisher] Send result: ✓, size: 209715 bytes
[Publisher] Finished sending.


[Subscriber] Ready and waiting...

[Subscriber] Received 209715 bytes (message 1)
[Subscriber] Received 209715 bytes (message 2)
[Subscriber] Received 209715 bytes (message 3)
[Subscriber] Received 209715 bytes (message 4)
[Subscriber] Received 4 messages.
</msg>
<arg>\n[CONTAINER LOG: LOCAL PUB+SUB]\n${logs}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-24T12:40:43.615701" elapsed="0.000216"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-07-24T12:40:43.617307" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-24T12:40:43.616022" elapsed="0.001308"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-24T12:40:43.617574" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Local communication test failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-24T12:40:43.617411" elapsed="0.000212"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Basic Pub/Sub Local ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-07-24T12:40:43.617699" elapsed="0.000147"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-24T12:40:43.617947" elapsed="0.005048"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-24T12:40:44.623335" level="INFO">Slept 1 second.</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-24T12:40:43.623093" elapsed="1.000345"/>
</kw>
<arg>local_udp</arg>
<status status="PASS" start="2025-07-24T12:40:34.498891" elapsed="10.124642"/>
</kw>
<tag>basic_pub_sub_local_udp</tag>
<status status="PASS" start="2025-07-24T12:40:34.498394" elapsed="10.125302"/>
</test>
<test id="s1-s1-t3" name="Basic Pub/Sub Local TCP" line="46">
<kw name="Run Local Pub Sub Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T12:40:44.625019" level="INFO">${IMAGE} = basic_pub_sub_local_tcp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T12:40:44.624873" elapsed="0.000166"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T12:40:44.625220" level="INFO">${CONTAINER} = basic_local_local_tcp</msg>
<var>${CONTAINER}</var>
<arg>basic_local_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T12:40:44.625110" elapsed="0.000127"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Running local pub/sub test in mode: ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T12:40:44.625359" elapsed="0.000128"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<arg>${IMAGE}</arg>
<arg>local</arg>
<arg>${layer_tag}</arg>
<arg>test_topic</arg>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-24T12:40:44.625603" elapsed="0.113829"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-24T12:40:53.739931" level="INFO">Slept 9 seconds.</msg>
<arg>9s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-24T12:40:44.739636" elapsed="9.000410"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-07-24T12:40:53.742951" level="INFO">${logs} = [Entrypoint] Starting subscriber and publisher in mode local_tcp
[Publisher] Waiting for at least 1 subscriber(s) on topic: test_topic
1753360846741 ms | eb435d7008b4 | pub_test | 7 | info | CTCPReade...</msg>
<var>${logs}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-24T12:40:53.740215" elapsed="0.002762"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[CONTAINER LOG: LOCAL PUB+SUB]\n${logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T12:40:53.743067" elapsed="0.000162"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-24T12:40:53.743481" level="INFO">
[CONTAINER LOG: LOCAL PUB+SUB]
[Entrypoint] Starting subscriber and publisher in mode local_tcp
[Publisher] Waiting for at least 1 subscriber(s) on topic: test_topic
1753360846741 ms | eb435d7008b4 | pub_test | 7 | info | CTCPReaderLayer - TCPPubSub (Info) -Publisher :::0: Created publisher and waiting for clients.
1753360846742 ms | eb435d7008b4 | pub_test | 7 | info | CTCPReaderLayer - TCPPubSub (Info) -Publisher :::45731: Subscriber ::ffff:172.17.0.3:60034 has connected.
[Publisher] Found 1 subscriber(s). Proceeding to send messages.
[Publisher] Send result: ✓, size: 209715 bytes
[Publisher] Send result: ✓, size: 209715 bytes
[Publisher] Send result: ✓, size: 209715 bytes
[Publisher] Send result: ✓, size: 209715 bytes
[Publisher] Finished sending.


[Subscriber] Ready and waiting...

[Subscriber] Received 209715 bytes (message 1)
[Subscriber] Received 209715 bytes (message 2)
[Subscriber] Received 209715 bytes (message 3)
[Subscriber] Received 209715 bytes (message 4)
1753360850244 ms | eb435d7008b4 | sub_test | 13 | error | CTCPReaderLayer - TCPPubSub (Error) -SubscriberSession 172.17.0.3:60034-&gt;eb435d7008b4:45731: Error reading header length: End of file
1753360850245 ms | eb435d7008b4 | sub_test | 13 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.17.0.3:60046: Failed connecting to publisher eb435d7008b4:45731: Connection refused
1753360850245 ms | eb435d7008b4 | sub_test | 13 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.17.0.3:60062: Failed connecting to publisher eb435d7008b4:45731: Connection refused
1753360850245 ms | eb435d7008b4 | sub_test | 13 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.17.0.3:60078: Failed connecting to publisher eb435d7008b4:45731: Connection refused
1753360850245 ms | eb435d7008b4 | sub_test | 13 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.17.0.3:60080: Failed connecting to publisher eb435d7008b4:45731: Connection refused
1753360850245 ms | eb435d7008b4 | sub_test | 13 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.17.0.3:60096: Failed connecting to publisher eb435d7008b4:45731: Connection refused
[Subscriber] Received 4 messages.
</msg>
<arg>\n[CONTAINER LOG: LOCAL PUB+SUB]\n${logs}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-24T12:40:53.743339" elapsed="0.000193"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-07-24T12:40:53.744717" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-24T12:40:53.743642" elapsed="0.001098"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-24T12:40:53.744955" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Local communication test failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-24T12:40:53.744823" elapsed="0.000174"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Basic Pub/Sub Local ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-07-24T12:40:53.745072" elapsed="0.000136"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-24T12:40:53.745303" elapsed="0.005199"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-24T12:40:54.750859" level="INFO">Slept 1 second.</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-24T12:40:53.750610" elapsed="1.000363"/>
</kw>
<arg>local_tcp</arg>
<status status="PASS" start="2025-07-24T12:40:44.624648" elapsed="10.126419"/>
</kw>
<tag>basic_pub_sub_local_tcp</tag>
<status status="PASS" start="2025-07-24T12:40:44.624246" elapsed="10.126943"/>
</test>
<test id="s1-s1-t4" name="Basic Pub/Sub Network UDP" line="50">
<kw name="Run Network Pub Sub Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T12:40:54.752649" level="INFO">${IMAGE} = basic_pub_sub_network_udp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T12:40:54.752464" elapsed="0.000205"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T12:40:54.752855" level="INFO">${TOPIC} = topic_network_udp</msg>
<var>${TOPIC}</var>
<arg>topic_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T12:40:54.752745" elapsed="0.000127"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T12:40:54.753040" level="INFO">${SUB_NAME} = sub_network_udp</msg>
<var>${SUB_NAME}</var>
<arg>sub_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T12:40:54.752939" elapsed="0.000118"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T12:40:54.753219" level="INFO">${PUB_NAME} = pub_network_udp</msg>
<var>${PUB_NAME}</var>
<arg>pub_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T12:40:54.753120" elapsed="0.000115"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Running network pub/sub test in mode: ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T12:40:54.753298" elapsed="0.000118"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${SUB_NAME}</arg>
<arg>${IMAGE}</arg>
<arg>subscriber</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${SUB_NAME}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-24T12:40:54.753492" elapsed="0.129246"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${PUB_NAME}</arg>
<arg>${IMAGE}</arg>
<arg>publisher</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${PUB_NAME}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-24T12:40:54.882919" elapsed="0.120378"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-24T12:41:04.003871" level="INFO">Slept 9 seconds.</msg>
<arg>9s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-24T12:40:55.003503" elapsed="9.000481"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-07-24T12:41:04.006945" level="INFO">${log_sub} = [Entrypoint] Starting subscriber in mode network_udp


[Subscriber] Ready and waiting...

[Subscriber] Received 209715 bytes (message 1)
[Subscriber] Received 209715 bytes (message 2)
[Subscriber] Rec...</msg>
<var>${log_sub}</var>
<arg>${SUB_NAME}</arg>
<status status="PASS" start="2025-07-24T12:41:04.004215" elapsed="0.002756"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-07-24T12:41:04.009080" level="INFO">${log_pub} = [Entrypoint] Starting publisher in mode network_udp
[Publisher] Waiting for at least 1 subscriber(s) on topic: topic_network_udp
[Publisher] Found 1 subscriber(s). Proceeding to send messages.
[Publis...</msg>
<var>${log_pub}</var>
<arg>${PUB_NAME}</arg>
<status status="PASS" start="2025-07-24T12:41:04.007059" elapsed="0.002048"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[CONTAINER LOG: PUBLISHER]\n${log_pub}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T12:41:04.009201" elapsed="0.000155"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-24T12:41:04.009629" level="INFO">
[CONTAINER LOG: PUBLISHER]
[Entrypoint] Starting publisher in mode network_udp
[Publisher] Waiting for at least 1 subscriber(s) on topic: topic_network_udp
[Publisher] Found 1 subscriber(s). Proceeding to send messages.
[Publisher] Send result: ✓, size: 209715 bytes
[Publisher] Send result: ✓, size: 209715 bytes
[Publisher] Send result: ✓, size: 209715 bytes
[Publisher] Send result: ✓, size: 209715 bytes
[Publisher] Finished sending.
</msg>
<arg>\n[CONTAINER LOG: PUBLISHER]\n${log_pub}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-24T12:41:04.009468" elapsed="0.000200"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[CONTAINER LOG: SUBSCRIBER]\n${log_sub}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T12:41:04.009743" elapsed="0.000121"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-24T12:41:04.010079" level="INFO">
[CONTAINER LOG: SUBSCRIBER]
[Entrypoint] Starting subscriber in mode network_udp


[Subscriber] Ready and waiting...

[Subscriber] Received 209715 bytes (message 1)
[Subscriber] Received 209715 bytes (message 2)
[Subscriber] Received 209715 bytes (message 3)
[Subscriber] Received 209715 bytes (message 4)
[Subscriber] Received 4 messages.
</msg>
<arg>\n[CONTAINER LOG: SUBSCRIBER]\n${log_sub}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-24T12:41:04.009964" elapsed="0.000147"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-07-24T12:41:04.011196" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>${SUB_NAME}</arg>
<status status="PASS" start="2025-07-24T12:41:04.010181" elapsed="0.001039"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-24T12:41:04.011483" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Subscriber failed in ${layer_tag}!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-24T12:41:04.011322" elapsed="0.000203"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Basic Pub/Sub Network ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-07-24T12:41:04.011628" elapsed="0.000136"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${SUB_NAME}</arg>
<status status="PASS" start="2025-07-24T12:41:04.011855" elapsed="0.005025"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${PUB_NAME}</arg>
<status status="PASS" start="2025-07-24T12:41:04.016962" elapsed="0.005025"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-24T12:41:05.022316" level="INFO">Slept 1 second.</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-24T12:41:04.022073" elapsed="1.000358"/>
</kw>
<arg>network_udp</arg>
<arg>network</arg>
<status status="PASS" start="2025-07-24T12:40:54.752222" elapsed="10.270300"/>
</kw>
<tag>basic_pub_sub_network_udp</tag>
<status status="PASS" start="2025-07-24T12:40:54.751804" elapsed="10.270864"/>
</test>
<test id="s1-s1-t5" name="Basic Pub/Sub Network TCP" line="54">
<kw name="Run Network Pub Sub Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T12:41:05.024377" level="INFO">${IMAGE} = basic_pub_sub_network_tcp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T12:41:05.024219" elapsed="0.000178"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T12:41:05.024604" level="INFO">${TOPIC} = topic_network_tcp</msg>
<var>${TOPIC}</var>
<arg>topic_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T12:41:05.024471" elapsed="0.000152"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T12:41:05.024796" level="INFO">${SUB_NAME} = sub_network_tcp</msg>
<var>${SUB_NAME}</var>
<arg>sub_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T12:41:05.024691" elapsed="0.000123"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T12:41:05.024976" level="INFO">${PUB_NAME} = pub_network_tcp</msg>
<var>${PUB_NAME}</var>
<arg>pub_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T12:41:05.024877" elapsed="0.000116"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Running network pub/sub test in mode: ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T12:41:05.025055" elapsed="0.000116"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${SUB_NAME}</arg>
<arg>${IMAGE}</arg>
<arg>subscriber</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${SUB_NAME}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-24T12:41:05.025256" elapsed="0.132878"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${PUB_NAME}</arg>
<arg>${IMAGE}</arg>
<arg>publisher</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${PUB_NAME}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-24T12:41:05.158331" elapsed="0.121695"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-24T12:41:14.280518" level="INFO">Slept 9 seconds.</msg>
<arg>9s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-24T12:41:05.280208" elapsed="9.000457"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-07-24T12:41:14.283743" level="INFO">${log_sub} = [Entrypoint] Starting subscriber in mode network_tcp


[Subscriber] Ready and waiting...

[Subscriber] Received 209715 bytes (message 1)
[Subscriber] Received 209715 bytes (message 2)
[Subscriber] Rec...</msg>
<var>${log_sub}</var>
<arg>${SUB_NAME}</arg>
<status status="PASS" start="2025-07-24T12:41:14.280833" elapsed="0.002937"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-07-24T12:41:14.285895" level="INFO">${log_pub} = [Entrypoint] Starting publisher in mode network_tcp
[Publisher] Waiting for at least 1 subscriber(s) on topic: topic_network_tcp
1753360866159 ms | 686036545ba8 | pub_network_tcp | 7 | info | CTCPRead...</msg>
<var>${log_pub}</var>
<arg>${PUB_NAME}</arg>
<status status="PASS" start="2025-07-24T12:41:14.283858" elapsed="0.002062"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[CONTAINER LOG: PUBLISHER]\n${log_pub}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T12:41:14.286014" elapsed="0.000185"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-24T12:41:14.286455" level="INFO">
[CONTAINER LOG: PUBLISHER]
[Entrypoint] Starting publisher in mode network_tcp
[Publisher] Waiting for at least 1 subscriber(s) on topic: topic_network_tcp
1753360866159 ms | 686036545ba8 | pub_network_tcp | 7 | info | CTCPReaderLayer - TCPPubSub (Info) -Publisher :::0: Created publisher and waiting for clients.
1753360866161 ms | 686036545ba8 | pub_network_tcp | 7 | info | CTCPReaderLayer - TCPPubSub (Info) -Publisher :::36715: Subscriber ::ffff:172.18.0.2:56980 has connected.
[Publisher] Found 1 subscriber(s). Proceeding to send messages.
[Publisher] Send result: ✓, size: 209715 bytes
[Publisher] Send result: ✓, size: 209715 bytes
[Publisher] Send result: ✓, size: 209715 bytes
[Publisher] Send result: ✓, size: 209715 bytes
[Publisher] Finished sending.
</msg>
<arg>\n[CONTAINER LOG: PUBLISHER]\n${log_pub}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-24T12:41:14.286301" elapsed="0.000193"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[CONTAINER LOG: SUBSCRIBER]\n${log_sub}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T12:41:14.286600" elapsed="0.000138"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-24T12:41:14.286925" level="INFO">
[CONTAINER LOG: SUBSCRIBER]
[Entrypoint] Starting subscriber in mode network_tcp


[Subscriber] Ready and waiting...

[Subscriber] Received 209715 bytes (message 1)
[Subscriber] Received 209715 bytes (message 2)
[Subscriber] Received 209715 bytes (message 3)
[Subscriber] Received 209715 bytes (message 4)
1753360869684 ms | 3e71aa1ad07f | sub_network_tcp | 7 | error | CTCPReaderLayer - TCPPubSub (Error) -SubscriberSession 172.18.0.2:56980-&gt;686036545ba8:36715: Error reading header length: End of file
1753360869685 ms | 3e71aa1ad07f | sub_network_tcp | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:56982: Failed connecting to publisher 686036545ba8:36715: Connection refused
1753360869685 ms | 3e71aa1ad07f | sub_network_tcp | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:56994: Failed connecting to publisher 686036545ba8:36715: Connection refused
1753360869686 ms | 3e71aa1ad07f | sub_network_tcp | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:56996: Failed connecting to publisher 686036545ba8:36715: Connection refused
1753360869687 ms | 3e71aa1ad07f | sub_network_tcp | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:57004: Failed connecting to publisher 686036545ba8:36715: Connection refused
1753360869687 ms | 3e71aa1ad07f | sub_network_tcp | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:57010: Failed connecting to publisher 686036545ba8:36715: Connection refused
[Subscriber] Received 4 messages.
</msg>
<arg>\n[CONTAINER LOG: SUBSCRIBER]\n${log_sub}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-24T12:41:14.286826" elapsed="0.000135"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-07-24T12:41:14.288052" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>${SUB_NAME}</arg>
<status status="PASS" start="2025-07-24T12:41:14.287028" elapsed="0.001046"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-24T12:41:14.288313" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Subscriber failed in ${layer_tag}!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-24T12:41:14.288157" elapsed="0.000200"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Basic Pub/Sub Network ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-07-24T12:41:14.288432" elapsed="0.000162"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${SUB_NAME}</arg>
<status status="PASS" start="2025-07-24T12:41:14.288692" elapsed="0.005096"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${PUB_NAME}</arg>
<status status="PASS" start="2025-07-24T12:41:14.293871" elapsed="0.004525"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-24T12:41:15.298766" level="INFO">Slept 1 second.</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-24T12:41:14.298482" elapsed="1.000400"/>
</kw>
<arg>network_tcp</arg>
<arg>network</arg>
<status status="PASS" start="2025-07-24T12:41:05.023978" elapsed="10.274997"/>
</kw>
<tag>basic_pub_sub_network_tcp</tag>
<status status="PASS" start="2025-07-24T12:41:05.023573" elapsed="10.275520"/>
</test>
<status status="PASS" start="2025-07-24T12:40:07.423233" elapsed="67.877000"/>
</suite>
<suite id="s1-s2" name="Multi Pub Sub" source="/home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/multi_pub_sub/robottests/multi_pub_sub.robot">
<kw name="Init Test Context" type="SETUP">
<kw name="Set Test Context" owner="GlobalPathsLibrary">
<arg>multi_pub_sub</arg>
<arg>multi_pub_sub</arg>
<doc>Sets the test folder and tag prefix if it's a valid test case.
The folder must exist under integration_tests/ and contain typical test structure.</doc>
<status status="PASS" start="2025-07-24T12:41:15.304077" elapsed="0.000145"/>
</kw>
<kw name="Get Build Script Path" owner="GlobalPathsLibrary">
<msg time="2025-07-24T12:41:15.304393" level="INFO">${build} = /home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/multi_pub_sub/scripts/build_images.sh</msg>
<var>${build}</var>
<status status="PASS" start="2025-07-24T12:41:15.304302" elapsed="0.000111"/>
</kw>
<kw name="Get Network Name" owner="GlobalPathsLibrary">
<msg time="2025-07-24T12:41:15.304580" level="INFO">${net} = ecal_test_net</msg>
<var>${net}</var>
<status status="PASS" start="2025-07-24T12:41:15.304475" elapsed="0.000126"/>
</kw>
<kw name="Get Build Script Args" owner="GlobalPathsLibrary">
<msg time="2025-07-24T12:41:15.304746" level="INFO">${args} = ['multi_pub_sub']</msg>
<var>${args}</var>
<status status="PASS" start="2025-07-24T12:41:15.304667" elapsed="0.000096"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-07-24T12:41:15.304971" level="INFO">${BUILD_SCRIPT} = /home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/multi_pub_sub/scripts/build_images.sh</msg>
<arg>${BUILD_SCRIPT}</arg>
<arg>${build}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-07-24T12:41:15.304838" elapsed="0.000162"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-07-24T12:41:15.305181" level="INFO">${NETWORK} = ecal_test_net</msg>
<arg>${NETWORK}</arg>
<arg>${net}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-07-24T12:41:15.305070" elapsed="0.000138"/>
</kw>
<kw name="Get Test Description" owner="GlobalPathsLibrary">
<msg time="2025-07-24T12:41:15.305438" level="INFO">${desc} = This test validates eCAL communication in a scenario involving multiple publishers and subscribers.

Test Setup:
- Two publishers run in parallel and publish messages on the **same topic**.
• Publishe...</msg>
<var>${desc}</var>
<doc>Reads the *** Comments *** section from the .robot file and returns it as a string.</doc>
<status status="PASS" start="2025-07-24T12:41:15.305276" elapsed="0.000184"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-24T12:41:15.305647" level="INFO">This test validates eCAL communication in a scenario involving multiple publishers and subscribers.

Test Setup:
- Two publishers run in parallel and publish messages on the **same topic**.
• Publisher 1 sends messages containing the byte value **42**.
• Publisher 2 sends messages containing the byte value **43**.
- Two subscribers listen on that same topic and must receive all messages from both publishers.

Covered eCAL modes:
- local_shm
- local_udp
- (local_tcp)
- network_udp
- network_tcp

Goals:
- Ensure that eCAL correctly distributes messages from **multiple sources** to **multiple receivers**.
- Verify that **topic routing, message integrity, and delivery** work consistently across different transport modes.

Success Criteria:
- Each subscriber must receive **10 messages with value 42** and **10 with value 43**.
- If this condition is met, the subscriber exits with code **0**.
- If any expected messages are missing, the subscriber exits with code **1**.</msg>
<arg>${desc}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-24T12:41:15.305530" elapsed="0.000198"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>[SETUP] Building Docker image...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T12:41:15.305799" elapsed="0.000092"/>
</kw>
<kw name="Run Process" owner="Process">
<msg time="2025-07-24T12:41:15.306177" level="INFO">Starting process:
/home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/multi_pub_sub/scripts/build_images.sh multi_pub_sub</msg>
<msg time="2025-07-24T12:41:15.306613" level="INFO">Waiting for process to complete.</msg>
<msg time="2025-07-24T12:41:24.303202" level="INFO">Process completed.</msg>
<msg time="2025-07-24T12:41:24.303366" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<var>${result}</var>
<arg>${BUILD_SCRIPT}</arg>
<arg>@{args}</arg>
<doc>Runs a process and waits for it to complete.</doc>
<status status="PASS" start="2025-07-24T12:41:15.306000" elapsed="8.997391"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-24T12:41:24.304058" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${result.rc}</arg>
<arg>0</arg>
<arg>Failed to build Docker image!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-24T12:41:24.303568" elapsed="0.000545"/>
</kw>
<kw name="Create Docker Network" owner="MyDockerLibrary">
<arg>${NETWORK}</arg>
<status status="PASS" start="2025-07-24T12:41:24.304201" elapsed="0.006976"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-24T12:41:27.311512" level="INFO">Slept 3 seconds.</msg>
<arg>3s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-24T12:41:24.311289" elapsed="3.000343"/>
</kw>
<status status="PASS" start="2025-07-24T12:41:15.303912" elapsed="12.007802"/>
</kw>
<test id="s1-s2-t1" name="Multi Pub/Sub Local SHM Test" line="39">
<kw name="Run Multi Pub Sub Test Local">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T12:41:27.313619" level="INFO">${IMAGE} = multi_pub_sub_local_shm</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T12:41:27.313438" elapsed="0.000202"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T12:41:27.313829" level="INFO">${CONTAINER} = multi_locallocal_shm</msg>
<var>${CONTAINER}</var>
<arg>multi_local${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T12:41:27.313718" elapsed="0.000128"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Running local multi pub/sub test (all binarys in same Container) with ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T12:41:27.313915" elapsed="0.000124"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<arg>${IMAGE}</arg>
<arg>local_multi</arg>
<arg>${layer_tag}</arg>
<status status="PASS" start="2025-07-24T12:41:27.314132" elapsed="0.115282"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-24T12:41:45.430002" level="INFO">Slept 18 seconds.</msg>
<arg>18s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-24T12:41:27.429655" elapsed="18.000464"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-07-24T12:41:45.433102" level="INFO">${logs} = [Entrypoint] Starting local multi pub/sub test in mode local_shm
Shared memory monitoring is enabled (domain: ecal_mon - queue size: 1024)
[Publisher] Waiting for at least 2 subscriber(s) on topic: te...</msg>
<var>${logs}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-24T12:41:45.430288" elapsed="0.002840"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[CONTAINER LOG: All Local Binarys Multi Pub/Sub]\n${logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T12:41:45.433227" elapsed="0.000164"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-24T12:41:45.433658" level="INFO">
[CONTAINER LOG: All Local Binarys Multi Pub/Sub]
[Entrypoint] Starting local multi pub/sub test in mode local_shm
Shared memory monitoring is enabled (domain: ecal_mon - queue size: 1024)
[Publisher] Waiting for at least 2 subscriber(s) on topic: test_topic
Shared memory monitoring is enabled (domain: ecal_mon - queue size: 1024)
[Publisher] Waiting for at least 2 subscriber(s) on topic: test_topic
Shared memory monitoring is enabled (domain: ecal_mon - queue size: 1024)
[Subscriber 1] Waiting for messages...

Shared memory monitoring is enabled (domain: ecal_mon - queue size: 1024)
[Subscriber 2] Waiting for messages...
[Publisher] Found 2 subscriber(s). Proceeding to send messages.
[Publisher] Found 2 subscriber(s). Proceeding to send messages.
[Publisher 1] Started with mode=local_shm, topic=test_topic, node=multi_publisher, count=10, delay=1000ms
[Publisher 2] Started with mode=local_shm, topic=test_topic, node=multi_publisher, count=10, delay=1000ms

[Publisher 1] Finished sending messages.

[Publisher 2] Finished sending messages.
[Subscriber 1] [✗] Missing messages from one or both publishers.
[Subscriber 2] [✗] Missing messages from one or both publishers.



=== [Subscriber 2] Received Message Summary ===
PUB1 messages (42):--------------&gt; 10/10
PUB2 messages (43):-------------&gt; 0/10

=== [Subscriber 1] Received Message Summary ===
PUB1 messages (42):--------------&gt; 10/10
PUB2 messages (43):-------------&gt; 0/10
[Entrypoint] One or more subscribers failed!
</msg>
<arg>\n[CONTAINER LOG: All Local Binarys Multi Pub/Sub]\n${logs}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-24T12:41:45.433492" elapsed="0.000235"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-07-24T12:41:45.434988" level="INFO">${exit_code} = 1</msg>
<var>${exit_code}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-24T12:41:45.433813" elapsed="0.001198"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-24T12:41:45.435228" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg time="2025-07-24T12:41:45.435337" level="FAIL">Local Multi Pub/Sub Test test failed!: 1 != 0</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Local Multi Pub/Sub Test test failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="FAIL" start="2025-07-24T12:41:45.435095" elapsed="0.000372">Local Multi Pub/Sub Test test failed!: 1 != 0</status>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<status status="NOT RUN" start="2025-07-24T12:41:45.435588" elapsed="0.000020"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" start="2025-07-24T12:41:45.435675" elapsed="0.000014"/>
</kw>
<arg>local_shm</arg>
<status status="FAIL" start="2025-07-24T12:41:27.312232" elapsed="18.123587">Local Multi Pub/Sub Test test failed!: 1 != 0</status>
</kw>
<tag>multi_pub_sub_local_shm</tag>
<status status="FAIL" start="2025-07-24T12:41:27.311780" elapsed="18.124159">Local Multi Pub/Sub Test test failed!: 1 != 0</status>
</test>
<test id="s1-s2-t2" name="Multi Pub/Sub Local UDP Test" line="43">
<kw name="Run Multi Pub Sub Test Local">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T12:41:45.437072" level="INFO">${IMAGE} = multi_pub_sub_local_udp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T12:41:45.436941" elapsed="0.000151"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T12:41:45.437269" level="INFO">${CONTAINER} = multi_locallocal_udp</msg>
<var>${CONTAINER}</var>
<arg>multi_local${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T12:41:45.437163" elapsed="0.000123"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Running local multi pub/sub test (all binarys in same Container) with ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T12:41:45.437350" elapsed="0.000112"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<arg>${IMAGE}</arg>
<arg>local_multi</arg>
<arg>${layer_tag}</arg>
<status status="PASS" start="2025-07-24T12:41:45.437571" elapsed="0.113017"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-24T12:42:03.551145" level="INFO">Slept 18 seconds.</msg>
<arg>18s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-24T12:41:45.550807" elapsed="18.000452"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-07-24T12:42:03.554271" level="INFO">${logs} = [Entrypoint] Starting local multi pub/sub test in mode local_udp
[Publisher] Waiting for at least 2 subscriber(s) on topic: test_topic
[Publisher] Waiting for at least 2 subscriber(s) on topic: test_t...</msg>
<var>${logs}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-24T12:42:03.551426" elapsed="0.002871"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[CONTAINER LOG: All Local Binarys Multi Pub/Sub]\n${logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T12:42:03.554393" elapsed="0.000194"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-24T12:42:03.554826" level="INFO">
[CONTAINER LOG: All Local Binarys Multi Pub/Sub]
[Entrypoint] Starting local multi pub/sub test in mode local_udp
[Publisher] Waiting for at least 2 subscriber(s) on topic: test_topic
[Publisher] Waiting for at least 2 subscriber(s) on topic: test_topic
[Subscriber 1] Waiting for messages...

[Subscriber 2] Waiting for messages...
[Publisher] Found 2 subscriber(s). Proceeding to send messages.
[Publisher] Found 2 subscriber(s). Proceeding to send messages.
[Publisher 1] Started with mode=local_udp, topic=test_topic, node=multi_publisher, count=10, delay=1000ms
[Publisher 2] Started with mode=local_udp, topic=test_topic, node=multi_publisher, count=10, delay=1000ms

[Publisher 1] Finished sending messages.

[Publisher 2] Finished sending messages.

=== [Subscriber 1] Received Message Summary ===
PUB1 messages (42):--------------&gt; 10/10
PUB2 messages (43):-------------&gt; 10/10
[Subscriber 1] [✓] Received messages from both publishers.


=== [Subscriber 2] Received Message Summary ===
PUB1 messages (42):--------------&gt; 10/10
PUB2 messages (43):-------------&gt; 10/10
[Subscriber 2] [✓] Received messages from both publishers.

[Entrypoint] All subscribers received messages from both publishers.
</msg>
<arg>\n[CONTAINER LOG: All Local Binarys Multi Pub/Sub]\n${logs}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-24T12:42:03.554710" elapsed="0.000160"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-07-24T12:42:03.556024" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-24T12:42:03.554943" elapsed="0.001104"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-24T12:42:03.556259" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Local Multi Pub/Sub Test test failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-24T12:42:03.556125" elapsed="0.000178"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-24T12:42:03.556375" elapsed="0.005302"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-24T12:42:04.562024" level="INFO">Slept 1 second.</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-24T12:42:03.561773" elapsed="1.000358"/>
</kw>
<arg>local_udp</arg>
<status status="PASS" start="2025-07-24T12:41:45.436753" elapsed="19.125457"/>
</kw>
<tag>multi_pub_sub_local_udp</tag>
<status status="PASS" start="2025-07-24T12:41:45.436394" elapsed="19.125927"/>
</test>
<test id="s1-s2-t3" name="Multi Pub/Sub Network UDP Test" line="56">
<kw name="Run Multi Pub Sub Test Network">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T12:42:04.563840" level="INFO">${IMAGE} = multi_pub_sub_network_udp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T12:42:04.563693" elapsed="0.000168"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T12:42:04.564019" level="INFO">${TOPIC} = test_topic</msg>
<var>${TOPIC}</var>
<arg>test_topic</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T12:42:04.563934" elapsed="0.000102"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T12:42:04.564207" level="INFO">${PUB1} = pub1_network_udp</msg>
<var>${PUB1}</var>
<arg>pub1_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T12:42:04.564104" elapsed="0.000119"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T12:42:04.564383" level="INFO">${PUB2} = pub2_network_udp</msg>
<var>${PUB2}</var>
<arg>pub2_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T12:42:04.564286" elapsed="0.000113"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T12:42:04.564586" level="INFO">${SUB1} = sub1_network_udp</msg>
<var>${SUB1}</var>
<arg>sub1_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T12:42:04.564460" elapsed="0.000147"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T12:42:04.564774" level="INFO">${SUB2} = sub2_network_udp</msg>
<var>${SUB2}</var>
<arg>sub2_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T12:42:04.564674" elapsed="0.000115"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Starting multi pub/sub test with ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T12:42:04.564854" elapsed="0.000117"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${SUB1}</arg>
<arg>${IMAGE}</arg>
<arg>multi_subscriber</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-24T12:42:04.565068" elapsed="0.132630"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${SUB2}</arg>
<arg>${IMAGE}</arg>
<arg>multi_subscriber2</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-24T12:42:04.697963" elapsed="0.119032"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${PUB1}</arg>
<arg>${IMAGE}</arg>
<arg>multi_publisher</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-24T12:42:04.817189" elapsed="0.126768"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${PUB2}</arg>
<arg>${IMAGE}</arg>
<arg>multi_publisher2</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-24T12:42:04.944143" elapsed="0.120279"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-24T12:42:23.064952" level="INFO">Slept 18 seconds.</msg>
<arg>18s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-24T12:42:05.064637" elapsed="18.000432"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-07-24T12:42:23.068132" level="INFO">${log1} = [Entrypoint] Starting multi_subscriber in mode network_udp
[Subscriber 1] Waiting for messages...


=== [Subscriber 1] Received Message Summary ===
PUB1 messages (42):--------------&gt; 10/10
PUB2 messag...</msg>
<var>${log1}</var>
<arg>${SUB1}</arg>
<status status="PASS" start="2025-07-24T12:42:23.065242" elapsed="0.002918"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[CONTAINER LOG: SUBSCRIBER 1]\n${log1}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T12:42:23.068252" elapsed="0.000160"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-24T12:42:23.068662" level="INFO">
[CONTAINER LOG: SUBSCRIBER 1]
[Entrypoint] Starting multi_subscriber in mode network_udp
[Subscriber 1] Waiting for messages...


=== [Subscriber 1] Received Message Summary ===
PUB1 messages (42):--------------&gt; 10/10
PUB2 messages (43):-------------&gt; 10/10
[Subscriber 1] [✓] Received messages from both publishers.

</msg>
<arg>\n[CONTAINER LOG: SUBSCRIBER 1]\n${log1}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-24T12:42:23.068519" elapsed="0.000180"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-07-24T12:42:23.070794" level="INFO">${log2} = [Entrypoint] Starting multi_subscriber2 in mode network_udp
[Subscriber 2] Waiting for messages...

=== [Subscriber 2] Received Message Summary ===
PUB1 messages (42):--------------&gt; 10/10
PUB2 messag...</msg>
<var>${log2}</var>
<arg>${SUB2}</arg>
<status status="PASS" start="2025-07-24T12:42:23.068769" elapsed="0.002050"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[CONTAINER LOG: SUBSCRIBER 2]\n${log2}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T12:42:23.070901" elapsed="0.000136"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-24T12:42:23.071253" level="INFO">
[CONTAINER LOG: SUBSCRIBER 1]
[Entrypoint] Starting multi_subscriber2 in mode network_udp
[Subscriber 2] Waiting for messages...

=== [Subscriber 2] Received Message Summary ===
PUB1 messages (42):--------------&gt; 10/10
PUB2 messages (43):-------------&gt; 10/10
[Subscriber 2] [✓] Received messages from both publishers.

</msg>
<arg>\n[CONTAINER LOG: SUBSCRIBER 1]\n${log2}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-24T12:42:23.071139" elapsed="0.000150"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${SUB1}</arg>
<status status="PASS" start="2025-07-24T12:42:23.071356" elapsed="0.001006"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${SUB2}</arg>
<status status="PASS" start="2025-07-24T12:42:23.072448" elapsed="0.000987"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${PUB1}</arg>
<status status="PASS" start="2025-07-24T12:42:23.073520" elapsed="0.000947"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${PUB2}</arg>
<status status="PASS" start="2025-07-24T12:42:23.074575" elapsed="0.001044"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-07-24T12:42:23.076509" level="INFO">${exit1} = 0</msg>
<var>${exit1}</var>
<arg>${SUB1}</arg>
<status status="PASS" start="2025-07-24T12:42:23.075704" elapsed="0.000829"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-07-24T12:42:23.077445" level="INFO">${exit2} = 0</msg>
<var>${exit2}</var>
<arg>${SUB2}</arg>
<status status="PASS" start="2025-07-24T12:42:23.076630" elapsed="0.000837"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-24T12:42:23.077716" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit1}</arg>
<arg>0</arg>
<arg>Subscriber 1 failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-24T12:42:23.077577" elapsed="0.000181"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-24T12:42:23.077940" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit2}</arg>
<arg>0</arg>
<arg>Subscriber 2 failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-24T12:42:23.077834" elapsed="0.000143"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Multi Pub/Sub Test ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-07-24T12:42:23.078045" elapsed="0.000140"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${SUB1}</arg>
<status status="PASS" start="2025-07-24T12:42:23.078269" elapsed="0.004799"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${SUB2}</arg>
<status status="PASS" start="2025-07-24T12:42:23.083153" elapsed="0.005126"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${PUB1}</arg>
<status status="PASS" start="2025-07-24T12:42:23.088365" elapsed="0.005164"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${PUB2}</arg>
<status status="PASS" start="2025-07-24T12:42:23.093638" elapsed="0.004796"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-24T12:42:24.098797" level="INFO">Slept 1 second.</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-24T12:42:23.098520" elapsed="1.000405"/>
</kw>
<arg>network_udp</arg>
<arg>network</arg>
<status status="PASS" start="2025-07-24T12:42:04.563418" elapsed="19.535597"/>
</kw>
<tag>multi_pub_sub_network_udp</tag>
<status status="PASS" start="2025-07-24T12:42:04.562965" elapsed="19.536165"/>
</test>
<test id="s1-s2-t4" name="Multi Pub/Sub Network TCP Test" line="60">
<kw name="Run Multi Pub Sub Test Network">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T12:42:24.101208" level="INFO">${IMAGE} = multi_pub_sub_network_tcp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T12:42:24.101061" elapsed="0.000168"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T12:42:24.101382" level="INFO">${TOPIC} = test_topic</msg>
<var>${TOPIC}</var>
<arg>test_topic</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T12:42:24.101302" elapsed="0.000096"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T12:42:24.101591" level="INFO">${PUB1} = pub1_network_tcp</msg>
<var>${PUB1}</var>
<arg>pub1_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T12:42:24.101461" elapsed="0.000148"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T12:42:24.101848" level="INFO">${PUB2} = pub2_network_tcp</msg>
<var>${PUB2}</var>
<arg>pub2_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T12:42:24.101738" elapsed="0.000126"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T12:42:24.102027" level="INFO">${SUB1} = sub1_network_tcp</msg>
<var>${SUB1}</var>
<arg>sub1_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T12:42:24.101929" elapsed="0.000114"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T12:42:24.102202" level="INFO">${SUB2} = sub2_network_tcp</msg>
<var>${SUB2}</var>
<arg>sub2_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T12:42:24.102105" elapsed="0.000113"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Starting multi pub/sub test with ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T12:42:24.102280" elapsed="0.000119"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${SUB1}</arg>
<arg>${IMAGE}</arg>
<arg>multi_subscriber</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-24T12:42:24.102487" elapsed="0.124917"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${SUB2}</arg>
<arg>${IMAGE}</arg>
<arg>multi_subscriber2</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-24T12:42:24.227603" elapsed="0.129053"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${PUB1}</arg>
<arg>${IMAGE}</arg>
<arg>multi_publisher</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-24T12:42:24.356818" elapsed="0.117999"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${PUB2}</arg>
<arg>${IMAGE}</arg>
<arg>multi_publisher2</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-24T12:42:24.475039" elapsed="0.121435"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-24T12:42:42.597004" level="INFO">Slept 18 seconds.</msg>
<arg>18s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-24T12:42:24.596687" elapsed="18.000430"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-07-24T12:42:42.600084" level="INFO">${log1} = [Entrypoint] Starting multi_subscriber in mode network_tcp
[Subscriber 1] Waiting for messages...

1753360957381 ms | 9da0a004325f | multi_subscriber | 7 | error | CTCPReaderLayer - TCPPubSub (Error) ...</msg>
<var>${log1}</var>
<arg>${SUB1}</arg>
<status status="PASS" start="2025-07-24T12:42:42.597286" elapsed="0.002822"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[CONTAINER LOG: SUBSCRIBER 1]\n${log1}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T12:42:42.600201" elapsed="0.000173"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-24T12:42:42.600659" level="INFO">
[CONTAINER LOG: SUBSCRIBER 1]
[Entrypoint] Starting multi_subscriber in mode network_tcp
[Subscriber 1] Waiting for messages...

1753360957381 ms | 9da0a004325f | multi_subscriber | 7 | error | CTCPReaderLayer - TCPPubSub (Error) -SubscriberSession 172.18.0.2:54116-&gt;ef5a1b6427bc:33869: Error reading header length: End of file
1753360957381 ms | 9da0a004325f | multi_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:40298: Failed connecting to publisher ef5a1b6427bc:33869: Connection refused
1753360957382 ms | 9da0a004325f | multi_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:40302: Failed connecting to publisher ef5a1b6427bc:33869: Connection refused
1753360957382 ms | 9da0a004325f | multi_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:40310: Failed connecting to publisher ef5a1b6427bc:33869: Connection refused
1753360957383 ms | 9da0a004325f | multi_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:40316: Failed connecting to publisher ef5a1b6427bc:33869: Connection refused
1753360957383 ms | 9da0a004325f | multi_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:40330: Failed connecting to publisher ef5a1b6427bc:33869: Connection refused
1753360957401 ms | 9da0a004325f | multi_subscriber | 7 | error | CTCPReaderLayer - TCPPubSub (Error) -SubscriberSession 172.18.0.2:46560-&gt;0a8996e7d835:38541: Error reading header length: End of file
1753360957402 ms | 9da0a004325f | multi_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:58872: Failed connecting to publisher 0a8996e7d835:38541: Connection refused
1753360957403 ms | 9da0a004325f | multi_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:58888: Failed connecting to publisher 0a8996e7d835:38541: Connection refused
1753360957404 ms | 9da0a004325f | multi_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:58896: Failed connecting to publisher 0a8996e7d835:38541: Connection refused
1753360957404 ms | 9da0a004325f | multi_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:58902: Failed connecting to publisher 0a8996e7d835:38541: Connection refused
1753360957405 ms | 9da0a004325f | multi_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:58904: Failed connecting to publisher 0a8996e7d835:38541: Connection refused

=== [Subscriber 1] Received Message Summary ===
PUB1 messages (42):--------------&gt; 10/10
PUB2 messages (43):-------------&gt; 10/10
[Subscriber 1] [✓] Received messages from both publishers.

</msg>
<arg>\n[CONTAINER LOG: SUBSCRIBER 1]\n${log1}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-24T12:42:42.600484" elapsed="0.000264"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-07-24T12:42:42.603256" level="INFO">${log2} = [Entrypoint] Starting multi_subscriber2 in mode network_tcp
[Subscriber 2] Waiting for messages...
1753360957381 ms | 6380c2ebab3e | multi_subscriber | 7 | error | CTCPReaderLayer - TCPPubSub (Error) ...</msg>
<var>${log2}</var>
<arg>${SUB2}</arg>
<status status="PASS" start="2025-07-24T12:42:42.600850" elapsed="0.002439"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[CONTAINER LOG: SUBSCRIBER 2]\n${log2}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T12:42:42.603391" elapsed="0.000180"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-24T12:42:42.603840" level="INFO">
[CONTAINER LOG: SUBSCRIBER 1]
[Entrypoint] Starting multi_subscriber2 in mode network_tcp
[Subscriber 2] Waiting for messages...
1753360957381 ms | 6380c2ebab3e | multi_subscriber | 7 | error | CTCPReaderLayer - TCPPubSub (Error) -SubscriberSession 172.18.0.3:39254-&gt;ef5a1b6427bc:33869: Error reading header length: End of file
1753360957381 ms | 6380c2ebab3e | multi_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.3:33312: Failed connecting to publisher ef5a1b6427bc:33869: Connection refused
1753360957382 ms | 6380c2ebab3e | multi_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.3:33314: Failed connecting to publisher ef5a1b6427bc:33869: Connection refused
1753360957382 ms | 6380c2ebab3e | multi_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.3:33320: Failed connecting to publisher ef5a1b6427bc:33869: Connection refused
1753360957383 ms | 6380c2ebab3e | multi_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.3:33328: Failed connecting to publisher ef5a1b6427bc:33869: Connection refused
1753360957383 ms | 6380c2ebab3e | multi_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.3:33342: Failed connecting to publisher ef5a1b6427bc:33869: Connection refused
1753360957401 ms | 6380c2ebab3e | multi_subscriber | 7 | error | CTCPReaderLayer - TCPPubSub (Error) -SubscriberSession 172.18.0.3:46602-&gt;0a8996e7d835:38541: Error reading header length: End of file
1753360957402 ms | 6380c2ebab3e | multi_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.3:33510: Failed connecting to publisher 0a8996e7d835:38541: Connection refused
1753360957404 ms | 6380c2ebab3e | multi_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.3:33522: Failed connecting to publisher 0a8996e7d835:38541: Connection refused
1753360957405 ms | 6380c2ebab3e | multi_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.3:33528: Failed connecting to publisher 0a8996e7d835:38541: Connection refused
1753360957405 ms | 6380c2ebab3e | multi_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.3:33544: Failed connecting to publisher 0a8996e7d835:38541: Connection refused
1753360957406 ms | 6380c2ebab3e | multi_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.3:33550: Failed connecting to publisher 0a8996e7d835:38541: Connection refused

=== [Subscriber 2] Received Message Summary ===
PUB1 messages (42):--------------&gt; 10/10
PUB2 messages (43):-------------&gt; 10/10
[Subscriber 2] [✓] Received messages from both publishers.

</msg>
<arg>\n[CONTAINER LOG: SUBSCRIBER 1]\n${log2}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-24T12:42:42.603688" elapsed="0.000281"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${SUB1}</arg>
<status status="PASS" start="2025-07-24T12:42:42.604049" elapsed="0.001041"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${SUB2}</arg>
<status status="PASS" start="2025-07-24T12:42:42.605170" elapsed="0.000962"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${PUB1}</arg>
<status status="PASS" start="2025-07-24T12:42:42.606212" elapsed="0.000935"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${PUB2}</arg>
<status status="PASS" start="2025-07-24T12:42:42.607228" elapsed="0.000954"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-07-24T12:42:42.609145" level="INFO">${exit1} = 0</msg>
<var>${exit1}</var>
<arg>${SUB1}</arg>
<status status="PASS" start="2025-07-24T12:42:42.608266" elapsed="0.000902"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-07-24T12:42:42.610208" level="INFO">${exit2} = 0</msg>
<var>${exit2}</var>
<arg>${SUB2}</arg>
<status status="PASS" start="2025-07-24T12:42:42.609248" elapsed="0.000984"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-24T12:42:42.610446" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit1}</arg>
<arg>0</arg>
<arg>Subscriber 1 failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-24T12:42:42.610313" elapsed="0.000190"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-24T12:42:42.610738" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit2}</arg>
<arg>0</arg>
<arg>Subscriber 2 failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-24T12:42:42.610621" elapsed="0.000157"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Multi Pub/Sub Test ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-07-24T12:42:42.610850" elapsed="0.000135"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${SUB1}</arg>
<status status="PASS" start="2025-07-24T12:42:42.611077" elapsed="0.004659"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${SUB2}</arg>
<status status="PASS" start="2025-07-24T12:42:42.615819" elapsed="0.004690"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${PUB1}</arg>
<status status="PASS" start="2025-07-24T12:42:42.620619" elapsed="0.004731"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${PUB2}</arg>
<status status="PASS" start="2025-07-24T12:42:42.625434" elapsed="0.004967"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-24T12:42:43.630737" level="INFO">Slept 1 second.</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-24T12:42:42.630485" elapsed="1.000358"/>
</kw>
<arg>network_tcp</arg>
<arg>network</arg>
<status status="PASS" start="2025-07-24T12:42:24.100818" elapsed="19.530104"/>
</kw>
<tag>multi_pub_sub_network_tcp</tag>
<status status="PASS" start="2025-07-24T12:42:24.100359" elapsed="19.530673"/>
</test>
<status status="FAIL" start="2025-07-24T12:41:15.301232" elapsed="88.331040"/>
</suite>
<suite id="s1-s3" name="Network Crash" source="/home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/network_crash/robottests/network_crash.robot">
<kw name="Init Test Context" type="SETUP">
<kw name="Set Test Context" owner="GlobalPathsLibrary">
<arg>network_crash</arg>
<arg>network_crash</arg>
<doc>Sets the test folder and tag prefix if it's a valid test case.
The folder must exist under integration_tests/ and contain typical test structure.</doc>
<status status="PASS" start="2025-07-24T12:42:43.635628" elapsed="0.000139"/>
</kw>
<kw name="Get Build Script Path" owner="GlobalPathsLibrary">
<msg time="2025-07-24T12:42:43.635935" level="INFO">${build} = /home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/network_crash/scripts/build_images.sh</msg>
<var>${build}</var>
<status status="PASS" start="2025-07-24T12:42:43.635844" elapsed="0.000110"/>
</kw>
<kw name="Get Network Name" owner="GlobalPathsLibrary">
<msg time="2025-07-24T12:42:43.636100" level="INFO">${net} = ecal_test_net</msg>
<var>${net}</var>
<status status="PASS" start="2025-07-24T12:42:43.636017" elapsed="0.000100"/>
</kw>
<kw name="Get Build Script Args" owner="GlobalPathsLibrary">
<msg time="2025-07-24T12:42:43.636251" level="INFO">${args} = ['network_crash']</msg>
<var>${args}</var>
<status status="PASS" start="2025-07-24T12:42:43.636177" elapsed="0.000090"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-07-24T12:42:43.636465" level="INFO">${BUILD_SCRIPT} = /home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/network_crash/scripts/build_images.sh</msg>
<arg>${BUILD_SCRIPT}</arg>
<arg>${build}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-07-24T12:42:43.636337" elapsed="0.000157"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-07-24T12:42:43.636774" level="INFO">${NETWORK} = ecal_test_net</msg>
<arg>${NETWORK}</arg>
<arg>${net}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-07-24T12:42:43.636651" elapsed="0.000151"/>
</kw>
<kw name="Get Test Description" owner="GlobalPathsLibrary">
<msg time="2025-07-24T12:42:43.637041" level="INFO">${desc} = Test Objective:
Verify that local UDP-based communication remains functional even if a separate network UDP publisher is disconnected —
simulating a network failure scenario such as a cable unplug.

T...</msg>
<var>${desc}</var>
<doc>Reads the *** Comments *** section from the .robot file and returns it as a string.</doc>
<status status="PASS" start="2025-07-24T12:42:43.636869" elapsed="0.000194"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-24T12:42:43.637218" level="INFO">Test Objective:
Verify that local UDP-based communication remains functional even if a separate network UDP publisher is disconnected —
simulating a network failure scenario such as a cable unplug.

Test Context:
This test validates the robustness of eCAL's UDP transport layer under fault conditions by ensuring that
local communication is not affected by network-layer interruptions.

Test Scenario:
1. A local UDP subscriber and two local UDP publishers run in the **same container** using eCAL's local mode.
- Publisher 1 sends payloads with value 42 from the beginning.
- Publisher 2 sends value 44, but only **after the network publisher is disconnected** (simulated delay).

2. A network UDP publisher runs in a **separate container**, using eCAL network mode and sends value 43.

3. All publishers run in parallel for a defined period (publisher 2 starts delayed after ~7s).

4. The test then **disconnects** the network UDP publisher from the Docker network.

Success Criteria:
- The subscriber receives:
• Messages with value 42 throughout the test.
• Messages with value 43 only **before** the disconnection.
• Messages with value 44 after the network crash (i.e., from local UDP Publisher 2).
- The subscriber container exits with code 0.
- The log confirms all expected messages have been received.

Note:
This test ensures **fault isolation** between local and network layers in eCAL middleware.</msg>
<arg>${desc}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-24T12:42:43.637133" elapsed="0.000122"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>[SETUP] Building image...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T12:42:43.637317" elapsed="0.000085"/>
</kw>
<kw name="Run Process" owner="Process">
<msg time="2025-07-24T12:42:43.637689" level="INFO">Starting process:
/home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/network_crash/scripts/build_images.sh network_crash</msg>
<msg time="2025-07-24T12:42:43.638079" level="INFO">Waiting for process to complete.</msg>
<msg time="2025-07-24T12:42:52.244346" level="INFO">Process completed.</msg>
<msg time="2025-07-24T12:42:52.244506" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<var>${result}</var>
<arg>${BUILD_SCRIPT}</arg>
<arg>@{args}</arg>
<doc>Runs a process and waits for it to complete.</doc>
<status status="PASS" start="2025-07-24T12:42:43.637507" elapsed="8.607025"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-24T12:42:52.245196" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${result.rc}</arg>
<arg>0</arg>
<arg>Docker image build failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-24T12:42:52.244713" elapsed="0.000533"/>
</kw>
<kw name="Create Docker Network" owner="MyDockerLibrary">
<arg>${NETWORK}</arg>
<status status="PASS" start="2025-07-24T12:42:52.245329" elapsed="0.006753"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-24T12:42:54.252443" level="INFO">Slept 2 seconds.</msg>
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-24T12:42:52.252192" elapsed="2.000386"/>
</kw>
<status status="PASS" start="2025-07-24T12:42:43.635451" elapsed="10.617214"/>
</kw>
<test id="s1-s3-t1" name="Local communication survives Network crash" line="45">
<kw name="Run Network Crash Survival Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T12:42:54.253850" level="INFO">${IMAGE} = network_crash_local_udp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_local_udp</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T12:42:54.253706" elapsed="0.000164"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T12:42:54.254026" level="INFO">${TOPIC} = test_topic</msg>
<var>${TOPIC}</var>
<arg>test_topic</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T12:42:54.253945" elapsed="0.000098"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T12:42:54.254186" level="INFO">${NET_PUB} = udp_network_pub</msg>
<var>${NET_PUB}</var>
<arg>udp_network_pub</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T12:42:54.254109" elapsed="0.000094"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T12:42:54.254341" level="INFO">${LOCAL_ALL} = udp_local_all</msg>
<var>${LOCAL_ALL}</var>
<arg>udp_local_all</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T12:42:54.254267" elapsed="0.000089"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n\n[INFO] Starting "LOCAL UDP (PUB1 + SUB + PUB3)" in one container and "NETWORK UDP (PUB2)" separately...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T12:42:54.254418" elapsed="0.000104"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${LOCAL_ALL}</arg>
<arg>${IMAGE}</arg>
<arg>udp_local_all</arg>
<arg>${TOPIC}</arg>
<arg>${LOCAL_ALL}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-24T12:42:54.254641" elapsed="0.123689"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${NET_PUB}</arg>
<arg>${IMAGE}</arg>
<arg>udp_network_pub</arg>
<arg>${TOPIC}</arg>
<arg>${NET_PUB}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-24T12:42:54.378563" elapsed="0.116917"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Letting PUB1 and PUB2 run in parallel for 7s...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T12:42:54.495703" elapsed="0.000182"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-24T12:43:01.496273" level="INFO">Slept 7 seconds.</msg>
<arg>7s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-24T12:42:54.495995" elapsed="7.000393"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[SIMULATION] Disconnecting NETWORK UDP Publisher..</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T12:43:01.496591" elapsed="0.000178"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-07-24T12:43:01.499405" level="INFO">${log_net} = [Entrypoint] Starting network UDP publisher...
[Publisher] Waiting for at least 1 subscriber(s) on topic: test_topic
[Publisher] Found 1 subscriber(s). Proceeding to send messages.
</msg>
<var>${log_net}</var>
<arg>${NET_PUB}</arg>
<status status="PASS" start="2025-07-24T12:43:01.496880" elapsed="0.002550"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-24T12:43:01.499656" level="INFO">
[LOG: NETWORK UDP PUB2 CONTAINER]
[Entrypoint] Starting network UDP publisher...
[Publisher] Waiting for at least 1 subscriber(s) on topic: test_topic
[Publisher] Found 1 subscriber(s). Proceeding to send messages.
</msg>
<arg>\n[LOG: NETWORK UDP PUB2 CONTAINER]\n${log_net}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-24T12:43:01.499519" elapsed="0.000223"/>
</kw>
<kw name="Disconnect Container From Network">
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[SIMULATION] Disconnecting ${container} from ${network} (simulate network failure)...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T12:43:01.500122" elapsed="0.000144"/>
</kw>
<kw name="Run Process" owner="Process">
<msg time="2025-07-24T12:43:01.500590" level="INFO">Starting process:
docker network disconnect ecal_test_net udp_network_pub</msg>
<msg time="2025-07-24T12:43:01.501234" level="INFO">Waiting for process to complete.</msg>
<msg time="2025-07-24T12:43:01.543764" level="INFO">Process completed.</msg>
<msg time="2025-07-24T12:43:01.544033" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<var>${result}</var>
<arg>docker</arg>
<arg>network</arg>
<arg>disconnect</arg>
<arg>${network}</arg>
<arg>${container}</arg>
<doc>Runs a process and waits for it to complete.</doc>
<status status="PASS" start="2025-07-24T12:43:01.500381" elapsed="0.043690"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-24T12:43:01.545038" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${result.rc}</arg>
<arg>0</arg>
<arg>Failed to disconnect ${container} from ${network}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-24T12:43:01.544278" elapsed="0.000830"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-24T12:43:02.545514" level="INFO">Slept 1 second.</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-24T12:43:01.545233" elapsed="1.000422"/>
</kw>
<arg>${NET_PUB}</arg>
<arg>${NETWORK}</arg>
<status status="PASS" start="2025-07-24T12:43:01.499877" elapsed="1.045861"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-24T12:43:35.546139" level="INFO">Slept 33 seconds.</msg>
<arg>33s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-24T12:43:02.545862" elapsed="33.000381"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-07-24T12:43:35.549258" level="INFO">${log_local} = [Entrypoint] Starting UDP subscriber, then UDP publisher...
[Publisher] Waiting for at least 1 subscriber(s) on topic: test_topic
[Publisher] Found 1 subscriber(s). Proceeding to send messages.
[Subsc...</msg>
<var>${log_local}</var>
<arg>${LOCAL_ALL}</arg>
<status status="PASS" start="2025-07-24T12:43:35.546392" elapsed="0.002892"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[LOG: LOCAL UDP PUB + SUB + PUB3 CONTAINER]\n${log_local}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T12:43:35.549380" elapsed="0.000193"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-24T12:43:35.549843" level="INFO">
[LOG: LOCAL UDP PUB + SUB + PUB3 CONTAINER]
[Entrypoint] Starting UDP subscriber, then UDP publisher...
[Publisher] Waiting for at least 1 subscriber(s) on topic: test_topic
[Publisher] Found 1 subscriber(s). Proceeding to send messages.
[Subscriber] Listening on topic 'test_topic'...
[Subscriber] Received: 42
[Subscriber] Received: 43
[Subscriber] Received: 42
[Subscriber] Received: 43
[Subscriber] Received: 42
[Subscriber] Received: 43
[Subscriber] Received: 42
[Subscriber] Received: 43
[Subscriber] Received: 42
[Subscriber] Received: 43
[Subscriber] Received: 42
[Subscriber] Received: 42
[Subscriber] Received: 42
[Subscriber] Received: 42
[Entrypoint] Starting delayed LOCAL UDP Publisher 2 after network failure...
[Publisher] Waiting for at least 1 subscriber(s) on topic: test_topic
[Publisher] Found 1 subscriber(s). Proceeding to send messages.
[Subscriber] Received: 42
[Subscriber] Received: 42
[Subscriber] Received: 44
[Subscriber] Received: 42
[Subscriber] Received: 44
[Subscriber] Received: 42
[Subscriber] Received: 44
[Subscriber] Received: 42
[Subscriber] Received: 44
[Subscriber] Received: 42
[Subscriber] Received: 44
[Subscriber] Received: 42
[Subscriber] Received: 44
[Subscriber] Received: 42
[Subscriber] Received: 44
[Subscriber] Received: 42
[Subscriber] Received: 44
[Subscriber] Received: 42
[Subscriber] Received: 44
[Subscriber] Received: 42
[Subscriber] Received: 44
[Subscriber] Received: 42
[Subscriber] Received: 44
[Subscriber] Received: 42
[Subscriber] Received: 44
[Subscriber] Received: 42
[Subscriber] Received: 44
[Subscriber] Received: 42
[Subscriber] Received: 44
[Subscriber] Received: 42
[Subscriber] Received: 44

=== Message Summary ===

Local UDP PUB1 messages (42):--------------&gt; 25/25
Network UDP PUB2 messages (43):-------------&gt; 5/25
Local UDP PUB3 messages after crash (44):--&gt; 15/15


[✓] All expected messages received: local before and after crash, and network.
[Entrypoint] Subscriber exited with code 0
</msg>
<arg>\n[LOG: LOCAL UDP PUB + SUB + PUB3 CONTAINER]\n${log_local}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-24T12:43:35.549684" elapsed="0.000242"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${LOCAL_ALL}</arg>
<status status="PASS" start="2025-07-24T12:43:35.550031" elapsed="0.001092"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-07-24T12:43:35.552122" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>${LOCAL_ALL}</arg>
<status status="PASS" start="2025-07-24T12:43:35.551206" elapsed="0.000940"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-24T12:43:35.552366" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>LOCAL container (PUB + SUB + PUB3) failed unexpectedly!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-24T12:43:35.552230" elapsed="0.000179"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Network Crash Test with Local Recovery Publisher</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-07-24T12:43:35.552485" elapsed="0.000135"/>
</kw>
<status status="PASS" start="2025-07-24T12:42:54.253225" elapsed="41.299473"/>
</kw>
<tag>network_crash_test</tag>
<status status="PASS" start="2025-07-24T12:42:54.252726" elapsed="41.300080"/>
</test>
<status status="PASS" start="2025-07-24T12:42:43.632916" elapsed="51.920476"/>
</suite>
<suite id="s1-s4" name="Pub Crash" source="/home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/pub_crash/robottests/pub_crash.robot">
<kw name="Init Test Context" type="SETUP">
<kw name="Set Test Context" owner="GlobalPathsLibrary">
<arg>pub_crash</arg>
<arg>pub_crash</arg>
<doc>Sets the test folder and tag prefix if it's a valid test case.
The folder must exist under integration_tests/ and contain typical test structure.</doc>
<status status="PASS" start="2025-07-24T12:43:35.556574" elapsed="0.000129"/>
</kw>
<kw name="Get Build Script Path" owner="GlobalPathsLibrary">
<msg time="2025-07-24T12:43:35.556867" level="INFO">${build} = /home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/pub_crash/scripts/build_images.sh</msg>
<var>${build}</var>
<status status="PASS" start="2025-07-24T12:43:35.556780" elapsed="0.000106"/>
</kw>
<kw name="Get Network Name" owner="GlobalPathsLibrary">
<msg time="2025-07-24T12:43:35.557022" level="INFO">${net} = ecal_test_net</msg>
<var>${net}</var>
<status status="PASS" start="2025-07-24T12:43:35.556948" elapsed="0.000091"/>
</kw>
<kw name="Get Build Script Args" owner="GlobalPathsLibrary">
<msg time="2025-07-24T12:43:35.557172" level="INFO">${args} = ['pub_crash']</msg>
<var>${args}</var>
<status status="PASS" start="2025-07-24T12:43:35.557098" elapsed="0.000090"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-07-24T12:43:35.557431" level="INFO">${BUILD_SCRIPT} = /home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/pub_crash/scripts/build_images.sh</msg>
<arg>${BUILD_SCRIPT}</arg>
<arg>${build}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-07-24T12:43:35.557299" elapsed="0.000161"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-07-24T12:43:35.557663" level="INFO">${NETWORK} = ecal_test_net</msg>
<arg>${NETWORK}</arg>
<arg>${net}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-07-24T12:43:35.557531" elapsed="0.000158"/>
</kw>
<kw name="Get Test Description" owner="GlobalPathsLibrary">
<msg time="2025-07-24T12:43:35.557900" level="INFO">${desc} = Test Objective:
Ensure that communication to the subscriber continues even if one publisher crashes.

Test Scenario:
- Two publishers are started:
1. crash_publisher: sends a few messages (value 42) a...</msg>
<var>${desc}</var>
<doc>Reads the *** Comments *** section from the .robot file and returns it as a string.</doc>
<status status="PASS" start="2025-07-24T12:43:35.557754" elapsed="0.000166"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-24T12:43:35.558070" level="INFO">Test Objective:
Ensure that communication to the subscriber continues even if one publisher crashes.

Test Scenario:
- Two publishers are started:
1. crash_publisher: sends a few messages (value 42) and then crashes.
2. test_publisher: continuously sends messages (value 43).
- One subscriber receives data from both publishers.
- A monitoring process tracks process appearance.

Success Criteria:
- Subscriber receives enough messages with value 43 after crash_publisher crashes.
- Subscriber exits with code 0, indicating continued communication.
- All containers terminate cleanly.</msg>
<arg>${desc}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-24T12:43:35.557988" elapsed="0.000113"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>[SETUP] Building Docker image...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T12:43:35.558163" elapsed="0.000085"/>
</kw>
<kw name="Run Process" owner="Process">
<msg time="2025-07-24T12:43:35.558522" level="INFO">Starting process:
/home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/pub_crash/scripts/build_images.sh pub_crash</msg>
<msg time="2025-07-24T12:43:35.558919" level="INFO">Waiting for process to complete.</msg>
<msg time="2025-07-24T12:43:44.389928" level="INFO">Process completed.</msg>
<msg time="2025-07-24T12:43:44.390091" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<var>${result}</var>
<arg>${BUILD_SCRIPT}</arg>
<arg>@{args}</arg>
<doc>Runs a process and waits for it to complete.</doc>
<status status="PASS" start="2025-07-24T12:43:35.558355" elapsed="8.831762"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-24T12:43:44.390781" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${result.rc}</arg>
<arg>0</arg>
<arg>Docker build failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-24T12:43:44.390265" elapsed="0.000566"/>
</kw>
<kw name="Create Docker Network" owner="MyDockerLibrary">
<arg>${NETWORK}</arg>
<status status="PASS" start="2025-07-24T12:43:44.390916" elapsed="0.006899"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-24T12:43:47.398148" level="INFO">Slept 3 seconds.</msg>
<arg>3s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-24T12:43:44.397923" elapsed="3.000338"/>
</kw>
<status status="PASS" start="2025-07-24T12:43:35.556413" elapsed="11.841940"/>
</kw>
<test id="s1-s4-t1" name="Communication Continues After Publisher Crash (UDP)" line="30">
<kw name="Run Network Communication Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T12:43:47.399748" level="INFO">${IMAGE} = pub_crash_network_udp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T12:43:47.399596" elapsed="0.000172"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T12:43:47.399925" level="INFO">${TOPIC} = test_topic</msg>
<var>${TOPIC}</var>
<arg>test_topic</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T12:43:47.399842" elapsed="0.000100"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T12:43:47.400110" level="INFO">${CRASH_PUB} = crash_pub_network_udp</msg>
<var>${CRASH_PUB}</var>
<arg>crash_pub_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T12:43:47.400008" elapsed="0.000119"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T12:43:47.400288" level="INFO">${TEST_PUB} = test_pub_network_udp</msg>
<var>${TEST_PUB}</var>
<arg>test_pub_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T12:43:47.400190" elapsed="0.000115"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T12:43:47.400468" level="INFO">${SUB_NAME} = sub_network_udp</msg>
<var>${SUB_NAME}</var>
<arg>sub_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T12:43:47.400369" elapsed="0.000115"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Starting communication continuity test with ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T12:43:47.400564" elapsed="0.000133"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${SUB_NAME}</arg>
<arg>${IMAGE}</arg>
<arg>subscriber</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-24T12:43:47.400795" elapsed="0.129367"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${CRASH_PUB}</arg>
<arg>${IMAGE}</arg>
<arg>crash_publisher</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-24T12:43:47.530369" elapsed="0.120196"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${TEST_PUB}</arg>
<arg>${IMAGE}</arg>
<arg>test_publisher</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${TEST_PUB}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-24T12:43:47.650760" elapsed="0.121225"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-24T12:44:22.772461" level="INFO">Slept 35 seconds.</msg>
<arg>35s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-24T12:43:47.772155" elapsed="35.000451"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-07-24T12:44:22.775705" level="INFO">${sub_logs} = [Entrypoint] Starting crash subscriber in mode network_udp

[Subscriber] Registering callback and waiting for messages...

[Subscriber] Received value: 42
[Subscriber] Received value: 43
[Subscriber] ...</msg>
<var>${sub_logs}</var>
<arg>${SUB_NAME}</arg>
<status status="PASS" start="2025-07-24T12:44:22.772773" elapsed="0.002960"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[SUBSCRIBER CONTAINER OUTPUT]\n${sub_logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T12:44:22.775828" elapsed="0.000176"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-24T12:44:22.776272" level="INFO">
[SUBSCRIBER CONTAINER OUTPUT]
[Entrypoint] Starting crash subscriber in mode network_udp

[Subscriber] Registering callback and waiting for messages...

[Subscriber] Received value: 42
[Subscriber] Received value: 43
[Subscriber] Received value: 42
[Subscriber] Received value: 43
[Subscriber] Received value: 42
[Subscriber] Received value: 43
[Subscriber] Received value: 42
[Subscriber] Received value: 43
[Subscriber] Received value: 42
[Subscriber] Received value: 43
[Subscriber] Received value: 42
[Subscriber] Received value: 43
[Subscriber] Received value: 42
[Subscriber] Received value: 43
[Subscriber] Received value: 42
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Summary] Received 8 x 42 (crash pub), 25 x 43 (test pub)

[✓] Communication continued after crash!

[✓] One Publisher crashed and no more messages received from the crashed publisher!
</msg>
<arg>\n[SUBSCRIBER CONTAINER OUTPUT]\n${sub_logs}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-24T12:44:22.776113" elapsed="0.000293"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-07-24T12:44:22.778692" level="INFO">${crash_logs} = [Entrypoint] Starting crash publisher in mode network_udp
[Publisher] Waiting for at least 1 subscriber(s) on topic: test_topic
[Publisher] Found 1 subscriber(s). Proceeding to send messages.
[Crash P...</msg>
<var>${crash_logs}</var>
<arg>${CRASH_PUB}</arg>
<status status="PASS" start="2025-07-24T12:44:22.776513" elapsed="0.002205"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[CRASH PUBLISHER OUTPUT]\n${crash_logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T12:44:22.778803" elapsed="0.000143"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-24T12:44:22.779195" level="INFO">
[CRASH PUBLISHER OUTPUT]
[Entrypoint] Starting crash publisher in mode network_udp
[Publisher] Waiting for at least 1 subscriber(s) on topic: test_topic
[Publisher] Found 1 subscriber(s). Proceeding to send messages.
[Crash Publisher] Starting and will crash after 10 messages...
[Crash Publisher] Sent buffer with content: 42 (message 1)
[Crash Publisher] Sent buffer with content: 42 (message 2)
[Crash Publisher] Sent buffer with content: 42 (message 3)
[Crash Publisher] Sent buffer with content: 42 (message 4)
[Crash Publisher] Sent buffer with content: 42 (message 5)
[Crash Publisher] Sent buffer with content: 42 (message 6)
[Crash Publisher] Sent buffer with content: 42 (message 7)
[Crash Publisher] Sent buffer with content: 42 (message 8)
[Crash Publisher] Crashing after message 7
./entrypoint.sh: line 60:     7 Aborted                 (core dumped) ./crash_publisher $ARGS $EXTRA
</msg>
<arg>\n[CRASH PUBLISHER OUTPUT]\n${crash_logs}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-24T12:44:22.779060" elapsed="0.000185"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${SUB_NAME}</arg>
<status status="PASS" start="2025-07-24T12:44:22.779337" elapsed="0.001010"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${CRASH_PUB}</arg>
<status status="PASS" start="2025-07-24T12:44:22.780430" elapsed="0.000951"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${TEST_PUB}</arg>
<status status="PASS" start="2025-07-24T12:44:22.781462" elapsed="0.000922"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-07-24T12:44:22.783316" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>${SUB_NAME}</arg>
<status status="PASS" start="2025-07-24T12:44:22.782467" elapsed="0.000871"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-24T12:44:22.783573" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Communication failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-24T12:44:22.783417" elapsed="0.000203"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Network Communication after one Publisher crash ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-07-24T12:44:22.783698" elapsed="0.000138"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${SUB_NAME}</arg>
<status status="PASS" start="2025-07-24T12:44:22.783936" elapsed="0.005421"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${CRASH_PUB}</arg>
<status status="PASS" start="2025-07-24T12:44:22.789450" elapsed="0.005012"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${TEST_PUB}</arg>
<status status="PASS" start="2025-07-24T12:44:22.794572" elapsed="0.005079"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-24T12:44:23.799988" level="INFO">Slept 1 second.</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-24T12:44:22.799738" elapsed="1.000364"/>
</kw>
<arg>network_udp</arg>
<arg>network</arg>
<status status="PASS" start="2025-07-24T12:43:47.399046" elapsed="36.401144"/>
</kw>
<tag>pub_crash_network_udp</tag>
<status status="PASS" start="2025-07-24T12:43:47.398422" elapsed="36.401881"/>
</test>
<test id="s1-s4-t2" name="Communication Continues After Publisher Crash (TCP)" line="34">
<kw name="Run Network Communication Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T12:44:23.802090" level="INFO">${IMAGE} = pub_crash_network_tcp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T12:44:23.801941" elapsed="0.000169"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T12:44:23.802267" level="INFO">${TOPIC} = test_topic</msg>
<var>${TOPIC}</var>
<arg>test_topic</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T12:44:23.802184" elapsed="0.000100"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T12:44:23.802468" level="INFO">${CRASH_PUB} = crash_pub_network_tcp</msg>
<var>${CRASH_PUB}</var>
<arg>crash_pub_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T12:44:23.802349" elapsed="0.000136"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T12:44:23.802672" level="INFO">${TEST_PUB} = test_pub_network_tcp</msg>
<var>${TEST_PUB}</var>
<arg>test_pub_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T12:44:23.802564" elapsed="0.000126"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T12:44:23.802852" level="INFO">${SUB_NAME} = sub_network_tcp</msg>
<var>${SUB_NAME}</var>
<arg>sub_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T12:44:23.802756" elapsed="0.000112"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Starting communication continuity test with ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T12:44:23.802930" elapsed="0.000120"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${SUB_NAME}</arg>
<arg>${IMAGE}</arg>
<arg>subscriber</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-24T12:44:23.803150" elapsed="0.125445"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${CRASH_PUB}</arg>
<arg>${IMAGE}</arg>
<arg>crash_publisher</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-24T12:44:23.928823" elapsed="0.123118"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${TEST_PUB}</arg>
<arg>${IMAGE}</arg>
<arg>test_publisher</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${TEST_PUB}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-24T12:44:24.052163" elapsed="0.122410"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-24T12:44:59.175047" level="INFO">Slept 35 seconds.</msg>
<arg>35s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-24T12:44:24.174747" elapsed="35.000412"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-07-24T12:44:59.178368" level="INFO">${sub_logs} = [Entrypoint] Starting crash subscriber in mode network_tcp

[Subscriber] Registering callback and waiting for messages...

[Subscriber] Received value: 42
[Subscriber] Received value: 43
[Subscriber] ...</msg>
<var>${sub_logs}</var>
<arg>${SUB_NAME}</arg>
<status status="PASS" start="2025-07-24T12:44:59.175327" elapsed="0.003068"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[SUBSCRIBER CONTAINER OUTPUT]\n${sub_logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T12:44:59.178496" elapsed="0.000210"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-24T12:44:59.178971" level="INFO">
[SUBSCRIBER CONTAINER OUTPUT]
[Entrypoint] Starting crash subscriber in mode network_tcp

[Subscriber] Registering callback and waiting for messages...

[Subscriber] Received value: 42
[Subscriber] Received value: 43
[Subscriber] Received value: 42
[Subscriber] Received value: 43
[Subscriber] Received value: 42
[Subscriber] Received value: 43
[Subscriber] Received value: 42
[Subscriber] Received value: 43
[Subscriber] Received value: 42
[Subscriber] Received value: 43
[Subscriber] Received value: 42
[Subscriber] Received value: 43
[Subscriber] Received value: 42
[Subscriber] Received value: 43
[Subscriber] Received value: 42
[Subscriber] Received value: 43
[Subscriber] Received value: 43
1753361074795 ms | e64a214e9d9c | ./test_subscriber | 7 | error | CTCPReaderLayer - TCPPubSub (Error) -SubscriberSession 172.18.0.2:35162-&gt;8afec2aabbe6:41727: Error reading header length: End of file
1753361074796 ms | e64a214e9d9c | ./test_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:40050: Failed connecting to publisher 8afec2aabbe6:41727: Connection refused
1753361074796 ms | e64a214e9d9c | ./test_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:40054: Failed connecting to publisher 8afec2aabbe6:41727: Connection refused
1753361074797 ms | e64a214e9d9c | ./test_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:40070: Failed connecting to publisher 8afec2aabbe6:41727: Connection refused
1753361074797 ms | e64a214e9d9c | ./test_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:40072: Failed connecting to publisher 8afec2aabbe6:41727: Connection refused
1753361074798 ms | e64a214e9d9c | ./test_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:40074: Failed connecting to publisher 8afec2aabbe6:41727: Connection refused
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Subscriber] Received value: 43
1753361091483 ms | e64a214e9d9c | ./test_subscriber | 7 | error | CTCPReaderLayer - TCPPubSub (Error) -SubscriberSession 172.18.0.2:50228-&gt;edcaab04c363:42401: Error reading header length: End of file
1753361091483 ms | e64a214e9d9c | ./test_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:37460: Failed connecting to publisher edcaab04c363:42401: Connection refused
1753361091484 ms | e64a214e9d9c | ./test_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:37472: Failed connecting to publisher edcaab04c363:42401: Connection refused
1753361091484 ms | e64a214e9d9c | ./test_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:37488: Failed connecting to publisher edcaab04c363:42401: Connection refused
1753361091485 ms | e64a214e9d9c | ./test_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:37496: Failed connecting to publisher edcaab04c363:42401: Connection refused
1753361091485 ms | e64a214e9d9c | ./test_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:37504: Failed connecting to publisher edcaab04c363:42401: Connection refused
[Summary] Received 8 x 42 (crash pub), 25 x 43 (test pub)

[✓] Communication continued after crash!

[✓] One Publisher crashed and no more messages received from the crashed publisher!
</msg>
<arg>\n[SUBSCRIBER CONTAINER OUTPUT]\n${sub_logs}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-24T12:44:59.178807" elapsed="0.000250"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-07-24T12:44:59.181643" level="INFO">${crash_logs} = [Entrypoint] Starting crash publisher in mode network_tcp
[Publisher] Waiting for at least 1 subscriber(s) on topic: test_topic
1753361064930 ms | 8afec2aabbe6 | ./crash_publisher | 7 | info | CTCPRea...</msg>
<var>${crash_logs}</var>
<arg>${CRASH_PUB}</arg>
<status status="PASS" start="2025-07-24T12:44:59.179157" elapsed="0.002519"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[CRASH PUBLISHER OUTPUT]\n${crash_logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T12:44:59.181792" elapsed="0.000180"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-24T12:44:59.182202" level="INFO">
[CRASH PUBLISHER OUTPUT]
[Entrypoint] Starting crash publisher in mode network_tcp
[Publisher] Waiting for at least 1 subscriber(s) on topic: test_topic
1753361064930 ms | 8afec2aabbe6 | ./crash_publisher | 7 | info | CTCPReaderLayer - TCPPubSub (Info) -Publisher :::0: Created publisher and waiting for clients.
1753361064931 ms | 8afec2aabbe6 | ./crash_publisher | 7 | info | CTCPReaderLayer - TCPPubSub (Info) -Publisher :::41727: Subscriber ::ffff:172.18.0.2:35162 has connected.
[Publisher] Found 1 subscriber(s). Proceeding to send messages.
[Crash Publisher] Starting and will crash after 10 messages...
[Crash Publisher] Sent buffer with content: 42 (message 1)
[Crash Publisher] Sent buffer with content: 42 (message 2)
[Crash Publisher] Sent buffer with content: 42 (message 3)
[Crash Publisher] Sent buffer with content: 42 (message 4)
[Crash Publisher] Sent buffer with content: 42 (message 5)
[Crash Publisher] Sent buffer with content: 42 (message 6)
[Crash Publisher] Sent buffer with content: 42 (message 7)
[Crash Publisher] Sent buffer with content: 42 (message 8)
[Crash Publisher] Crashing after message 7
./entrypoint.sh: line 60:     7 Aborted                 (core dumped) ./crash_publisher $ARGS $EXTRA
</msg>
<arg>\n[CRASH PUBLISHER OUTPUT]\n${crash_logs}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-24T12:44:59.182074" elapsed="0.000178"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${SUB_NAME}</arg>
<status status="PASS" start="2025-07-24T12:44:59.182340" elapsed="0.001233"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${CRASH_PUB}</arg>
<status status="PASS" start="2025-07-24T12:44:59.183719" elapsed="0.001166"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${TEST_PUB}</arg>
<status status="PASS" start="2025-07-24T12:44:59.184970" elapsed="0.000966"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-07-24T12:44:59.186872" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>${SUB_NAME}</arg>
<status status="PASS" start="2025-07-24T12:44:59.186022" elapsed="0.000874"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-24T12:44:59.187113" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Communication failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-24T12:44:59.186978" elapsed="0.000177"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Network Communication after one Publisher crash ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-07-24T12:44:59.187230" elapsed="0.000148"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${SUB_NAME}</arg>
<status status="PASS" start="2025-07-24T12:44:59.187462" elapsed="0.004801"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${CRASH_PUB}</arg>
<status status="PASS" start="2025-07-24T12:44:59.192346" elapsed="0.004853"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${TEST_PUB}</arg>
<status status="PASS" start="2025-07-24T12:44:59.197282" elapsed="0.004752"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-24T12:45:00.202358" level="INFO">Slept 1 second.</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-24T12:44:59.202119" elapsed="1.000346"/>
</kw>
<arg>network_tcp</arg>
<arg>network</arg>
<status status="PASS" start="2025-07-24T12:44:23.801704" elapsed="36.400873"/>
</kw>
<tag>pub_crash_network_tcp</tag>
<status status="PASS" start="2025-07-24T12:44:23.801246" elapsed="36.401451"/>
</test>
<test id="s1-s4-t3" name="Communication Continues After Publisher Crash (SHM)" line="38">
<kw name="Run Local Communication Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T12:45:00.204753" level="INFO">${IMAGE} = pub_crash_local_shm</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T12:45:00.204597" elapsed="0.000177"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T12:45:00.204956" level="INFO">${CONTAINER} = local_all_local_shm</msg>
<var>${CONTAINER}</var>
<arg>local_all_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T12:45:00.204848" elapsed="0.000125"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\nStarting local test container with ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T12:45:00.205038" elapsed="0.000124"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<arg>${IMAGE}</arg>
<arg>local_all</arg>
<arg>${layer_tag}</arg>
<status status="PASS" start="2025-07-24T12:45:00.205262" elapsed="0.109847"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-24T12:45:35.315661" level="INFO">Slept 35 seconds.</msg>
<arg>35s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-24T12:45:00.315314" elapsed="35.000466"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-07-24T12:45:35.318976" level="INFO">${logs} = [Entrypoint] Starting local test (pub/sub/monitor) in mode local_shm
Shared memory monitoring is enabled (domain: ecal_mon - queue size: 1024)
[Publisher] Waiting for at least 1 subscriber(s) on topic...</msg>
<var>${logs}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-24T12:45:35.315948" elapsed="0.003054"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n\n[CONTAINER LOG: LOCAL PUB+SUB]\n\n${logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T12:45:35.319095" elapsed="0.000188"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-24T12:45:35.319579" level="INFO">

[CONTAINER LOG: LOCAL PUB+SUB]

[Entrypoint] Starting local test (pub/sub/monitor) in mode local_shm
Shared memory monitoring is enabled (domain: ecal_mon - queue size: 1024)
[Publisher] Waiting for at least 1 subscriber(s) on topic: test_topic
Shared memory monitoring is enabled (domain: ecal_mon - queue size: 1024)
[Publisher] Waiting for at least 1 subscriber(s) on topic: test_topic
Shared memory monitoring is enabled (domain: ecal_mon - queue size: 1024)

[Subscriber] Registering callback and waiting for messages...

[Publisher] Found 1 subscriber(s). Proceeding to send messages.
[Publisher] Found 1 subscriber(s). Proceeding to send messages.
[Crash Publisher] Starting and will crash after 10 messages...

 [Test Publisher] Started with mode=local_shm, topic=test_topic, node=test_publisher, count=25, delay=1000ms
[Crash Publisher] Sent buffer with content: 42 (message 1)
[Test Publisher] Sent buffer with content: 43 (message 1)
[Subscriber] Received value: 43
[Crash Publisher] Sent buffer with content: 42 (message 2)
[Test Publisher] Sent buffer with content: 43 (message 2)
[Subscriber] Received value: 43
[Crash Publisher] Sent buffer with content: 42 (message 3)
[Test Publisher] Sent buffer with content: 43 (message 3)
[Subscriber] Received value: 43
[Crash Publisher] Sent buffer with content: 42 (message 4)
[Test Publisher] Sent buffer with content: 43 (message 4)
[Subscriber] Received value: 43
[Crash Publisher] Sent buffer with content: 42 (message 5)
[Test Publisher] Sent buffer with content: 43 (message 5)
[Subscriber] Received value: 43
[Crash Publisher] Sent buffer with content: 42 (message 6)
[Test Publisher] Sent buffer with content: 43 (message 6)
[Subscriber] Received value: 43
[Crash Publisher] Sent buffer with content: 42 (message 7)
[Test Publisher] Sent buffer with content: 43 (message 7)
[Subscriber] Received value: 43
[Crash Publisher] Sent buffer with content: 42 (message 8)
[Test Publisher] Sent buffer with content: 43 (message 8)
[Subscriber] Received value: 43
[Crash Publisher] Crashing after message 7
[Test Publisher] Sent buffer with content: 43 (message 9)
[Subscriber] Received value: 43
[Test Publisher] Sent buffer with content: 43 (message 10)
[Subscriber] Received value: 43
[Test Publisher] Sent buffer with content: 43 (message 11)
[Subscriber] Received value: 43
[Test Publisher] Sent buffer with content: 43 (message 12)
[Subscriber] Received value: 43
[Test Publisher] Sent buffer with content: 43 (message 13)
[Subscriber] Received value: 43
[Test Publisher] Sent buffer with content: 43 (message 14)
[Subscriber] Received value: 43
[Test Publisher] Sent buffer with content: 43 (message 15)
[Subscriber] Received value: 43
[Test Publisher] Sent buffer with content: 43 (message 16)
[Subscriber] Received value: 43
[Test Publisher] Sent buffer with content: 43 (message 17)
[Subscriber] Received value: 43
[Test Publisher] Sent buffer with content: 43 (message 18)
[Subscriber] Received value: 43
[Test Publisher] Sent buffer with content: 43 (message 19)
[Subscriber] Received value: 43
[Test Publisher] Sent buffer with content: 43 (message 20)
[Subscriber] Received value: 43
[Test Publisher] Sent buffer with content: 43 (message 21)
[Subscriber] Received value: 43
[Test Publisher] Sent buffer with content: 43 (message 22)
[Subscriber] Received value: 43
[Test Publisher] Sent buffer with content: 43 (message 23)
[Subscriber] Received value: 43
[Test Publisher] Sent buffer with content: 43 (message 24)
[Subscriber] Received value: 43
[Test Publisher] Sent buffer with content: 43 (message 25)
[Subscriber] Received value: 43
[Summary] Received 0 x 42 (crash pub), 25 x 43 (test pub)

[✓] Communication continued after crash!

[✓] One Publisher crashed and no more messages received from the crashed publisher!
./entrypoint.sh: line 55:     7 Aborted                 (core dumped) ./crash_publisher $ARGS
</msg>
<arg>\n\n[CONTAINER LOG: LOCAL PUB+SUB]\n\n${logs}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-24T12:45:35.319389" elapsed="0.000339"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-07-24T12:45:35.321011" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-24T12:45:35.319836" elapsed="0.001208"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-24T12:45:35.321340" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Local test failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-24T12:45:35.321159" elapsed="0.000239"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Local Communication after one Publisher crash ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-07-24T12:45:35.321500" elapsed="0.000208"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-24T12:45:35.321804" elapsed="0.005334"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-24T12:45:36.327459" level="INFO">Slept 1 second.</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-24T12:45:35.327222" elapsed="1.000369"/>
</kw>
<arg>local_shm</arg>
<status status="PASS" start="2025-07-24T12:45:00.204342" elapsed="36.123337"/>
</kw>
<tag>pub_crash_local_shm</tag>
<status status="PASS" start="2025-07-24T12:45:00.203945" elapsed="36.123848"/>
</test>
<status status="PASS" start="2025-07-24T12:43:35.553974" elapsed="120.774525"/>
</suite>
<suite id="s1-s5" name="Rpc N To N Test" source="/home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/rpc_n_to_n_test/robottests/rpc_n_to_n_test.robot">
<kw name="Init Test Context" type="SETUP">
<kw name="Set Test Context" owner="GlobalPathsLibrary">
<arg>rpc_n_to_n_test</arg>
<arg>rpc_n_to_n_test</arg>
<doc>Sets the test folder and tag prefix if it's a valid test case.
The folder must exist under integration_tests/ and contain typical test structure.</doc>
<status status="PASS" start="2025-07-24T12:45:36.332000" elapsed="0.000141"/>
</kw>
<kw name="Get Build Script Path" owner="GlobalPathsLibrary">
<msg time="2025-07-24T12:45:36.332313" level="INFO">${build} = /home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/rpc_n_to_n_test/scripts/build_images.sh</msg>
<var>${build}</var>
<status status="PASS" start="2025-07-24T12:45:36.332223" elapsed="0.000109"/>
</kw>
<kw name="Get Network Name" owner="GlobalPathsLibrary">
<msg time="2025-07-24T12:45:36.332470" level="INFO">${net} = ecal_test_net</msg>
<var>${net}</var>
<status status="PASS" start="2025-07-24T12:45:36.332395" elapsed="0.000092"/>
</kw>
<kw name="Get Build Script Args" owner="GlobalPathsLibrary">
<msg time="2025-07-24T12:45:36.332657" level="INFO">${args} = ['rpc_n_to_n_test']</msg>
<var>${args}</var>
<status status="PASS" start="2025-07-24T12:45:36.332572" elapsed="0.000102"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-07-24T12:45:36.332876" level="INFO">${BUILD_SCRIPT} = /home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/rpc_n_to_n_test/scripts/build_images.sh</msg>
<arg>${BUILD_SCRIPT}</arg>
<arg>${build}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-07-24T12:45:36.332750" elapsed="0.000154"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-07-24T12:45:36.333083" level="INFO">${NETWORK} = ecal_test_net</msg>
<arg>${NETWORK}</arg>
<arg>${net}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-07-24T12:45:36.332974" elapsed="0.000135"/>
</kw>
<kw name="Get Test Description" owner="GlobalPathsLibrary">
<msg time="2025-07-24T12:45:36.333324" level="INFO">${desc} = This test validates N-to-N RPC communication using eCAL, where multiple clients
send concurrent Ping requests to multiple servers.

Test Setup:
- 2 RPC servers provide a method called "Ping".
- 2 RPC ...</msg>
<var>${desc}</var>
<doc>Reads the *** Comments *** section from the .robot file and returns it as a string.</doc>
<status status="PASS" start="2025-07-24T12:45:36.333171" elapsed="0.000209"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-24T12:45:36.333559" level="INFO">This test validates N-to-N RPC communication using eCAL, where multiple clients
send concurrent Ping requests to multiple servers.

Test Setup:
- 2 RPC servers provide a method called "Ping".
- 2 RPC clients call this method on all available servers.
- Each client must receive a valid "PONG" response from all available servers.

Goals:
- Validate that RPC communication scales to N clients and N servers.
- Ensure all clients connect and receive correct responses from all servers.

Success Criteria:
- Each client prints the correct number of "PONG" responses.
- All clients exit with code 0.</msg>
<arg>${desc}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-24T12:45:36.333456" elapsed="0.000144"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>[SETUP] Building Docker image...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T12:45:36.333667" elapsed="0.000088"/>
</kw>
<kw name="Run Process" owner="Process">
<msg time="2025-07-24T12:45:36.334033" level="INFO">Starting process:
/home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/rpc_n_to_n_test/scripts/build_images.sh rpc_n_to_n_test</msg>
<msg time="2025-07-24T12:45:36.334424" level="INFO">Waiting for process to complete.</msg>
<msg time="2025-07-24T12:45:44.328446" level="INFO">Process completed.</msg>
<msg time="2025-07-24T12:45:44.328630" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<var>${result}</var>
<arg>${BUILD_SCRIPT}</arg>
<arg>@{args}</arg>
<doc>Runs a process and waits for it to complete.</doc>
<status status="PASS" start="2025-07-24T12:45:36.333864" elapsed="7.994793"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-24T12:45:44.329293" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${result.rc}</arg>
<arg>0</arg>
<arg>Failed to build Docker image!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-24T12:45:44.328805" elapsed="0.000536"/>
</kw>
<kw name="Create Docker Network" owner="MyDockerLibrary">
<arg>${NETWORK}</arg>
<status status="PASS" start="2025-07-24T12:45:44.329426" elapsed="0.007249"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-24T12:45:46.337064" level="INFO">Slept 2 seconds.</msg>
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-24T12:45:44.336793" elapsed="2.000387"/>
</kw>
<status status="PASS" start="2025-07-24T12:45:36.331843" elapsed="10.005432"/>
</kw>
<test id="s1-s5-t1" name="RPC N-to-N Test" line="33">
<kw name="Run RPC N-to-N Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T12:45:46.338355" level="INFO">${IMAGE} = rpc_n_to_n_test_network_udp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_network_udp</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T12:45:46.338217" elapsed="0.000158"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Starting ${NUM_SERVERS} servers and ${NUM_CLIENTS} clients...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T12:45:46.338450" elapsed="0.000159"/>
</kw>
<for flavor="IN RANGE">
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T12:45:46.339085" level="INFO">${name} = rpc_server_0</msg>
<var>${name}</var>
<arg>rpc_server_${i}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T12:45:46.338968" elapsed="0.000136"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${name}</arg>
<arg>${IMAGE}</arg>
<arg>server</arg>
<arg>network_udp</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-24T12:45:46.339173" elapsed="0.128557"/>
</kw>
<var name="${i}">0</var>
<status status="PASS" start="2025-07-24T12:45:46.338890" elapsed="0.128906"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T12:45:46.468232" level="INFO">${name} = rpc_server_1</msg>
<var>${name}</var>
<arg>rpc_server_${i}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T12:45:46.468056" elapsed="0.000197"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${name}</arg>
<arg>${IMAGE}</arg>
<arg>server</arg>
<arg>network_udp</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-24T12:45:46.468328" elapsed="0.126579"/>
</kw>
<var name="${i}">1</var>
<status status="PASS" start="2025-07-24T12:45:46.467942" elapsed="0.127029"/>
</iter>
<var>${i}</var>
<value>${NUM_SERVERS}</value>
<status status="PASS" start="2025-07-24T12:45:46.338673" elapsed="0.256336"/>
</for>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-24T12:45:48.595407" level="INFO">Slept 2 seconds.</msg>
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-24T12:45:46.595146" elapsed="2.000374"/>
</kw>
<for flavor="IN RANGE">
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T12:45:48.596204" level="INFO">${name} = rpc_client_0</msg>
<var>${name}</var>
<arg>rpc_client_${j}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T12:45:48.596022" elapsed="0.000206"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${name}</arg>
<arg>${IMAGE}</arg>
<arg>client</arg>
<arg>network_udp</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-24T12:45:48.596318" elapsed="0.129342"/>
</kw>
<var name="${j}">0</var>
<status status="PASS" start="2025-07-24T12:45:48.595904" elapsed="0.129830"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T12:45:48.726235" level="INFO">${name} = rpc_client_1</msg>
<var>${name}</var>
<arg>rpc_client_${j}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T12:45:48.726007" elapsed="0.000262"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${name}</arg>
<arg>${IMAGE}</arg>
<arg>client</arg>
<arg>network_udp</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-24T12:45:48.726361" elapsed="0.121693"/>
</kw>
<var name="${j}">1</var>
<status status="PASS" start="2025-07-24T12:45:48.725883" elapsed="0.122235"/>
</iter>
<var>${j}</var>
<value>${NUM_CLIENTS}</value>
<status status="PASS" start="2025-07-24T12:45:48.595642" elapsed="0.252512"/>
</for>
<for flavor="IN RANGE">
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T12:45:48.848745" level="INFO">${name} = rpc_client_0</msg>
<var>${name}</var>
<arg>rpc_client_${j}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T12:45:48.848577" elapsed="0.000190"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-07-24T12:45:50.287680" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>${name}</arg>
<status status="PASS" start="2025-07-24T12:45:48.848845" elapsed="1.438879"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-24T12:45:50.288236" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>${name} failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-24T12:45:50.287914" elapsed="0.000414"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-07-24T12:45:50.291380" level="INFO">${logs} = [Entrypoint] Starting client in mode network_udp...
[Client] Initializing eCAL with mode: network_udp
[Client] Waiting for server...
[Client] Sending Ping...
[Client] Response: PONG
[Client] Response:...</msg>
<var>${logs}</var>
<arg>${name}</arg>
<status status="PASS" start="2025-07-24T12:45:50.288605" elapsed="0.002801"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[CLIENT LOG: ${name}]\n${logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T12:45:50.291502" elapsed="0.000211"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-24T12:45:50.291948" level="INFO">
[CLIENT LOG: rpc_client_0]
[Entrypoint] Starting client in mode network_udp...
[Client] Initializing eCAL with mode: network_udp
[Client] Waiting for server...
[Client] Sending Ping...
[Client] Response: PONG
[Client] Response: PONG
[Client] PONG responses: 2
</msg>
<arg>\n[CLIENT LOG: ${name}]\n${logs}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-24T12:45:50.291822" elapsed="0.000162"/>
</kw>
<var name="${j}">0</var>
<status status="PASS" start="2025-07-24T12:45:48.848442" elapsed="1.443568"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T12:45:50.292296" level="INFO">${name} = rpc_client_1</msg>
<var>${name}</var>
<arg>rpc_client_${j}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T12:45:50.292177" elapsed="0.000138"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-07-24T12:45:50.407673" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>${name}</arg>
<status status="PASS" start="2025-07-24T12:45:50.292386" elapsed="0.115344"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-24T12:45:50.408161" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>${name} failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-24T12:45:50.407907" elapsed="0.000311"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-07-24T12:45:50.411326" level="INFO">${logs} = [Entrypoint] Starting client in mode network_udp...
[Client] Initializing eCAL with mode: network_udp
[Client] Waiting for server...
[Client] Sending Ping...
[Client] Response: PONG
[Client] Response:...</msg>
<var>${logs}</var>
<arg>${name}</arg>
<status status="PASS" start="2025-07-24T12:45:50.408329" elapsed="0.003023"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[CLIENT LOG: ${name}]\n${logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T12:45:50.411442" elapsed="0.000198"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-24T12:45:50.411921" level="INFO">
[CLIENT LOG: rpc_client_1]
[Entrypoint] Starting client in mode network_udp...
[Client] Initializing eCAL with mode: network_udp
[Client] Waiting for server...
[Client] Sending Ping...
[Client] Response: PONG
[Client] Response: PONG
[Client] PONG responses: 2
</msg>
<arg>\n[CLIENT LOG: ${name}]\n${logs}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-24T12:45:50.411756" elapsed="0.000213"/>
</kw>
<var name="${j}">1</var>
<status status="PASS" start="2025-07-24T12:45:50.292111" elapsed="0.119894"/>
</iter>
<var>${j}</var>
<value>${NUM_CLIENTS}</value>
<status status="PASS" start="2025-07-24T12:45:48.848220" elapsed="1.563825"/>
</for>
<for flavor="IN RANGE">
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T12:45:50.412477" level="INFO">${name} = rpc_server_0</msg>
<var>${name}</var>
<arg>rpc_server_${i}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T12:45:50.412358" elapsed="0.000138"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-07-24T12:45:50.414662" level="INFO">${logs} = [Entrypoint] Starting server in mode network_udp...
[1;33m[Server] Initializing eCAL with mode: network_udp[0m
[1;32m[Server] Ready for RPC (method: Ping)[0m
[1;32m[Server] Received RPC: PING[0m...</msg>
<var>${logs}</var>
<arg>${name}</arg>
<status status="PASS" start="2025-07-24T12:45:50.412604" elapsed="0.002087"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[SERVER LOG: ${name}]\n${logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T12:45:50.414780" elapsed="0.000170"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-24T12:45:50.415175" level="INFO">
[SERVER LOG: rpc_server_0]
[Entrypoint] Starting server in mode network_udp...
[1;33m[Server] Initializing eCAL with mode: network_udp[0m
[1;32m[Server] Ready for RPC (method: Ping)[0m
[1;32m[Server] Received RPC: PING[0m
[1;32m[Server] Responded with: PONG[0m
[1;32m[Server] Received RPC: PING[0m
[1;32m[Server] Responded with: PONG[0m
</msg>
<arg>\n[SERVER LOG: ${name}]\n${logs}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-24T12:45:50.415052" elapsed="0.000161"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${name}</arg>
<status status="PASS" start="2025-07-24T12:45:50.415291" elapsed="10.082118"/>
</kw>
<var name="${i}">0</var>
<status status="PASS" start="2025-07-24T12:45:50.412291" elapsed="10.085172"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T12:46:00.497896" level="INFO">${name} = rpc_server_1</msg>
<var>${name}</var>
<arg>rpc_server_${i}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T12:46:00.497727" elapsed="0.000191"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-07-24T12:46:00.500082" level="INFO">${logs} = [Entrypoint] Starting server in mode network_udp...
[1;33m[Server] Initializing eCAL with mode: network_udp[0m
[1;32m[Server] Ready for RPC (method: Ping)[0m
[1;32m[Server] Received RPC: PING[0m...</msg>
<var>${logs}</var>
<arg>${name}</arg>
<status status="PASS" start="2025-07-24T12:46:00.497995" elapsed="0.002114"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[SERVER LOG: ${name}]\n${logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T12:46:00.500193" elapsed="0.000165"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-24T12:46:00.500633" level="INFO">
[SERVER LOG: rpc_server_1]
[Entrypoint] Starting server in mode network_udp...
[1;33m[Server] Initializing eCAL with mode: network_udp[0m
[1;32m[Server] Ready for RPC (method: Ping)[0m
[1;32m[Server] Received RPC: PING[0m
[1;32m[Server] Responded with: PONG[0m
[1;32m[Server] Received RPC: PING[0m
[1;32m[Server] Responded with: PONG[0m
</msg>
<arg>\n[SERVER LOG: ${name}]\n${logs}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-24T12:46:00.500468" elapsed="0.000203"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${name}</arg>
<status status="PASS" start="2025-07-24T12:46:00.500742" elapsed="10.077232"/>
</kw>
<var name="${i}">1</var>
<status status="PASS" start="2025-07-24T12:46:00.497621" elapsed="10.080409"/>
</iter>
<var>${i}</var>
<value>${NUM_SERVERS}</value>
<status status="PASS" start="2025-07-24T12:45:50.412111" elapsed="20.165953"/>
</for>
<for flavor="IN RANGE">
<iter>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>rpc_client_${j}</arg>
<status status="PASS" start="2025-07-24T12:46:10.578413" elapsed="0.005219"/>
</kw>
<var name="${j}">0</var>
<status status="PASS" start="2025-07-24T12:46:10.578318" elapsed="0.005348"/>
</iter>
<iter>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>rpc_client_${j}</arg>
<status status="PASS" start="2025-07-24T12:46:10.583804" elapsed="0.004945"/>
</kw>
<var name="${j}">1</var>
<status status="PASS" start="2025-07-24T12:46:10.583742" elapsed="0.005079"/>
</iter>
<var>${j}</var>
<value>${NUM_CLIENTS}</value>
<status status="PASS" start="2025-07-24T12:46:10.578124" elapsed="0.010727"/>
</for>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>RPC N-to-N Test</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-07-24T12:46:10.588934" elapsed="0.000139"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-24T12:46:11.589410" level="INFO">Slept 1 second.</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-24T12:46:10.589168" elapsed="1.000344"/>
</kw>
<status status="PASS" start="2025-07-24T12:45:46.337993" elapsed="25.251623"/>
</kw>
<tag>rpc_n_to_n_test</tag>
<status status="PASS" start="2025-07-24T12:45:46.337345" elapsed="25.252387"/>
</test>
<status status="PASS" start="2025-07-24T12:45:36.329149" elapsed="35.261904"/>
</suite>
<suite id="s1-s6" name="Rpc Ping Test" source="/home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/rpc_ping_test/robottests/rpc_ping_test.robot">
<kw name="Init Test Context" type="SETUP">
<kw name="Set Test Context" owner="GlobalPathsLibrary">
<arg>rpc_ping_test</arg>
<arg>rpc_ping_test</arg>
<doc>Sets the test folder and tag prefix if it's a valid test case.
The folder must exist under integration_tests/ and contain typical test structure.</doc>
<status status="PASS" start="2025-07-24T12:46:11.594316" elapsed="0.000135"/>
</kw>
<kw name="Get Build Script Path" owner="GlobalPathsLibrary">
<msg time="2025-07-24T12:46:11.594650" level="INFO">${build} = /home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/rpc_ping_test/scripts/build_images.sh</msg>
<var>${build}</var>
<status status="PASS" start="2025-07-24T12:46:11.594531" elapsed="0.000140"/>
</kw>
<kw name="Get Network Name" owner="GlobalPathsLibrary">
<msg time="2025-07-24T12:46:11.594812" level="INFO">${net} = ecal_test_net</msg>
<var>${net}</var>
<status status="PASS" start="2025-07-24T12:46:11.594736" elapsed="0.000092"/>
</kw>
<kw name="Get Build Script Args" owner="GlobalPathsLibrary">
<msg time="2025-07-24T12:46:11.594959" level="INFO">${args} = ['rpc_ping_test']</msg>
<var>${args}</var>
<status status="PASS" start="2025-07-24T12:46:11.594887" elapsed="0.000089"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-07-24T12:46:11.595175" level="INFO">${BUILD_SCRIPT} = /home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/rpc_ping_test/scripts/build_images.sh</msg>
<arg>${BUILD_SCRIPT}</arg>
<arg>${build}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-07-24T12:46:11.595048" elapsed="0.000155"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-07-24T12:46:11.595381" level="INFO">${NETWORK} = ecal_test_net</msg>
<arg>${NETWORK}</arg>
<arg>${net}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-07-24T12:46:11.595272" elapsed="0.000134"/>
</kw>
<kw name="Get Test Description" owner="GlobalPathsLibrary">
<msg time="2025-07-24T12:46:11.595637" level="INFO">${desc} = This test checks a basic RPC communication between a client and a server.

Test Setup:
- The server provides a method called "Ping".
- The client sends one "PING" request to this method.

Goals:
- Ens...</msg>
<var>${desc}</var>
<doc>Reads the *** Comments *** section from the .robot file and returns it as a string.</doc>
<status status="PASS" start="2025-07-24T12:46:11.595468" elapsed="0.000190"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-24T12:46:11.595819" level="INFO">This test checks a basic RPC communication between a client and a server.

Test Setup:
- The server provides a method called "Ping".
- The client sends one "PING" request to this method.

Goals:
- Ensure RPC client-server interaction works over network UDP.
- Validate that the server responds with "PONG".
- The client must connect, call the method, and receive a valid response.

Success Criteria:
- The server receives a call and returns a response.
- The client prints the response and exits with code 0.</msg>
<arg>${desc}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-24T12:46:11.595731" elapsed="0.000119"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>[SETUP] Building Docker image...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T12:46:11.595914" elapsed="0.000082"/>
</kw>
<kw name="Run Process" owner="Process">
<msg time="2025-07-24T12:46:11.596237" level="INFO">Starting process:
/home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/rpc_ping_test/scripts/build_images.sh rpc_ping_test</msg>
<msg time="2025-07-24T12:46:11.596643" level="INFO">Waiting for process to complete.</msg>
<msg time="2025-07-24T12:46:19.783949" level="INFO">Process completed.</msg>
<msg time="2025-07-24T12:46:19.784115" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<var>${result}</var>
<arg>${BUILD_SCRIPT}</arg>
<arg>@{args}</arg>
<doc>Runs a process and waits for it to complete.</doc>
<status status="PASS" start="2025-07-24T12:46:11.596090" elapsed="8.188051"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-24T12:46:19.784813" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${result.rc}</arg>
<arg>0</arg>
<arg>Failed to build Docker image!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-24T12:46:19.784293" elapsed="0.000571"/>
</kw>
<kw name="Create Docker Network" owner="MyDockerLibrary">
<arg>${NETWORK}</arg>
<status status="PASS" start="2025-07-24T12:46:19.784952" elapsed="0.007070"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-24T12:46:21.792403" level="INFO">Slept 2 seconds.</msg>
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-24T12:46:19.792140" elapsed="2.000380"/>
</kw>
<status status="PASS" start="2025-07-24T12:46:11.594170" elapsed="10.198479"/>
</kw>
<test id="s1-s6-t1" name="RPC Ping Test" line="30">
<kw name="Run RPC Test Network UDP">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T12:46:21.793937" level="INFO">${IMAGE} = rpc_ping_test_network_udp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_network_udp</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T12:46:21.793799" elapsed="0.000158"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T12:46:21.794116" level="INFO">${CLIENT_NAME} = rpc_client</msg>
<var>${CLIENT_NAME}</var>
<arg>rpc_client</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T12:46:21.794030" elapsed="0.000103"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T12:46:21.794278" level="INFO">${SERVER_NAME} = rpc_server</msg>
<var>${SERVER_NAME}</var>
<arg>rpc_server</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T12:46:21.794199" elapsed="0.000095"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Running RPC test (network UDP mode)...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T12:46:21.794357" elapsed="0.000104"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${SERVER_NAME}</arg>
<arg>${IMAGE}</arg>
<arg>server</arg>
<arg>network_udp</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-24T12:46:21.794576" elapsed="0.123372"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-24T12:46:22.918439" level="INFO">Slept 1 second.</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-24T12:46:21.918139" elapsed="1.000429"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${CLIENT_NAME}</arg>
<arg>${IMAGE}</arg>
<arg>client</arg>
<arg>network_udp</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-24T12:46:22.918777" elapsed="0.116822"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-07-24T12:46:24.594899" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>${CLIENT_NAME}</arg>
<status status="PASS" start="2025-07-24T12:46:23.035807" elapsed="1.559146"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-24T12:46:24.595432" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Client failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-24T12:46:24.595170" elapsed="0.000336"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-07-24T12:46:24.598811" level="INFO">${server_logs} = [Entrypoint] Starting server in mode network_udp...
[1;33m[Server] Initializing eCAL with mode: network_udp[0m
[1;32m[Server] Waiting for RPC calls (method: Ping)[0m
[1;32m[Server] Received RPC r...</msg>
<var>${server_logs}</var>
<arg>${SERVER_NAME}</arg>
<status status="PASS" start="2025-07-24T12:46:24.595656" elapsed="0.003182"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-07-24T12:46:24.601206" level="INFO">${client_logs} = [Entrypoint] Starting client in mode network_udp...
[1;33m[Client] Initializing eCAL with mode: network_udp[0m
[1;33m[Client] Waiting for server connection...[0m
[1;32m[Client] Connected. Calling...</msg>
<var>${client_logs}</var>
<arg>${CLIENT_NAME}</arg>
<status status="PASS" start="2025-07-24T12:46:24.598925" elapsed="0.002308"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[CONTAINER LOG: SERVER]\n${server_logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T12:46:24.601321" elapsed="0.000152"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-24T12:46:24.601743" level="INFO">
[CONTAINER LOG: SERVER]
[Entrypoint] Starting server in mode network_udp...
[1;33m[Server] Initializing eCAL with mode: network_udp[0m
[1;32m[Server] Waiting for RPC calls (method: Ping)[0m
[1;32m[Server] Received RPC request: PING[0m
[1;32m[Server] Responding with: PONG[0m
</msg>
<arg>\n[CONTAINER LOG: SERVER]\n${server_logs}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-24T12:46:24.601603" elapsed="0.000189"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[CONTAINER LOG: CLIENT]\n${client_logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T12:46:24.601894" elapsed="0.000164"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-24T12:46:24.602261" level="INFO">
[CONTAINER LOG: CLIENT]
[Entrypoint] Starting client in mode network_udp...
[1;33m[Client] Initializing eCAL with mode: network_udp[0m
[1;33m[Client] Waiting for server connection...[0m
[1;32m[Client] Connected. Calling 'Ping'...[0m
[1;32m[Client] Server response: PONG[0m
</msg>
<arg>\n[CONTAINER LOG: CLIENT]\n${client_logs}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-24T12:46:24.602160" elapsed="0.000135"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>RPC Ping Test (UDP)</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-07-24T12:46:24.602363" elapsed="0.000108"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${CLIENT_NAME}</arg>
<status status="PASS" start="2025-07-24T12:46:24.602581" elapsed="0.005026"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${SERVER_NAME}</arg>
<status status="PASS" start="2025-07-24T12:46:24.607694" elapsed="10.078011"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-24T12:46:35.686132" level="INFO">Slept 1 second.</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-24T12:46:34.685852" elapsed="1.000397"/>
</kw>
<status status="PASS" start="2025-07-24T12:46:21.793230" elapsed="13.893110"/>
</kw>
<tag>rpc_server_client_ping_test</tag>
<status status="PASS" start="2025-07-24T12:46:21.792722" elapsed="13.893736"/>
</test>
<status status="PASS" start="2025-07-24T12:46:11.591635" elapsed="24.095636"/>
</suite>
<suite id="s1-s7" name="Rpc Reconnect Test" source="/home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/rpc_reconnect_test/robottests/rpc_reconnect_test.robot">
<kw name="Init Test Context" type="SETUP">
<kw name="Set Test Context" owner="GlobalPathsLibrary">
<arg>rpc_reconnect_test</arg>
<arg>rpc_reconnect_test</arg>
<doc>Sets the test folder and tag prefix if it's a valid test case.
The folder must exist under integration_tests/ and contain typical test structure.</doc>
<status status="PASS" start="2025-07-24T12:46:35.690465" elapsed="0.000155"/>
</kw>
<kw name="Get Build Script Path" owner="GlobalPathsLibrary">
<msg time="2025-07-24T12:46:35.690792" level="INFO">${build} = /home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/rpc_reconnect_test/scripts/build_images.sh</msg>
<var>${build}</var>
<status status="PASS" start="2025-07-24T12:46:35.690700" elapsed="0.000112"/>
</kw>
<kw name="Get Build Script Args" owner="GlobalPathsLibrary">
<msg time="2025-07-24T12:46:35.690953" level="INFO">${args} = ['rpc_reconnect_test']</msg>
<var>${args}</var>
<status status="PASS" start="2025-07-24T12:46:35.690877" elapsed="0.000093"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-07-24T12:46:35.691173" level="INFO">${BUILD_SCRIPT} = /home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/rpc_reconnect_test/scripts/build_images.sh</msg>
<arg>${BUILD_SCRIPT}</arg>
<arg>${build}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-07-24T12:46:35.691044" elapsed="0.000156"/>
</kw>
<kw name="Create Docker Network With Subnet" owner="MyDockerLibrary">
<arg>${NETWORK}</arg>
<arg>172.28.0.0/16</arg>
<doc>Creates a Docker bridge network with a given subnet if it does not already exist.</doc>
<status status="PASS" start="2025-07-24T12:46:35.691265" elapsed="0.063070"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>[SETUP] Building Docker image...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T12:46:35.754514" elapsed="0.000207"/>
</kw>
<kw name="Run Process" owner="Process">
<msg time="2025-07-24T12:46:35.755029" level="INFO">Starting process:
/home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/rpc_reconnect_test/scripts/build_images.sh rpc_reconnect_test</msg>
<msg time="2025-07-24T12:46:35.755357" level="INFO">Waiting for process to complete.</msg>
<msg time="2025-07-24T12:46:43.635597" level="INFO">Process completed.</msg>
<msg time="2025-07-24T12:46:43.635761" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<var>${result}</var>
<arg>${BUILD_SCRIPT}</arg>
<arg>@{args}</arg>
<doc>Runs a process and waits for it to complete.</doc>
<status status="PASS" start="2025-07-24T12:46:35.754837" elapsed="7.880949"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-24T12:46:43.636413" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${result.rc}</arg>
<arg>0</arg>
<arg>Failed to build Docker image!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-24T12:46:43.635933" elapsed="0.000529"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-24T12:46:46.636812" level="INFO">Slept 3 seconds.</msg>
<arg>3s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-24T12:46:43.636580" elapsed="3.000355"/>
</kw>
<status status="PASS" start="2025-07-24T12:46:35.690303" elapsed="10.946740"/>
</kw>
<test id="s1-s7-t1" name="RPC Reconnect Test" line="28">
<kw name="Run RPC Reconnect Test">
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Starting RPC Reconnect Test...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T12:46:46.637924" elapsed="0.000118"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T12:46:46.638322" level="INFO">${IMAGE} = rpc_reconnect_test_network_udp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_network_udp</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T12:46:46.638153" elapsed="0.000195"/>
</kw>
<kw name="Start Container With Ip" owner="MyDockerLibrary">
<arg>rpc_server</arg>
<arg>${IMAGE}</arg>
<arg>server</arg>
<arg>network_udp</arg>
<arg>network=${NETWORK}</arg>
<arg>ip=${SERVER_IP}</arg>
<status status="PASS" start="2025-07-24T12:46:46.638421" elapsed="0.137642"/>
</kw>
<kw name="Start Container With Ip" owner="MyDockerLibrary">
<arg>rpc_client</arg>
<arg>${IMAGE}</arg>
<arg>client</arg>
<arg>network_udp</arg>
<arg>network=${NETWORK}</arg>
<arg>ip=${CLIENT_IP}</arg>
<status status="PASS" start="2025-07-24T12:46:46.776284" elapsed="0.131288"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-24T12:46:48.908016" level="INFO">Slept 2 seconds.</msg>
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-24T12:46:46.907742" elapsed="2.000379"/>
</kw>
<kw name="Disconnect Container From Network" owner="MyDockerLibrary">
<arg>rpc_client</arg>
<arg>${NETWORK}</arg>
<status status="PASS" start="2025-07-24T12:46:48.908268" elapsed="0.023737"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-24T12:46:54.932690" level="INFO">Slept 6 seconds.</msg>
<arg>6s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-24T12:46:48.932355" elapsed="6.000450"/>
</kw>
<kw name="Reconnect Container To Network With Ip" owner="MyDockerLibrary">
<arg>rpc_client</arg>
<arg>${NETWORK}</arg>
<arg>${CLIENT_IP}</arg>
<status status="PASS" start="2025-07-24T12:46:54.932974" elapsed="0.010094"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-24T12:46:56.943628" level="INFO">Slept 2 seconds.</msg>
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-24T12:46:54.943257" elapsed="2.000486"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-07-24T12:46:56.946626" level="INFO">${log_cli} = [Entrypoint] Starting client in mode network_udp...
[Client] Initializing eCAL with mode: network_udp
[Client] Waiting for server...
[Client][Initial] Calling RPC 'Ping'...
[Client][Initial] Response:...</msg>
<var>${log_cli}</var>
<arg>rpc_client</arg>
<status status="PASS" start="2025-07-24T12:46:56.943916" elapsed="0.002737"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-07-24T12:46:56.948821" level="INFO">${log_srv} = [Entrypoint] Starting server in mode network_udp...
[1;33m[Server] Initializing eCAL with mode: network_udp[0m
[1;32m[Server] Waiting for RPC calls (method: Ping)[0m
[1;32m[Server] Received RPC r...</msg>
<var>${log_srv}</var>
<arg>rpc_server</arg>
<status status="PASS" start="2025-07-24T12:46:56.946741" elapsed="0.002107"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[CONTAINER LOG: CLIENT]\n${log_cli}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T12:46:56.948932" elapsed="0.000167"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[CONTAINER LOG: SERVER]\n${log_srv}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T12:46:56.949201" elapsed="0.000139"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-24T12:46:56.949577" level="INFO">
[CONTAINER LOG: CLIENT]
[Entrypoint] Starting client in mode network_udp...
[Client] Initializing eCAL with mode: network_udp
[Client] Waiting for server...
[Client][Initial] Calling RPC 'Ping'...
[Client][Initial] Response: PONG
[Client] Trying to reconnect and call again...
[Client][Reconnect] Calling RPC 'Ping'...
[Client][Reconnect] Response: PONG
[Client] Total PONGs received: 2
[Client]  Reconnect test passed.
</msg>
<arg>\n[CONTAINER LOG: CLIENT]\n${log_cli}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-24T12:46:56.949447" elapsed="0.000166"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-24T12:46:56.949777" level="INFO">
[CONTAINER LOG: SERVER]
[Entrypoint] Starting server in mode network_udp...
[1;33m[Server] Initializing eCAL with mode: network_udp[0m
[1;32m[Server] Waiting for RPC calls (method: Ping)[0m
[1;32m[Server] Received RPC request: PING[0m
[1;32m[Server] Responding with: PONG[0m
[1;32m[Server] Received RPC request: PING[0m
[1;32m[Server] Responding with: PONG[0m
</msg>
<arg>\n[CONTAINER LOG: SERVER]\n${log_srv}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-24T12:46:56.949686" elapsed="0.000124"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-07-24T12:46:56.950887" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>rpc_client</arg>
<status status="PASS" start="2025-07-24T12:46:56.949875" elapsed="0.001036"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-24T12:46:56.951128" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Client failed after reconnect!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-24T12:46:56.950993" elapsed="0.000178"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>RPC Reconnect Test</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-07-24T12:46:56.951246" elapsed="0.000114"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>rpc_client</arg>
<status status="PASS" start="2025-07-24T12:46:56.951451" elapsed="0.005203"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>rpc_server</arg>
<status status="PASS" start="2025-07-24T12:46:56.956738" elapsed="10.120395"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-24T12:47:08.077588" level="INFO">Slept 1 second.</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-24T12:47:07.077282" elapsed="1.000414"/>
</kw>
<status status="PASS" start="2025-07-24T12:46:46.637710" elapsed="21.440065"/>
</kw>
<tag>rpc_reconnect</tag>
<status status="PASS" start="2025-07-24T12:46:46.637157" elapsed="21.440724"/>
</test>
<test id="s1-s7-t2" name="RPC Reconnect Test2" line="32">
<kw name="Run RPC Reconnect Test2">
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Starting RPC Reconnect Test...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T12:47:08.079604" elapsed="0.000120"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T12:47:08.079963" level="INFO">${IMAGE} = rpc_reconnect_test_network_udp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_network_udp</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T12:47:08.079829" elapsed="0.000154"/>
</kw>
<kw name="Start Container With Ip" owner="MyDockerLibrary">
<arg>rpc_server</arg>
<arg>${IMAGE}</arg>
<arg>server</arg>
<arg>network_udp</arg>
<arg>network=${NETWORK}</arg>
<arg>ip=${SERVER_IP}</arg>
<status status="PASS" start="2025-07-24T12:47:08.080051" elapsed="0.139846"/>
</kw>
<kw name="Start Container With Ip" owner="MyDockerLibrary">
<arg>rpc_client</arg>
<arg>${IMAGE}</arg>
<arg>client</arg>
<arg>network_udp</arg>
<arg>network=${NETWORK}</arg>
<arg>ip=${CLIENT_IP}</arg>
<status status="PASS" start="2025-07-24T12:47:08.220117" elapsed="0.137164"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-24T12:47:10.357832" level="INFO">Slept 2 seconds.</msg>
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-24T12:47:08.357489" elapsed="2.000543"/>
</kw>
<kw name="Disconnect Container From Network" owner="MyDockerLibrary">
<arg>rpc_server</arg>
<arg>${NETWORK}</arg>
<status status="PASS" start="2025-07-24T12:47:10.358199" elapsed="0.022689"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-24T12:47:16.381416" level="INFO">Slept 6 seconds.</msg>
<arg>6s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-24T12:47:10.381090" elapsed="6.000446"/>
</kw>
<kw name="Reconnect Container To Network With Ip" owner="MyDockerLibrary">
<arg>rpc_server</arg>
<arg>${NETWORK}</arg>
<arg>${SERVER_IP}</arg>
<status status="PASS" start="2025-07-24T12:47:16.381736" elapsed="0.010541"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-24T12:47:18.392807" level="INFO">Slept 2 seconds.</msg>
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-24T12:47:16.392463" elapsed="2.000451"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-07-24T12:47:18.395610" level="INFO">${log_cli} = [Entrypoint] Starting client in mode network_udp...
[Client] Initializing eCAL with mode: network_udp
[Client] Waiting for server...
[Client][Initial] Calling RPC 'Ping'...
[Client][Initial] Response:...</msg>
<var>${log_cli}</var>
<arg>rpc_client</arg>
<status status="PASS" start="2025-07-24T12:47:18.393064" elapsed="0.002574"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-07-24T12:47:18.397532" level="INFO">${log_srv} = [Entrypoint] Starting server in mode network_udp...
[1;33m[Server] Initializing eCAL with mode: network_udp[0m
[1;32m[Server] Waiting for RPC calls (method: Ping)[0m
[1;32m[Server] Received RPC r...</msg>
<var>${log_srv}</var>
<arg>rpc_server</arg>
<status status="PASS" start="2025-07-24T12:47:18.395728" elapsed="0.001857"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[CONTAINER LOG: CLIENT]\n${log_cli}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T12:47:18.397672" elapsed="0.000155"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[CONTAINER LOG: SERVER]\n${log_srv}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T12:47:18.397929" elapsed="0.000157"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-24T12:47:18.398322" level="INFO">
[CONTAINER LOG: CLIENT]
[Entrypoint] Starting client in mode network_udp...
[Client] Initializing eCAL with mode: network_udp
[Client] Waiting for server...
[Client][Initial] Calling RPC 'Ping'...
[Client][Initial] Response: PONG
[Client] Trying to reconnect and call again...
[Client][Reconnect] Calling RPC 'Ping'...
[Client][Reconnect] Response: PONG
[Client] Total PONGs received: 2
[Client]  Reconnect test passed.
</msg>
<arg>\n[CONTAINER LOG: CLIENT]\n${log_cli}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-24T12:47:18.398191" elapsed="0.000176"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-24T12:47:18.398610" level="INFO">
[CONTAINER LOG: SERVER]
[Entrypoint] Starting server in mode network_udp...
[1;33m[Server] Initializing eCAL with mode: network_udp[0m
[1;32m[Server] Waiting for RPC calls (method: Ping)[0m
[1;32m[Server] Received RPC request: PING[0m
[1;32m[Server] Responding with: PONG[0m
[1;32m[Server] Received RPC request: PING[0m
[1;32m[Server] Responding with: PONG[0m
</msg>
<arg>\n[CONTAINER LOG: SERVER]\n${log_srv}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-24T12:47:18.398463" elapsed="0.000199"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-07-24T12:47:18.399782" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>rpc_client</arg>
<status status="PASS" start="2025-07-24T12:47:18.398760" elapsed="0.001043"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-24T12:47:18.400011" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Client failed after reconnect!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-24T12:47:18.399883" elapsed="0.000170"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>RPC Reconnect Test</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-07-24T12:47:18.400125" elapsed="0.000115"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>rpc_client</arg>
<status status="PASS" start="2025-07-24T12:47:18.400345" elapsed="0.005350"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>rpc_server</arg>
<status status="PASS" start="2025-07-24T12:47:18.405776" elapsed="10.119019"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-24T12:47:29.525182" level="INFO">Slept 1 second.</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-24T12:47:28.524941" elapsed="1.000340"/>
</kw>
<status status="PASS" start="2025-07-24T12:47:08.079377" elapsed="21.445984"/>
</kw>
<tag>rpc_reconnect</tag>
<status status="PASS" start="2025-07-24T12:47:08.078990" elapsed="21.446477"/>
</test>
<status status="PASS" start="2025-07-24T12:46:35.687906" elapsed="53.838493"/>
</suite>
<suite id="s1-s8" name="Sub Crash" source="/home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/sub_crash/robottests/sub_crash.robot">
<kw name="Init Test Context" type="SETUP">
<kw name="Set Test Context" owner="GlobalPathsLibrary">
<arg>sub_crash</arg>
<arg>sub_crash</arg>
<doc>Sets the test folder and tag prefix if it's a valid test case.
The folder must exist under integration_tests/ and contain typical test structure.</doc>
<status status="PASS" start="2025-07-24T12:47:29.529699" elapsed="0.000139"/>
</kw>
<kw name="Get Build Script Path" owner="GlobalPathsLibrary">
<msg time="2025-07-24T12:47:29.530005" level="INFO">${build} = /home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/sub_crash/scripts/build_images.sh</msg>
<var>${build}</var>
<status status="PASS" start="2025-07-24T12:47:29.529916" elapsed="0.000109"/>
</kw>
<kw name="Get Network Name" owner="GlobalPathsLibrary">
<msg time="2025-07-24T12:47:29.530164" level="INFO">${net} = ecal_test_net</msg>
<var>${net}</var>
<status status="PASS" start="2025-07-24T12:47:29.530088" elapsed="0.000093"/>
</kw>
<kw name="Get Build Script Args" owner="GlobalPathsLibrary">
<msg time="2025-07-24T12:47:29.530316" level="INFO">${args} = ['sub_crash']</msg>
<var>${args}</var>
<status status="PASS" start="2025-07-24T12:47:29.530242" elapsed="0.000090"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-07-24T12:47:29.530535" level="INFO">${BUILD_SCRIPT} = /home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/sub_crash/scripts/build_images.sh</msg>
<arg>${BUILD_SCRIPT}</arg>
<arg>${build}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-07-24T12:47:29.530406" elapsed="0.000191"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-07-24T12:47:29.530790" level="INFO">${NETWORK} = ecal_test_net</msg>
<arg>${NETWORK}</arg>
<arg>${net}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-07-24T12:47:29.530674" elapsed="0.000142"/>
</kw>
<kw name="Get Test Description" owner="GlobalPathsLibrary">
<msg time="2025-07-24T12:47:29.531027" level="INFO">${desc} = Test Objective:
Ensure that a second subscriber continues to receive messages even if one subscriber crashes.

Test Scenario:
- One publisher (`test_publisher`) sends continuous messages (value 43).
-...</msg>
<var>${desc}</var>
<doc>Reads the *** Comments *** section from the .robot file and returns it as a string.</doc>
<status status="PASS" start="2025-07-24T12:47:29.530882" elapsed="0.000164"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-24T12:47:29.531240" level="INFO">Test Objective:
Ensure that a second subscriber continues to receive messages even if one subscriber crashes.

Test Scenario:
- One publisher (`test_publisher`) sends continuous messages (value 43).
- Two subscribers are started:
1. `crash_subscriber`: receives a few messages and then crashes.
2. `test_subscriber`: receives messages throughout the test duration.
- A monitoring process tracks all components.

Success Criteria:
- `test_subscriber` must receive a number of messages.
- `test_subscriber` must exit with code 0.
- The crash of one subscriber does not affect the continued communication of the other.</msg>
<arg>${desc}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-24T12:47:29.531156" elapsed="0.000115"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>[SETUP] Building Docker image...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T12:47:29.531336" elapsed="0.000087"/>
</kw>
<kw name="Run Process" owner="Process">
<msg time="2025-07-24T12:47:29.531735" level="INFO">Starting process:
/home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/sub_crash/scripts/build_images.sh sub_crash</msg>
<msg time="2025-07-24T12:47:29.532112" level="INFO">Waiting for process to complete.</msg>
<msg time="2025-07-24T12:47:38.571769" level="INFO">Process completed.</msg>
<msg time="2025-07-24T12:47:38.571932" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<var>${result}</var>
<arg>${BUILD_SCRIPT}</arg>
<arg>@{args}</arg>
<doc>Runs a process and waits for it to complete.</doc>
<status status="PASS" start="2025-07-24T12:47:29.531537" elapsed="9.040421"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-24T12:47:38.572615" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${result.rc}</arg>
<arg>0</arg>
<arg>Docker build failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-24T12:47:38.572110" elapsed="0.000558"/>
</kw>
<kw name="Create Docker Network" owner="MyDockerLibrary">
<arg>${NETWORK}</arg>
<status status="PASS" start="2025-07-24T12:47:38.572753" elapsed="0.006811"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-24T12:47:41.579934" level="INFO">Slept 3 seconds.</msg>
<arg>3s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-24T12:47:38.579682" elapsed="3.000366"/>
</kw>
<status status="PASS" start="2025-07-24T12:47:29.529503" elapsed="12.050639"/>
</kw>
<test id="s1-s8-t1" name="Network Communication Continues After Subscriber Crash (UDP)" line="30">
<kw name="Run Network Communication Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T12:47:41.581508" level="INFO">${IMAGE} = sub_crash_network_udp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T12:47:41.581355" elapsed="0.000173"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T12:47:41.581707" level="INFO">${TOPIC} = test_topic</msg>
<var>${TOPIC}</var>
<arg>test_topic</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T12:47:41.581622" elapsed="0.000102"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T12:47:41.581901" level="INFO">${CRASH_SUB} = crash_sub_network_udp</msg>
<var>${CRASH_SUB}</var>
<arg>crash_sub_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T12:47:41.581790" elapsed="0.000129"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T12:47:41.582090" level="INFO">${TEST_SUB} = test_sub_network_udp</msg>
<var>${TEST_SUB}</var>
<arg>test_sub_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T12:47:41.581988" elapsed="0.000118"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T12:47:41.582269" level="INFO">${TEST_PUB} = test_pub_network_udp</msg>
<var>${TEST_PUB}</var>
<arg>test_pub_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T12:47:41.582169" elapsed="0.000117"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Starting subscriber crash continuity test with ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T12:47:41.582350" elapsed="0.000118"/>
</kw>
<kw name="Create Docker Network" owner="MyDockerLibrary">
<arg>${NETWORK}</arg>
<status status="PASS" start="2025-07-24T12:47:41.582579" elapsed="0.007426"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${CRASH_SUB}</arg>
<arg>${IMAGE}</arg>
<arg>crash_subscriber</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${CRASH_SUB}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-24T12:47:41.590160" elapsed="0.164200"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${TEST_SUB}</arg>
<arg>${IMAGE}</arg>
<arg>test_subscriber</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${TEST_SUB}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-24T12:47:41.754526" elapsed="0.121701"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${TEST_PUB}</arg>
<arg>${IMAGE}</arg>
<arg>test_publisher</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${TEST_PUB}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-24T12:47:41.876458" elapsed="0.122994"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${CRASH_SUB}</arg>
<status status="PASS" start="2025-07-24T12:47:41.999686" elapsed="7.089026"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${TEST_SUB}</arg>
<status status="PASS" start="2025-07-24T12:47:49.088890" elapsed="26.847177"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${TEST_PUB}</arg>
<status status="PASS" start="2025-07-24T12:48:15.936277" elapsed="0.001706"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-07-24T12:48:15.940900" level="INFO">${test_sub_logs} = [Entrypoint] Starting crash publisher in mode network_udp

[Test_Subscriber] Waiting for messages...
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Receive...</msg>
<var>${test_sub_logs}</var>
<arg>${TEST_SUB}</arg>
<status status="PASS" start="2025-07-24T12:48:15.938112" elapsed="0.002825"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[SUBSCRIBER CONTAINER OUTPUT]\n${test_sub_logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T12:48:15.941072" elapsed="0.000182"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-24T12:48:15.941535" level="INFO">
[SUBSCRIBER CONTAINER OUTPUT]
[Entrypoint] Starting crash publisher in mode network_udp

[Test_Subscriber] Waiting for messages...
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43

[✓] Communication successful, received 30 messages.
</msg>
<arg>\n[SUBSCRIBER CONTAINER OUTPUT]\n${test_sub_logs}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-24T12:48:15.941364" elapsed="0.000318"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-07-24T12:48:15.944255" level="INFO">${crash_sub_logs} = [Entrypoint] Starting crash subscriber in mode network_udp

[Crash Subscriber] Registered and sleeping before crash...

[Crash_Subscriber] Received value: 43
[Crash_Subscriber] Received value: 43
[Cra...</msg>
<var>${crash_sub_logs}</var>
<arg>${CRASH_SUB}</arg>
<status status="PASS" start="2025-07-24T12:48:15.941791" elapsed="0.002490"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[CRASH SUBSCRIBER CONTAINER OUTPUT]\n${crash_sub_logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T12:48:15.944367" elapsed="0.000156"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-24T12:48:15.944778" level="INFO">
[CRASH SUBSCRIBER CONTAINER OUTPUT]
[Entrypoint] Starting crash subscriber in mode network_udp

[Crash Subscriber] Registered and sleeping before crash...

[Crash_Subscriber] Received value: 43
[Crash_Subscriber] Received value: 43
[Crash_Subscriber] Received value: 43
[Crash_Subscriber] Received value: 43
[Crash_Subscriber] Received value: 43

[Crash Subscriber] Received 5 messages before crash.

[Crash Subscriber] Simulating crash now.

./entrypoint.sh: line 61:     7 Aborted                 (core dumped) ./crash_subscriber $ARGS $EXTRA
</msg>
<arg>\n[CRASH SUBSCRIBER CONTAINER OUTPUT]\n${crash_sub_logs}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-24T12:48:15.944664" elapsed="0.000151"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-07-24T12:48:15.945795" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>${TEST_SUB}</arg>
<status status="PASS" start="2025-07-24T12:48:15.944888" elapsed="0.000930"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-24T12:48:15.946038" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Communication failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-24T12:48:15.945904" elapsed="0.000178"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Network Communication after one Subscriber crash ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-07-24T12:48:15.946158" elapsed="0.000152"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${CRASH_SUB}</arg>
<status status="PASS" start="2025-07-24T12:48:15.946395" elapsed="0.006954"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${TEST_SUB}</arg>
<status status="PASS" start="2025-07-24T12:48:15.953433" elapsed="0.005772"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${TEST_PUB}</arg>
<status status="PASS" start="2025-07-24T12:48:15.959291" elapsed="0.004805"/>
</kw>
<arg>network_udp</arg>
<arg>network</arg>
<status status="PASS" start="2025-07-24T12:47:41.580820" elapsed="34.383339"/>
</kw>
<tag>sub_crash_network_udp</tag>
<status status="PASS" start="2025-07-24T12:47:41.580212" elapsed="34.384040"/>
</test>
<test id="s1-s8-t2" name="Network Communication Continues After Publisher Crash (TCP)" line="34">
<kw name="Run Network Communication Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T12:48:15.966194" level="INFO">${IMAGE} = sub_crash_network_tcp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T12:48:15.966054" elapsed="0.000161"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T12:48:15.966374" level="INFO">${TOPIC} = test_topic</msg>
<var>${TOPIC}</var>
<arg>test_topic</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T12:48:15.966289" elapsed="0.000103"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T12:48:15.966590" level="INFO">${CRASH_SUB} = crash_sub_network_tcp</msg>
<var>${CRASH_SUB}</var>
<arg>crash_sub_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T12:48:15.966457" elapsed="0.000153"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T12:48:15.966786" level="INFO">${TEST_SUB} = test_sub_network_tcp</msg>
<var>${TEST_SUB}</var>
<arg>test_sub_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T12:48:15.966680" elapsed="0.000123"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T12:48:15.966969" level="INFO">${TEST_PUB} = test_pub_network_tcp</msg>
<var>${TEST_PUB}</var>
<arg>test_pub_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T12:48:15.966869" elapsed="0.000117"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Starting subscriber crash continuity test with ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T12:48:15.967049" elapsed="0.000128"/>
</kw>
<kw name="Create Docker Network" owner="MyDockerLibrary">
<arg>${NETWORK}</arg>
<status status="PASS" start="2025-07-24T12:48:15.967266" elapsed="0.006678"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${CRASH_SUB}</arg>
<arg>${IMAGE}</arg>
<arg>crash_subscriber</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${CRASH_SUB}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-24T12:48:15.974044" elapsed="0.124104"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${TEST_SUB}</arg>
<arg>${IMAGE}</arg>
<arg>test_subscriber</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${TEST_SUB}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-24T12:48:16.098329" elapsed="0.122338"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${TEST_PUB}</arg>
<arg>${IMAGE}</arg>
<arg>test_publisher</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${TEST_PUB}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-24T12:48:16.220851" elapsed="0.117077"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${CRASH_SUB}</arg>
<status status="PASS" start="2025-07-24T12:48:16.338120" elapsed="7.244332"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${TEST_SUB}</arg>
<status status="PASS" start="2025-07-24T12:48:23.582642" elapsed="26.701253"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${TEST_PUB}</arg>
<status status="PASS" start="2025-07-24T12:48:50.284105" elapsed="0.001544"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-07-24T12:48:50.288139" level="INFO">${test_sub_logs} = [Entrypoint] Starting crash publisher in mode network_tcp

[Test_Subscriber] Waiting for messages...
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Receive...</msg>
<var>${test_sub_logs}</var>
<arg>${TEST_SUB}</arg>
<status status="PASS" start="2025-07-24T12:48:50.285758" elapsed="0.002408"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[SUBSCRIBER CONTAINER OUTPUT]\n${test_sub_logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T12:48:50.288265" elapsed="0.000175"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-24T12:48:50.288692" level="INFO">
[SUBSCRIBER CONTAINER OUTPUT]
[Entrypoint] Starting crash publisher in mode network_tcp

[Test_Subscriber] Waiting for messages...
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
1753361328747 ms | 4e1c8b44e54c | ./test_subscriber | 7 | error | CTCPReaderLayer - TCPPubSub (Error) -SubscriberSession 172.18.0.3:48844-&gt;aaafaf4dc314:46559: Error reading header length: End of file
1753361328748 ms | 4e1c8b44e54c | ./test_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.3:54864: Failed connecting to publisher aaafaf4dc314:46559: Connection refused
1753361328749 ms | 4e1c8b44e54c | ./test_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.3:54878: Failed connecting to publisher aaafaf4dc314:46559: Connection refused
1753361328749 ms | 4e1c8b44e54c | ./test_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.3:54886: Failed connecting to publisher aaafaf4dc314:46559: Connection refused
1753361328750 ms | 4e1c8b44e54c | ./test_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.3:54892: Failed connecting to publisher aaafaf4dc314:46559: Connection refused
1753361328750 ms | 4e1c8b44e54c | ./test_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.3:54908: Failed connecting to publisher aaafaf4dc314:46559: Connection refused

[✓] Communication successful, received 30 messages.
</msg>
<arg>\n[SUBSCRIBER CONTAINER OUTPUT]\n${test_sub_logs}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-24T12:48:50.288562" elapsed="0.000182"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-07-24T12:48:50.290902" level="INFO">${crash_sub_logs} = [Entrypoint] Starting crash subscriber in mode network_tcp

[Crash Subscriber] Registered and sleeping before crash...

[Crash_Subscriber] Received value: 43
[Crash_Subscriber] Received value: 43
[Cra...</msg>
<var>${crash_sub_logs}</var>
<arg>${CRASH_SUB}</arg>
<status status="PASS" start="2025-07-24T12:48:50.288820" elapsed="0.002108"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[CRASH SUBSCRIBER CONTAINER OUTPUT]\n${crash_sub_logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T12:48:50.291015" elapsed="0.000151"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-24T12:48:50.291369" level="INFO">
[CRASH SUBSCRIBER CONTAINER OUTPUT]
[Entrypoint] Starting crash subscriber in mode network_tcp

[Crash Subscriber] Registered and sleeping before crash...

[Crash_Subscriber] Received value: 43
[Crash_Subscriber] Received value: 43
[Crash_Subscriber] Received value: 43
[Crash_Subscriber] Received value: 43
[Crash_Subscriber] Received value: 43

[Crash Subscriber] Received 5 messages before crash.

[Crash Subscriber] Simulating crash now.

./entrypoint.sh: line 61:     7 Aborted                 (core dumped) ./crash_subscriber $ARGS $EXTRA
</msg>
<arg>\n[CRASH SUBSCRIBER CONTAINER OUTPUT]\n${crash_sub_logs}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-24T12:48:50.291264" elapsed="0.000140"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-07-24T12:48:50.292345" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>${TEST_SUB}</arg>
<status status="PASS" start="2025-07-24T12:48:50.291476" elapsed="0.000893"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-24T12:48:50.292608" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Communication failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-24T12:48:50.292451" elapsed="0.000202"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Network Communication after one Subscriber crash ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-07-24T12:48:50.292732" elapsed="0.000148"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${CRASH_SUB}</arg>
<status status="PASS" start="2025-07-24T12:48:50.292968" elapsed="0.005009"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${TEST_SUB}</arg>
<status status="PASS" start="2025-07-24T12:48:50.298061" elapsed="0.005009"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${TEST_PUB}</arg>
<status status="PASS" start="2025-07-24T12:48:50.303155" elapsed="0.004958"/>
</kw>
<arg>network_tcp</arg>
<arg>network</arg>
<status status="PASS" start="2025-07-24T12:48:15.965846" elapsed="34.342328"/>
</kw>
<tag>pub_crash_network_tcp</tag>
<status status="PASS" start="2025-07-24T12:48:15.965408" elapsed="34.342859"/>
</test>
<test id="s1-s8-t3" name="Local Communication Continues After Subscriber Crash (SHM)" line="38">
<kw name="Run Local Communication Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T12:48:50.310132" level="INFO">${IMAGE} = sub_crash_local_shm</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T12:48:50.309992" elapsed="0.000162"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T12:48:50.310339" level="INFO">${CONTAINER} = local_all_local_shm</msg>
<var>${CONTAINER}</var>
<arg>local_all_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T12:48:50.310229" elapsed="0.000128"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Starting local test container with ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T12:48:50.310423" elapsed="0.000143"/>
</kw>
<kw name="Create Docker Network" owner="MyDockerLibrary">
<arg>${NETWORK}</arg>
<status status="PASS" start="2025-07-24T12:48:50.310679" elapsed="0.006677"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<arg>${IMAGE}</arg>
<arg>local_all</arg>
<arg>${layer_tag}</arg>
<status status="PASS" start="2025-07-24T12:48:50.317483" elapsed="0.102939"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-07-24T12:49:24.481039" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-24T12:48:50.420689" elapsed="34.060403"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-24T12:49:24.481515" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Local test failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-24T12:49:24.481280" elapsed="0.000335"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-07-24T12:49:24.484882" level="INFO">${logs} = [Entrypoint] Starting local test (pub/sub/monitor) in mode local_shm
Shared memory monitoring is enabled (domain: ecal_mon - queue size: 1024)

[Crash Subscriber] Registered and sleeping before crash....</msg>
<var>${logs}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-24T12:49:24.481729" elapsed="0.003180"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n\n[LOCAL TEST CONTAINER OUTPUT]\n\n${logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T12:49:24.484998" elapsed="0.000161"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Local Communication after one Subscriber crash ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-07-24T12:49:24.485261" elapsed="0.000196"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-24T12:49:24.485586" elapsed="0.005146"/>
</kw>
<arg>local_shm</arg>
<status status="PASS" start="2025-07-24T12:48:50.309793" elapsed="34.181003"/>
</kw>
<tag>sub_crash_local_shm</tag>
<status status="PASS" start="2025-07-24T12:48:50.309401" elapsed="34.181490"/>
</test>
<test id="s1-s8-t4" name="Local Communication Continues After Subscriber Crash (UDP)" line="42">
<kw name="Run Local Communication Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T12:49:24.492217" level="INFO">${IMAGE} = sub_crash_local_udp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T12:49:24.492078" elapsed="0.000161"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T12:49:24.492423" level="INFO">${CONTAINER} = local_all_local_udp</msg>
<var>${CONTAINER}</var>
<arg>local_all_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T12:49:24.492314" elapsed="0.000127"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Starting local test container with ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T12:49:24.492509" elapsed="0.000154"/>
</kw>
<kw name="Create Docker Network" owner="MyDockerLibrary">
<arg>${NETWORK}</arg>
<status status="PASS" start="2025-07-24T12:49:24.492753" elapsed="0.006619"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<arg>${IMAGE}</arg>
<arg>local_all</arg>
<arg>${layer_tag}</arg>
<status status="PASS" start="2025-07-24T12:49:24.499469" elapsed="0.109866"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-07-24T12:49:58.674429" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-24T12:49:24.609608" elapsed="34.064871"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-24T12:49:58.674989" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Local test failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-24T12:49:58.674769" elapsed="0.000272"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-07-24T12:49:58.677903" level="INFO">${logs} = [Entrypoint] Starting local test (pub/sub/monitor) in mode local_udp
[Publisher] Waiting for at least 2 subscriber(s) on topic: test_topic

[Crash Subscriber] Registered and sleeping before crash...

...</msg>
<var>${logs}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-24T12:49:58.675138" elapsed="0.002790"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n\n[LOCAL TEST CONTAINER OUTPUT]\n\n${logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T12:49:58.678018" elapsed="0.000160"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Local Communication after one Subscriber crash ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-07-24T12:49:58.678277" elapsed="0.000172"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-24T12:49:58.678614" elapsed="0.004959"/>
</kw>
<arg>local_udp</arg>
<status status="PASS" start="2025-07-24T12:49:24.491880" elapsed="34.191760"/>
</kw>
<tag>sub_crash_local_udp</tag>
<status status="PASS" start="2025-07-24T12:49:24.491476" elapsed="34.192256"/>
</test>
<test id="s1-s8-t5" name="Local Communication Continues After Subscriber Crash (TCP)" line="46">
<kw name="Run Local Communication Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T12:49:58.685003" level="INFO">${IMAGE} = sub_crash_local_tcp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T12:49:58.684851" elapsed="0.000174"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T12:49:58.685212" level="INFO">${CONTAINER} = local_all_local_tcp</msg>
<var>${CONTAINER}</var>
<arg>local_all_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T12:49:58.685104" elapsed="0.000125"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Starting local test container with ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T12:49:58.685298" elapsed="0.000124"/>
</kw>
<kw name="Create Docker Network" owner="MyDockerLibrary">
<arg>${NETWORK}</arg>
<status status="PASS" start="2025-07-24T12:49:58.685526" elapsed="0.007905"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<arg>${IMAGE}</arg>
<arg>local_all</arg>
<arg>${layer_tag}</arg>
<status status="PASS" start="2025-07-24T12:49:58.693629" elapsed="0.107466"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-07-24T12:50:32.865425" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-24T12:49:58.801298" elapsed="34.064181"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-24T12:50:32.865945" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Local test failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-24T12:50:32.865716" elapsed="0.000313"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-07-24T12:50:32.869064" level="INFO">${logs} = [Entrypoint] Starting local test (pub/sub/monitor) in mode local_tcp
[Publisher] Waiting for at least 2 subscriber(s) on topic: test_topic

[Crash Subscriber] Registered and sleeping before crash...

...</msg>
<var>${logs}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-24T12:50:32.866135" elapsed="0.002958"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n\n[LOCAL TEST CONTAINER OUTPUT]\n\n${logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T12:50:32.869280" elapsed="0.000193"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Local Communication after one Subscriber crash ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-07-24T12:50:32.869637" elapsed="0.000192"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-24T12:50:32.869932" elapsed="0.005049"/>
</kw>
<arg>local_tcp</arg>
<status status="PASS" start="2025-07-24T12:49:58.684650" elapsed="34.190406"/>
</kw>
<tag>sub_crash_local_tcp</tag>
<status status="PASS" start="2025-07-24T12:49:58.684264" elapsed="34.190892"/>
</test>
<status status="PASS" start="2025-07-24T12:47:29.526994" elapsed="183.348795"/>
</suite>
<suite id="s1-s9" name="Sub Send Crash" source="/home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/sub_send_crash/robottests/sub_send_crash.robot">
<kw name="Init Test Context" type="SETUP">
<kw name="Set Test Context" owner="GlobalPathsLibrary">
<arg>sub_send_crash</arg>
<arg>sub_send_crash</arg>
<doc>Sets the test folder and tag prefix if it's a valid test case.
The folder must exist under integration_tests/ and contain typical test structure.</doc>
<status status="PASS" start="2025-07-24T12:50:32.879178" elapsed="0.000143"/>
</kw>
<kw name="Get Build Script Path" owner="GlobalPathsLibrary">
<msg time="2025-07-24T12:50:32.879491" level="INFO">${build} = /home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/sub_send_crash/scripts/build_images.sh</msg>
<var>${build}</var>
<status status="PASS" start="2025-07-24T12:50:32.879400" elapsed="0.000111"/>
</kw>
<kw name="Get Network Name" owner="GlobalPathsLibrary">
<msg time="2025-07-24T12:50:32.879677" level="INFO">${net} = ecal_test_net</msg>
<var>${net}</var>
<status status="PASS" start="2025-07-24T12:50:32.879594" elapsed="0.000101"/>
</kw>
<kw name="Get Build Script Args" owner="GlobalPathsLibrary">
<msg time="2025-07-24T12:50:32.879834" level="INFO">${args} = ['sub_send_crash']</msg>
<var>${args}</var>
<status status="PASS" start="2025-07-24T12:50:32.879759" elapsed="0.000092"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-07-24T12:50:32.880061" level="INFO">${BUILD_SCRIPT} = /home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/sub_send_crash/scripts/build_images.sh</msg>
<arg>${BUILD_SCRIPT}</arg>
<arg>${build}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-07-24T12:50:32.879926" elapsed="0.000164"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-07-24T12:50:32.880277" level="INFO">${NETWORK} = ecal_test_net</msg>
<arg>${NETWORK}</arg>
<arg>${net}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-07-24T12:50:32.880163" elapsed="0.000141"/>
</kw>
<kw name="Get Test Description" owner="GlobalPathsLibrary">
<msg time="2025-07-24T12:50:32.880521" level="INFO">${desc} = Test Objective:
This test verifies that if one subscriber crashes during the reception of a large message,
other subscribers or the publisher remain unaffected and stable.

Test Scenario:
- A `large_p...</msg>
<var>${desc}</var>
<doc>Reads the *** Comments *** section from the .robot file and returns it as a string.</doc>
<status status="PASS" start="2025-07-24T12:50:32.880372" elapsed="0.000192"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-24T12:50:32.880735" level="INFO">Test Objective:
This test verifies that if one subscriber crashes during the reception of a large message,
other subscribers or the publisher remain unaffected and stable.

Test Scenario:
- A `large_publisher` sends very large messages (~50MB+).
- One `crash_subscriber` is designed to crash during message reception (e.g., via simulated failure during callback).
- One `test_subscriber` continues running and must successfully receive all messages.
- In an additional test case, a variant with `zero_copy_mode` enabled is used to evaluate the performance and fault tolerance in a high-throughput configuration.

Success Criteria:
- The `test_subscriber` must receive messages without crashing and exit with code 0.
- The `crash_subscriber` should crash as intended.
- The `large_publisher` must remain operational and not be blocked or destabilized.
- In SHM mode with `zero_copy`, the system should handle the shared memory access without affecting other subscribers or the pubisher.

Notes:
- Zero-Copy mode is only applicable to Shared Memory (SHM) transport.
- The Local UDP test is skipped for large messages because of message size limitations.
- This test failes because of SHM with zero copy mode, which is a known issue in the current implementation.</msg>
<arg>${desc}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-24T12:50:32.880646" elapsed="0.000124"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>[SETUP] Building image...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T12:50:32.880839" elapsed="0.000092"/>
</kw>
<kw name="Run Process" owner="Process">
<msg time="2025-07-24T12:50:32.881215" level="INFO">Starting process:
/home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/sub_send_crash/scripts/build_images.sh sub_send_crash</msg>
<msg time="2025-07-24T12:50:32.881619" level="INFO">Waiting for process to complete.</msg>
<msg time="2025-07-24T12:50:42.226099" level="INFO">Process completed.</msg>
<msg time="2025-07-24T12:50:42.226260" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<var>${result}</var>
<arg>${BUILD_SCRIPT}</arg>
<arg>@{args}</arg>
<doc>Runs a process and waits for it to complete.</doc>
<status status="PASS" start="2025-07-24T12:50:32.881044" elapsed="9.345242"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-24T12:50:42.226928" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${result.rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-24T12:50:42.226440" elapsed="0.000542"/>
</kw>
<kw name="Create Docker Network" owner="MyDockerLibrary">
<arg>${NETWORK}</arg>
<status status="PASS" start="2025-07-24T12:50:42.227080" elapsed="0.007719"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-24T12:50:45.235225" level="INFO">Slept 3 seconds.</msg>
<arg>3s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-24T12:50:42.234954" elapsed="3.000379"/>
</kw>
<status status="PASS" start="2025-07-24T12:50:32.878991" elapsed="12.356426"/>
</kw>
<test id="s1-s9-t1" name="Crash During Reception (SHM)" line="36">
<kw name="Run Local Crash Receive Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T12:50:45.236381" level="INFO">${IMAGE} = sub_send_crash_local_shm</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T12:50:45.236220" elapsed="0.000181"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T12:50:45.236614" level="INFO">${CONTAINER} = local_all_local_shm</msg>
<var>${CONTAINER}</var>
<arg>local_all_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T12:50:45.236475" elapsed="0.000158"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Starting crash test in LOCAL mode: ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T12:50:45.236707" elapsed="0.000142"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<arg>${IMAGE}</arg>
<arg>local_all</arg>
<arg>${layer_tag}</arg>
<arg>test_topic</arg>
<arg>${CONTAINER}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-24T12:50:45.236931" elapsed="0.134591"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-24T12:51:20.372106" level="INFO">Slept 35 seconds.</msg>
<arg>35s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-24T12:50:45.371769" elapsed="35.000451"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-07-24T12:51:20.375198" level="INFO">${logs} = [Entrypoint] Starting all processes locally in one container (mode local_shm)
Shared memory monitoring is enabled (domain: ecal_mon - queue size: 1024)
[Publisher] Prepared 50MB message.
[Publisher] W...</msg>
<var>${logs}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-24T12:51:20.372393" elapsed="0.002833"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[LOCAL TEST CONTAINER OUTPUT]\n${logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T12:51:20.375330" elapsed="0.000172"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-24T12:51:20.375787" level="INFO">
[LOCAL TEST CONTAINER OUTPUT]
[Entrypoint] Starting all processes locally in one container (mode local_shm)
Shared memory monitoring is enabled (domain: ecal_mon - queue size: 1024)
[Publisher] Prepared 50MB message.
[Publisher] Waiting for at least 2 subscriber(s) on topic: test_topic
[Publisher] Found 2 subscriber(s). Proceeding to send messages.
[Crash_Sub] Simulating crash after 2 seconds during active reception
Shared memory monitoring is enabled (domain: ecal_mon - queue size: 1024)
[Crash_Sub] Listening to topic 'test_topic' in mode 'local_shm'
[Crash_Sub] Received 52428800 bytes
[Publisher] Subscriber detected. Starting to send.
[Publisher] Send result: ✓, size: 52428800 bytes
[Publisher] Send result: ✓, size: 52428800 bytes
[Publisher] Send result: ✓, size: 52428800 bytes
[Publisher] Finished sending.
Shared memory monitoring is enabled (domain: ecal_mon - queue size: 1024)
[Test_Sub] Ready and waiting...
[Test_Sub] Received 52428800 bytes (message 1)
[Test_Sub] Received 52428800 bytes (message 2)
[Test_Sub] Received 52428800 bytes (message 3)
[✓] Received 3 messages.
./entrypoint.sh: line 45:    14 Aborted                 (core dumped) ./crash_send_subscriber $ARGS
</msg>
<arg>\n[LOCAL TEST CONTAINER OUTPUT]\n${logs}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-24T12:51:20.375637" elapsed="0.000223"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-07-24T12:51:20.377082" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-24T12:51:20.375967" elapsed="0.001139"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-24T12:51:20.377333" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Local container failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-24T12:51:20.377192" elapsed="0.000185"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-07-24T12:51:20.379415" level="INFO">${logs} = [Entrypoint] Starting all processes locally in one container (mode local_shm)
Shared memory monitoring is enabled (domain: ecal_mon - queue size: 1024)
[Publisher] Prepared 50MB message.
[Publisher] W...</msg>
<var>${logs}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-24T12:51:20.377455" elapsed="0.001985"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Local Crash Receive Test ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-07-24T12:51:20.379522" elapsed="0.000190"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-24T12:51:20.379802" elapsed="0.005252"/>
</kw>
<arg>local_shm</arg>
<status status="PASS" start="2025-07-24T12:50:45.235962" elapsed="35.149151"/>
</kw>
<tag>crash_receive_local_shm</tag>
<status status="PASS" start="2025-07-24T12:50:45.235480" elapsed="35.149719"/>
</test>
<test id="s1-s9-t2" name="Crash During Reception (TCP)" line="50">
<kw name="Run Local Crash Receive Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T12:51:20.386445" level="INFO">${IMAGE} = sub_send_crash_local_tcp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T12:51:20.386308" elapsed="0.000158"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T12:51:20.386675" level="INFO">${CONTAINER} = local_all_local_tcp</msg>
<var>${CONTAINER}</var>
<arg>local_all_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T12:51:20.386538" elapsed="0.000155"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Starting crash test in LOCAL mode: ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T12:51:20.386761" elapsed="0.000129"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<arg>${IMAGE}</arg>
<arg>local_all</arg>
<arg>${layer_tag}</arg>
<arg>test_topic</arg>
<arg>${CONTAINER}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-24T12:51:20.386980" elapsed="0.133505"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-24T12:51:55.521053" level="INFO">Slept 35 seconds.</msg>
<arg>35s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-24T12:51:20.520727" elapsed="35.000433"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-07-24T12:51:55.524265" level="INFO">${logs} = [Entrypoint] Starting all processes locally in one container (mode local_tcp)
[Publisher] Prepared 50MB message.
[Publisher] Waiting for at least 2 subscriber(s) on topic: test_topic
1753361482520 ms ...</msg>
<var>${logs}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-24T12:51:55.521316" elapsed="0.002979"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[LOCAL TEST CONTAINER OUTPUT]\n${logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T12:51:55.524412" elapsed="0.000208"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-24T12:51:55.524882" level="INFO">
[LOCAL TEST CONTAINER OUTPUT]
[Entrypoint] Starting all processes locally in one container (mode local_tcp)
[Publisher] Prepared 50MB message.
[Publisher] Waiting for at least 2 subscriber(s) on topic: test_topic
1753361482520 ms | 2dbbc1837c77 | large_publisher | 7 | info | CTCPReaderLayer - TCPPubSub (Info) -Publisher :::0: Created publisher and waiting for clients.
1753361482521 ms | 2dbbc1837c77 | large_publisher | 7 | info | CTCPReaderLayer - TCPPubSub (Info) -Publisher :::45845: Subscriber ::ffff:172.18.0.2:56808 has connected.
1753361482521 ms | 2dbbc1837c77 | large_publisher | 7 | info | CTCPReaderLayer - TCPPubSub (Info) -Publisher :::45845: Subscriber ::ffff:172.18.0.2:56806 has connected.
[Publisher] Found 2 subscriber(s). Proceeding to send messages.
[Crash_Sub] Simulating crash after 2 seconds during active reception
[Crash_Sub] Listening to topic 'test_topic' in mode 'local_tcp'
[Crash_Sub] Received 52428800 bytes
[Publisher] Subscriber detected. Starting to send.
[Publisher] Send result: ✓, size: 52428800 bytes
1753361485073 ms | 2dbbc1837c77 | large_publisher | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -PublisherSession ::ffff:172.18.0.2:45845-&gt;?: Failed sending data: Broken pipe
[Publisher] Send result: ✓, size: 52428800 bytes
[Publisher] Send result: ✓, size: 52428800 bytes
[Publisher] Finished sending.
[Test_Sub] Ready and waiting...
[Test_Sub] Received 52428800 bytes (message 1)
[Test_Sub] Received 52428800 bytes (message 2)
[Test_Sub] Received 52428800 bytes (message 3)
1753361487090 ms | 2dbbc1837c77 | test_sub | 13 | error | CTCPReaderLayer - TCPPubSub (Error) -SubscriberSession 172.18.0.2:56808-&gt;2dbbc1837c77:45845: Error reading header length: End of file
1753361487091 ms | 2dbbc1837c77 | test_sub | 13 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:56820: Failed connecting to publisher 2dbbc1837c77:45845: Connection refused
1753361487091 ms | 2dbbc1837c77 | test_sub | 13 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:56830: Failed connecting to publisher 2dbbc1837c77:45845: Connection refused
1753361487091 ms | 2dbbc1837c77 | test_sub | 13 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:56834: Failed connecting to publisher 2dbbc1837c77:45845: Connection refused
1753361487091 ms | 2dbbc1837c77 | test_sub | 13 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:56848: Failed connecting to publisher 2dbbc1837c77:45845: Connection refused
1753361487092 ms | 2dbbc1837c77 | test_sub | 13 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:56864: Failed connecting to publisher 2dbbc1837c77:45845: Connection refused
[✓] Received 3 messages.
./entrypoint.sh: line 45:    14 Aborted                 (core dumped) ./crash_send_subscriber $ARGS
</msg>
<arg>\n[LOCAL TEST CONTAINER OUTPUT]\n${logs}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-24T12:51:55.524730" elapsed="0.000306"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-07-24T12:51:55.526412" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-24T12:51:55.525153" elapsed="0.001284"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-24T12:51:55.526681" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Local container failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-24T12:51:55.526521" elapsed="0.000204"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-07-24T12:51:55.528885" level="INFO">${logs} = [Entrypoint] Starting all processes locally in one container (mode local_tcp)
[Publisher] Prepared 50MB message.
[Publisher] Waiting for at least 2 subscriber(s) on topic: test_topic
1753361482520 ms ...</msg>
<var>${logs}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-24T12:51:55.526804" elapsed="0.002108"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Local Crash Receive Test ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-07-24T12:51:55.528995" elapsed="0.000155"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-24T12:51:55.529262" elapsed="0.004960"/>
</kw>
<arg>local_tcp</arg>
<status status="PASS" start="2025-07-24T12:51:20.386106" elapsed="35.148183"/>
</kw>
<tag>crash_receive_local_tcp</tag>
<status status="PASS" start="2025-07-24T12:51:20.385715" elapsed="35.148666"/>
</test>
<test id="s1-s9-t3" name="Crash During Reception (Network UDP)" line="54">
<kw name="Run Network Crash Receive Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T12:51:55.535713" level="INFO">${IMAGE} = sub_send_crash_network_udp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T12:51:55.535531" elapsed="0.000203"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T12:51:55.535907" level="INFO">${TOPIC} = test_topic</msg>
<var>${TOPIC}</var>
<arg>test_topic</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T12:51:55.535819" elapsed="0.000107"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T12:51:55.536103" level="INFO">${SUB_OK} = sub_ok_network_udp</msg>
<var>${SUB_OK}</var>
<arg>sub_ok_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T12:51:55.535993" elapsed="0.000127"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T12:51:55.536291" level="INFO">${SUB_CRASH} = sub_crash_network_udp</msg>
<var>${SUB_CRASH}</var>
<arg>sub_crash_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T12:51:55.536188" elapsed="0.000120"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T12:51:55.536473" level="INFO">${PUBLISHER} = pub_network_udp</msg>
<var>${PUBLISHER}</var>
<arg>pub_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T12:51:55.536372" elapsed="0.000118"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Starting crash test in NETWORK mode: ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T12:51:55.536582" elapsed="0.000129"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${SUB_OK}</arg>
<arg>${IMAGE}</arg>
<arg>test_subscriber</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${SUB_OK}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-24T12:51:55.536816" elapsed="0.132095"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${SUB_CRASH}</arg>
<arg>${IMAGE}</arg>
<arg>crash_subscriber</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${SUB_CRASH}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-24T12:51:55.669145" elapsed="0.128703"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${PUBLISHER}</arg>
<arg>${IMAGE}</arg>
<arg>large_publisher</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${PUBLISHER}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-24T12:51:55.798055" elapsed="0.126726"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${SUB_OK}</arg>
<status status="PASS" start="2025-07-24T12:51:55.924984" elapsed="30.815428"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${SUB_CRASH}</arg>
<status status="PASS" start="2025-07-24T12:52:26.740781" elapsed="0.001788"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${PUBLISHER}</arg>
<status status="PASS" start="2025-07-24T12:52:26.742711" elapsed="0.001109"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-07-24T12:52:26.746030" level="INFO">${log1} = [Entrypoint] Starting stable subscriber in mode network_udp
[Test_Sub] Ready and waiting...
[Test_Sub] Received 52428800 bytes (message 1)
[Test_Sub] Received 52428800 bytes (message 2)
[Test_Sub] Rec...</msg>
<var>${log1}</var>
<arg>${SUB_OK}</arg>
<status status="PASS" start="2025-07-24T12:52:26.743910" elapsed="0.002146"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-07-24T12:52:26.748169" level="INFO">${log2} = [Entrypoint] Starting crashing subscriber in mode network_udp
[Crash_Sub] Listening to topic 'test_topic' in mode 'network_udp'
[Crash_Sub] Received 52428800 bytes
[Crash_Sub] Simulating crash after 2...</msg>
<var>${log2}</var>
<arg>${SUB_CRASH}</arg>
<status status="PASS" start="2025-07-24T12:52:26.746141" elapsed="0.002054"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-07-24T12:52:26.750577" level="INFO">${log3} = [Entrypoint] Starting large publisher in mode network_udp
[Publisher] Prepared 50MB message.
[Publisher] Waiting for at least 2 subscriber(s) on topic: test_topic
[Publisher] Found 2 subscriber(s). Pr...</msg>
<var>${log3}</var>
<arg>${PUBLISHER}</arg>
<status status="PASS" start="2025-07-24T12:52:26.748276" elapsed="0.002330"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[LOG: SUBSCRIBER]\n${log1}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T12:52:26.750694" elapsed="0.000158"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[LOG: CRASH_SUBSCRIBER]\n${log2}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T12:52:26.750951" elapsed="0.000148"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[LOG: PUBLISHER]\n${log3}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T12:52:26.751208" elapsed="0.000185"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-24T12:52:26.751687" level="INFO">
[LOG: SUBSCRIBER]
[Entrypoint] Starting stable subscriber in mode network_udp
[Test_Sub] Ready and waiting...
[Test_Sub] Received 52428800 bytes (message 1)
[Test_Sub] Received 52428800 bytes (message 2)
[Test_Sub] Received 52428800 bytes (message 3)
[✓] Received 3 messages.
</msg>
<arg>\n[LOG: SUBSCRIBER]\n${log1}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-24T12:52:26.751512" elapsed="0.000227"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-24T12:52:26.751985" level="INFO">
[LOG: CRASH_SUBSCRIBER]
[Entrypoint] Starting crashing subscriber in mode network_udp
[Crash_Sub] Listening to topic 'test_topic' in mode 'network_udp'
[Crash_Sub] Received 52428800 bytes
[Crash_Sub] Simulating crash after 2 seconds during active reception
./entrypoint.sh: line 62:     7 Aborted                 (core dumped) ./crash_send_subscriber $ARGS $EXTRA
</msg>
<arg>\n[LOG: CRASH_SUBSCRIBER]\n${log2}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-24T12:52:26.751850" elapsed="0.000184"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-24T12:52:26.752284" level="INFO">
[LOG: PUBLISHER]
[Entrypoint] Starting large publisher in mode network_udp
[Publisher] Prepared 50MB message.
[Publisher] Waiting for at least 2 subscriber(s) on topic: test_topic
[Publisher] Found 2 subscriber(s). Proceeding to send messages.
[Publisher] Subscriber detected. Starting to send.
[Publisher] Send result: ✓, size: 52428800 bytes
[Publisher] Send result: ✓, size: 52428800 bytes
[Publisher] Send result: ✓, size: 52428800 bytes
[Publisher] Finished sending.
</msg>
<arg>\n[LOG: PUBLISHER]\n${log3}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-24T12:52:26.752137" elapsed="0.000205"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-07-24T12:52:26.753805" level="INFO">${exit1} = 0</msg>
<var>${exit1}</var>
<arg>${SUB_OK}</arg>
<status status="PASS" start="2025-07-24T12:52:26.752453" elapsed="0.001387"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-24T12:52:26.754138" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit1}</arg>
<arg>0</arg>
<arg>Stable subscriber failed unexpectedly!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-24T12:52:26.753956" elapsed="0.000248"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Network Crash Receive Test ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-07-24T12:52:26.754316" elapsed="0.000214"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${SUB_OK}</arg>
<status status="PASS" start="2025-07-24T12:52:26.754670" elapsed="0.005133"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${SUB_CRASH}</arg>
<status status="PASS" start="2025-07-24T12:52:26.759902" elapsed="0.005537"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${PUBLISHER}</arg>
<status status="PASS" start="2025-07-24T12:52:26.765538" elapsed="0.004720"/>
</kw>
<arg>network_udp</arg>
<arg>network</arg>
<status status="PASS" start="2025-07-24T12:51:55.535312" elapsed="31.235013"/>
</kw>
<tag>crash_receive_network_udp</tag>
<status status="PASS" start="2025-07-24T12:51:55.534915" elapsed="31.235507"/>
</test>
<test id="s1-s9-t4" name="Crash During Reception (Network TCP)" line="58">
<kw name="Run Network Crash Receive Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T12:52:26.772273" level="INFO">${IMAGE} = sub_send_crash_network_tcp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T12:52:26.772124" elapsed="0.000172"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T12:52:26.772456" level="INFO">${TOPIC} = test_topic</msg>
<var>${TOPIC}</var>
<arg>test_topic</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T12:52:26.772371" elapsed="0.000103"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T12:52:26.772701" level="INFO">${SUB_OK} = sub_ok_network_tcp</msg>
<var>${SUB_OK}</var>
<arg>sub_ok_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T12:52:26.772571" elapsed="0.000148"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T12:52:26.772901" level="INFO">${SUB_CRASH} = sub_crash_network_tcp</msg>
<var>${SUB_CRASH}</var>
<arg>sub_crash_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T12:52:26.772791" elapsed="0.000127"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T12:52:26.773085" level="INFO">${PUBLISHER} = pub_network_tcp</msg>
<var>${PUBLISHER}</var>
<arg>pub_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T12:52:26.772985" elapsed="0.000116"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Starting crash test in NETWORK mode: ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T12:52:26.773165" elapsed="0.000126"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${SUB_OK}</arg>
<arg>${IMAGE}</arg>
<arg>test_subscriber</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${SUB_OK}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-24T12:52:26.773394" elapsed="0.128622"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${SUB_CRASH}</arg>
<arg>${IMAGE}</arg>
<arg>crash_subscriber</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${SUB_CRASH}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-24T12:52:26.902216" elapsed="0.127166"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${PUBLISHER}</arg>
<arg>${IMAGE}</arg>
<arg>large_publisher</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${PUBLISHER}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-24T12:52:27.029666" elapsed="0.131504"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${SUB_OK}</arg>
<status status="PASS" start="2025-07-24T12:52:27.161389" elapsed="30.807442"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${SUB_CRASH}</arg>
<status status="PASS" start="2025-07-24T12:52:57.969034" elapsed="0.001396"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${PUBLISHER}</arg>
<status status="PASS" start="2025-07-24T12:52:57.970520" elapsed="0.001078"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-07-24T12:52:57.973869" level="INFO">${log1} = [Entrypoint] Starting stable subscriber in mode network_tcp
[Test_Sub] Ready and waiting...
[Test_Sub] Received 52428800 bytes (message 1)
[Test_Sub] Received 52428800 bytes (message 2)
[Test_Sub] Rec...</msg>
<var>${log1}</var>
<arg>${SUB_OK}</arg>
<status status="PASS" start="2025-07-24T12:52:57.971717" elapsed="0.002178"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-07-24T12:52:57.976004" level="INFO">${log2} = [Entrypoint] Starting crashing subscriber in mode network_tcp
[Crash_Sub] Listening to topic 'test_topic' in mode 'network_tcp'
[Crash_Sub] Simulating crash after 2 seconds during active reception
[Cr...</msg>
<var>${log2}</var>
<arg>${SUB_CRASH}</arg>
<status status="PASS" start="2025-07-24T12:52:57.973979" elapsed="0.002051"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-07-24T12:52:57.978280" level="INFO">${log3} = [Entrypoint] Starting large publisher in mode network_tcp
[Publisher] Prepared 50MB message.
[Publisher] Waiting for at least 2 subscriber(s) on topic: test_topic
1753361547904 ms | bb16e7c03ef4 | lar...</msg>
<var>${log3}</var>
<arg>${PUBLISHER}</arg>
<status status="PASS" start="2025-07-24T12:52:57.976115" elapsed="0.002190"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[LOG: SUBSCRIBER]\n${log1}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T12:52:57.978393" elapsed="0.000195"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[LOG: CRASH_SUBSCRIBER]\n${log2}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T12:52:57.978696" elapsed="0.000141"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[LOG: PUBLISHER]\n${log3}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T12:52:57.978931" elapsed="0.000139"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-24T12:52:57.979272" level="INFO">
[LOG: SUBSCRIBER]
[Entrypoint] Starting stable subscriber in mode network_tcp
[Test_Sub] Ready and waiting...
[Test_Sub] Received 52428800 bytes (message 1)
[Test_Sub] Received 52428800 bytes (message 2)
[Test_Sub] Received 52428800 bytes (message 3)
1753361552632 ms | 25366ba9fbff | test_sub | 7 | error | CTCPReaderLayer - TCPPubSub (Error) -SubscriberSession 172.18.0.2:51424-&gt;bb16e7c03ef4:46281: Error reading header length: End of file
1753361552632 ms | 25366ba9fbff | test_sub | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:48078: Failed connecting to publisher bb16e7c03ef4:46281: Connection refused
1753361552633 ms | 25366ba9fbff | test_sub | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:48094: Failed connecting to publisher bb16e7c03ef4:46281: Connection refused
1753361552633 ms | 25366ba9fbff | test_sub | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:48106: Failed connecting to publisher bb16e7c03ef4:46281: Connection refused
1753361552633 ms | 25366ba9fbff | test_sub | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:48108: Failed connecting to publisher bb16e7c03ef4:46281: Connection refused
1753361552634 ms | 25366ba9fbff | test_sub | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:48122: Failed connecting to publisher bb16e7c03ef4:46281: Connection refused
[✓] Received 3 messages.
</msg>
<arg>\n[LOG: SUBSCRIBER]\n${log1}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-24T12:52:57.979161" elapsed="0.000156"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-24T12:52:57.979476" level="INFO">
[LOG: CRASH_SUBSCRIBER]
[Entrypoint] Starting crashing subscriber in mode network_tcp
[Crash_Sub] Listening to topic 'test_topic' in mode 'network_tcp'
[Crash_Sub] Simulating crash after 2 seconds during active reception
[Crash_Sub] Received 52428800 bytes
./entrypoint.sh: line 62:     7 Aborted                 (core dumped) ./crash_send_subscriber $ARGS $EXTRA
</msg>
<arg>\n[LOG: CRASH_SUBSCRIBER]\n${log2}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-24T12:52:57.979387" elapsed="0.000120"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-24T12:52:57.979715" level="INFO">
[LOG: PUBLISHER]
[Entrypoint] Starting large publisher in mode network_tcp
[Publisher] Prepared 50MB message.
[Publisher] Waiting for at least 2 subscriber(s) on topic: test_topic
1753361547904 ms | bb16e7c03ef4 | large_publisher | 7 | info | CTCPReaderLayer - TCPPubSub (Info) -Publisher :::0: Created publisher and waiting for clients.
1753361547905 ms | bb16e7c03ef4 | large_publisher | 7 | info | CTCPReaderLayer - TCPPubSub (Info) -Publisher :::46281: Subscriber ::ffff:172.18.0.2:51424 has connected.
1753361547905 ms | bb16e7c03ef4 | large_publisher | 7 | info | CTCPReaderLayer - TCPPubSub (Info) -Publisher :::46281: Subscriber ::ffff:172.18.0.3:51682 has connected.
[Publisher] Found 2 subscriber(s). Proceeding to send messages.
[Publisher] Subscriber detected. Starting to send.
[Publisher] Send result: ✓, size: 52428800 bytes
[Publisher] Send result: ✓, size: 52428800 bytes
1753361550614 ms | bb16e7c03ef4 | large_publisher | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -PublisherSession ::ffff:172.18.0.4:46281-&gt;?: Failed sending data: Broken pipe
[Publisher] Send result: ✓, size: 52428800 bytes
[Publisher] Finished sending.
</msg>
<arg>\n[LOG: PUBLISHER]\n${log3}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-24T12:52:57.979614" elapsed="0.000141"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-07-24T12:52:57.980763" level="INFO">${exit1} = 0</msg>
<var>${exit1}</var>
<arg>${SUB_OK}</arg>
<status status="PASS" start="2025-07-24T12:52:57.979823" elapsed="0.000963"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-24T12:52:57.980995" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit1}</arg>
<arg>0</arg>
<arg>Stable subscriber failed unexpectedly!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-24T12:52:57.980868" elapsed="0.000169"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Network Crash Receive Test ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-07-24T12:52:57.981109" elapsed="0.000145"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${SUB_OK}</arg>
<status status="PASS" start="2025-07-24T12:52:57.981336" elapsed="0.006079"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${SUB_CRASH}</arg>
<status status="PASS" start="2025-07-24T12:52:57.987509" elapsed="0.004941"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${PUBLISHER}</arg>
<status status="PASS" start="2025-07-24T12:52:57.992568" elapsed="0.005071"/>
</kw>
<arg>network_tcp</arg>
<arg>network</arg>
<status status="PASS" start="2025-07-24T12:52:26.771899" elapsed="31.225856"/>
</kw>
<tag>crash_receive_network_tcp</tag>
<status status="PASS" start="2025-07-24T12:52:26.771451" elapsed="31.226404"/>
</test>
<status status="PASS" start="2025-07-24T12:50:32.876385" elapsed="145.122704"/>
</suite>
<status status="FAIL" start="2025-07-24T12:40:07.404950" elapsed="770.594868"/>
</suite>
<statistics>
<total>
<stat pass="25" fail="1" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">basic_pub_sub_local_shm</stat>
<stat pass="1" fail="0" skip="0">basic_pub_sub_local_tcp</stat>
<stat pass="1" fail="0" skip="0">basic_pub_sub_local_udp</stat>
<stat pass="1" fail="0" skip="0">basic_pub_sub_network_tcp</stat>
<stat pass="1" fail="0" skip="0">basic_pub_sub_network_udp</stat>
<stat pass="1" fail="0" skip="0">crash_receive_local_shm</stat>
<stat pass="1" fail="0" skip="0">crash_receive_local_tcp</stat>
<stat pass="1" fail="0" skip="0">crash_receive_network_tcp</stat>
<stat pass="1" fail="0" skip="0">crash_receive_network_udp</stat>
<stat pass="0" fail="1" skip="0">multi_pub_sub_local_shm</stat>
<stat pass="1" fail="0" skip="0">multi_pub_sub_local_udp</stat>
<stat pass="1" fail="0" skip="0">multi_pub_sub_network_tcp</stat>
<stat pass="1" fail="0" skip="0">multi_pub_sub_network_udp</stat>
<stat pass="1" fail="0" skip="0">network_crash_test</stat>
<stat pass="1" fail="0" skip="0">pub_crash_local_shm</stat>
<stat pass="2" fail="0" skip="0">pub_crash_network_tcp</stat>
<stat pass="1" fail="0" skip="0">pub_crash_network_udp</stat>
<stat pass="1" fail="0" skip="0">rpc_n_to_n_test</stat>
<stat pass="2" fail="0" skip="0">rpc_reconnect</stat>
<stat pass="1" fail="0" skip="0">rpc_server_client_ping_test</stat>
<stat pass="1" fail="0" skip="0">sub_crash_local_shm</stat>
<stat pass="1" fail="0" skip="0">sub_crash_local_tcp</stat>
<stat pass="1" fail="0" skip="0">sub_crash_local_udp</stat>
<stat pass="1" fail="0" skip="0">sub_crash_network_udp</stat>
</tag>
<suite>
<stat name="Basic Pub Sub &amp; Multi Pub Sub &amp; Network Crash &amp; Pub Crash &amp; Rpc N To N Test &amp; Rpc Ping Test &amp; Rpc Reconnect Test &amp; Sub Crash &amp; Sub Send Crash" id="s1" pass="25" fail="1" skip="0">Basic Pub Sub &amp; Multi Pub Sub &amp; Network Crash &amp; Pub Crash &amp; Rpc N To N Test &amp; Rpc Ping Test &amp; Rpc Reconnect Test &amp; Sub Crash &amp; Sub Send Crash</stat>
<stat name="Basic Pub Sub" id="s1-s1" pass="5" fail="0" skip="0">Basic Pub Sub &amp; Multi Pub Sub &amp; Network Crash &amp; Pub Crash &amp; Rpc N To N Test &amp; Rpc Ping Test &amp; Rpc Reconnect Test &amp; Sub Crash &amp; Sub Send Crash.Basic Pub Sub</stat>
<stat name="Multi Pub Sub" id="s1-s2" pass="3" fail="1" skip="0">Basic Pub Sub &amp; Multi Pub Sub &amp; Network Crash &amp; Pub Crash &amp; Rpc N To N Test &amp; Rpc Ping Test &amp; Rpc Reconnect Test &amp; Sub Crash &amp; Sub Send Crash.Multi Pub Sub</stat>
<stat name="Network Crash" id="s1-s3" pass="1" fail="0" skip="0">Basic Pub Sub &amp; Multi Pub Sub &amp; Network Crash &amp; Pub Crash &amp; Rpc N To N Test &amp; Rpc Ping Test &amp; Rpc Reconnect Test &amp; Sub Crash &amp; Sub Send Crash.Network Crash</stat>
<stat name="Pub Crash" id="s1-s4" pass="3" fail="0" skip="0">Basic Pub Sub &amp; Multi Pub Sub &amp; Network Crash &amp; Pub Crash &amp; Rpc N To N Test &amp; Rpc Ping Test &amp; Rpc Reconnect Test &amp; Sub Crash &amp; Sub Send Crash.Pub Crash</stat>
<stat name="Rpc N To N Test" id="s1-s5" pass="1" fail="0" skip="0">Basic Pub Sub &amp; Multi Pub Sub &amp; Network Crash &amp; Pub Crash &amp; Rpc N To N Test &amp; Rpc Ping Test &amp; Rpc Reconnect Test &amp; Sub Crash &amp; Sub Send Crash.Rpc N To N Test</stat>
<stat name="Rpc Ping Test" id="s1-s6" pass="1" fail="0" skip="0">Basic Pub Sub &amp; Multi Pub Sub &amp; Network Crash &amp; Pub Crash &amp; Rpc N To N Test &amp; Rpc Ping Test &amp; Rpc Reconnect Test &amp; Sub Crash &amp; Sub Send Crash.Rpc Ping Test</stat>
<stat name="Rpc Reconnect Test" id="s1-s7" pass="2" fail="0" skip="0">Basic Pub Sub &amp; Multi Pub Sub &amp; Network Crash &amp; Pub Crash &amp; Rpc N To N Test &amp; Rpc Ping Test &amp; Rpc Reconnect Test &amp; Sub Crash &amp; Sub Send Crash.Rpc Reconnect Test</stat>
<stat name="Sub Crash" id="s1-s8" pass="5" fail="0" skip="0">Basic Pub Sub &amp; Multi Pub Sub &amp; Network Crash &amp; Pub Crash &amp; Rpc N To N Test &amp; Rpc Ping Test &amp; Rpc Reconnect Test &amp; Sub Crash &amp; Sub Send Crash.Sub Crash</stat>
<stat name="Sub Send Crash" id="s1-s9" pass="4" fail="0" skip="0">Basic Pub Sub &amp; Multi Pub Sub &amp; Network Crash &amp; Pub Crash &amp; Rpc N To N Test &amp; Rpc Ping Test &amp; Rpc Reconnect Test &amp; Sub Crash &amp; Sub Send Crash.Sub Send Crash</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
