<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 7.3 (Python 3.12.3 on linux)" generated="2025-06-12T12:05:23.637639" rpa="false" schemaversion="5">
<suite id="s1" name="Sub Send Crash" source="/home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/sub_send_crash/robottests/sub_send_crash.robot">
<kw name="Init Test Context" type="SETUP">
<kw name="Set Test Context" owner="GlobalPathsLibrary">
<arg>sub_send_crash</arg>
<arg>sub_send_crash</arg>
<doc>Sets the test folder (e.g. basic_pub_sub or message_validation) and tag prefix (e.g. basic_pub_sub).
Should be called once in Suite Setup if you're using non-default test cases.</doc>
<status status="PASS" start="2025-06-12T12:05:23.731497" elapsed="0.000169"/>
</kw>
<kw name="Get Build Script Path" owner="GlobalPathsLibrary">
<msg time="2025-06-12T12:05:23.731901" level="INFO">${build} = /home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/sub_send_crash/scripts/build_images.sh</msg>
<var>${build}</var>
<status status="PASS" start="2025-06-12T12:05:23.731784" elapsed="0.000152"/>
</kw>
<kw name="Get Network Name" owner="GlobalPathsLibrary">
<msg time="2025-06-12T12:05:23.732107" level="INFO">${net} = ecal_test_net</msg>
<var>${net}</var>
<status status="PASS" start="2025-06-12T12:05:23.732019" elapsed="0.000114"/>
</kw>
<kw name="Get Build Script Args" owner="GlobalPathsLibrary">
<msg time="2025-06-12T12:05:23.732283" level="INFO">${args} = ['sub_send_crash']</msg>
<var>${args}</var>
<status status="PASS" start="2025-06-12T12:05:23.732201" elapsed="0.000101"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-06-12T12:05:23.732586" level="INFO">${BUILD_SCRIPT} = /home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/sub_send_crash/scripts/build_images.sh</msg>
<arg>${BUILD_SCRIPT}</arg>
<arg>${build}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-06-12T12:05:23.732417" elapsed="0.000203"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-06-12T12:05:23.732831" level="INFO">${NETWORK} = ecal_test_net</msg>
<arg>${NETWORK}</arg>
<arg>${net}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-06-12T12:05:23.732702" elapsed="0.000159"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>[SETUP] Building image...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-12T12:05:23.732930" elapsed="0.000110"/>
</kw>
<kw name="Run Process" owner="Process">
<msg time="2025-06-12T12:05:23.733340" level="INFO">Starting process:
/home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/sub_send_crash/scripts/build_images.sh sub_send_crash</msg>
<msg time="2025-06-12T12:05:23.733791" level="INFO">Waiting for process to complete.</msg>
<msg time="2025-06-12T12:05:33.450690" level="INFO">Process completed.</msg>
<msg time="2025-06-12T12:05:33.450867" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<var>${result}</var>
<arg>${BUILD_SCRIPT}</arg>
<arg>@{args}</arg>
<doc>Runs a process and waits for it to complete.</doc>
<status status="PASS" start="2025-06-12T12:05:23.733150" elapsed="9.717747"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-06-12T12:05:33.451550" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${result.rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-06-12T12:05:33.451052" elapsed="0.000560"/>
</kw>
<kw name="Create Docker Network" owner="MyDockerLibrary">
<arg>${NETWORK}</arg>
<status status="PASS" start="2025-06-12T12:05:33.451714" elapsed="0.007700"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-06-12T12:05:36.459797" level="INFO">Slept 3 seconds.</msg>
<arg>3s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-06-12T12:05:33.459558" elapsed="3.000350"/>
</kw>
<status status="PASS" start="2025-06-12T12:05:23.731015" elapsed="12.728981"/>
</kw>
<test id="s1-t1" name="Crash During Reception (SHM)" line="36">
<kw name="Run Local Crash Receive Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-12T12:05:36.461166" level="INFO">${IMAGE} = sub_send_crash_local_shm</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-12T12:05:36.461005" elapsed="0.000184"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-12T12:05:36.461408" level="INFO">${CONTAINER} = local_all_local_shm</msg>
<var>${CONTAINER}</var>
<arg>local_all_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-12T12:05:36.461267" elapsed="0.000162"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Starting crash test in LOCAL mode: ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-12T12:05:36.461502" elapsed="0.000148"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<arg>${IMAGE}</arg>
<arg>local_all</arg>
<arg>${layer_tag}</arg>
<arg>test_topic</arg>
<arg>${CONTAINER}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-06-12T12:05:36.461743" elapsed="0.138086"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-06-12T12:06:11.600356" level="INFO">Slept 35 seconds.</msg>
<arg>35s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-06-12T12:05:36.600031" elapsed="35.000475"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-06-12T12:06:11.603573" level="INFO">${logs} = [Entrypoint] Starting all processes locally in one container (mode local_shm)
Shared memory monitoring is enabled (domain: ecal_mon - queue size: 1024)
[Publisher] Prepared 100MB message.
[Publisher] ...</msg>
<var>${logs}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-06-12T12:06:11.600676" elapsed="0.002924"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[LOCAL TEST CONTAINER OUTPUT]\n${logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-12T12:06:11.603699" elapsed="0.000163"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-06-12T12:06:11.605191" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-06-12T12:06:11.603974" elapsed="0.001241"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-06-12T12:06:11.605475" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Local container failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-06-12T12:06:11.605299" elapsed="0.000225"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-06-12T12:06:11.607699" level="INFO">${logs} = [Entrypoint] Starting all processes locally in one container (mode local_shm)
Shared memory monitoring is enabled (domain: ecal_mon - queue size: 1024)
[Publisher] Prepared 100MB message.
[Publisher] ...</msg>
<var>${logs}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-06-12T12:06:11.605604" elapsed="0.002120"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Local Crash Receive Test ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-06-12T12:06:11.607805" elapsed="0.000160"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-06-12T12:06:11.608053" elapsed="0.005288"/>
</kw>
<arg>local_shm</arg>
<status status="PASS" start="2025-06-12T12:05:36.460759" elapsed="35.152667"/>
</kw>
<tag>crash_receive_local_shm</tag>
<status status="PASS" start="2025-06-12T12:05:36.460079" elapsed="35.153456"/>
</test>
<test id="s1-t2" name="Crash with Zero Copy Enabled in Reception (SHM)" line="40">
<kw name="Run with Zero Copy Enabled Local Crash Receive Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-12T12:06:11.614867" level="INFO">${IMAGE} = sub_send_crash_local_shm</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-12T12:06:11.614725" elapsed="0.000164"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-12T12:06:11.615076" level="INFO">${CONTAINER} = zero_copy_local_all_local_shm</msg>
<var>${CONTAINER}</var>
<arg>zero_copy_local_all_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-12T12:06:11.614964" elapsed="0.000131"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Starting crash test with zero copy enabled in LOCAL mode: ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-12T12:06:11.615163" elapsed="0.000127"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<arg>${IMAGE}</arg>
<arg>zero_copy_local_all</arg>
<arg>${layer_tag}</arg>
<arg>test_topic</arg>
<arg>${CONTAINER}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-06-12T12:06:11.615402" elapsed="0.135597"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-06-12T12:06:46.751555" level="INFO">Slept 35 seconds.</msg>
<arg>35s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-06-12T12:06:11.751208" elapsed="35.000471"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-06-12T12:06:46.754708" level="INFO">${logs} = [Entrypoint] Starting all processes with Zero-Copy Publisher in one container (mode local_shm)
Shared memory monitoring is enabled (domain: ecal_mon - queue size: 1024)
[Publisher] Prepared 50MB messa...</msg>
<var>${logs}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-06-12T12:06:46.751850" elapsed="0.002884"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[LOCAL SHM WITH ZERO COPY TEST CONTAINER OUTPUT]\n${logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-12T12:06:46.754833" elapsed="0.000170"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-06-12T12:06:46.756190" level="INFO">${exit_code} = 1</msg>
<var>${exit_code}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-06-12T12:06:46.755108" elapsed="0.001105"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-06-12T12:06:46.756455" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg time="2025-06-12T12:06:46.756571" level="FAIL">Local container with zero copy shm failed!: 1 != 0</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Local container with zero copy shm failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="FAIL" start="2025-06-12T12:06:46.756293" elapsed="0.000418">Local container with zero copy shm failed!: 1 != 0</status>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<var>${logs}</var>
<arg>${CONTAINER}</arg>
<status status="NOT RUN" start="2025-06-12T12:06:46.756806" elapsed="0.000017"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Local Crash with zero copy enabled Test ${layer_tag}</arg>
<arg>${True}</arg>
<status status="NOT RUN" start="2025-06-12T12:06:46.756886" elapsed="0.000031"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<status status="NOT RUN" start="2025-06-12T12:06:46.756977" elapsed="0.000013"/>
</kw>
<arg>local_shm</arg>
<status status="FAIL" start="2025-06-12T12:06:11.614531" elapsed="35.142545">Local container with zero copy shm failed!: 1 != 0</status>
</kw>
<tag>zero_copy_crash_receive_local_shm</tag>
<status status="FAIL" start="2025-06-12T12:06:11.614138" elapsed="35.143066">Local container with zero copy shm failed!: 1 != 0</status>
</test>
<test id="s1-t3" name="Crash During Reception (TCP)" line="49">
<kw name="Run Local Crash Receive Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-12T12:06:46.758420" level="INFO">${IMAGE} = sub_send_crash_local_tcp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-12T12:06:46.758261" elapsed="0.000181"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-12T12:06:46.758626" level="INFO">${CONTAINER} = local_all_local_tcp</msg>
<var>${CONTAINER}</var>
<arg>local_all_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-12T12:06:46.758516" elapsed="0.000128"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Starting crash test in LOCAL mode: ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-12T12:06:46.758710" elapsed="0.000124"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<arg>${IMAGE}</arg>
<arg>local_all</arg>
<arg>${layer_tag}</arg>
<arg>test_topic</arg>
<arg>${CONTAINER}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-06-12T12:06:46.758920" elapsed="0.130104"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-06-12T12:07:21.889606" level="INFO">Slept 35 seconds.</msg>
<arg>35s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-06-12T12:06:46.889247" elapsed="35.000480"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-06-12T12:07:21.892766" level="INFO">${logs} = [Entrypoint] Starting all processes locally in one container (mode local_tcp)
[Publisher] Prepared 100MB message.
[Publisher] Waiting for at least 2 subscriber(s) on topic: test_topic
1749730008892 ms...</msg>
<var>${logs}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-06-12T12:07:21.889898" elapsed="0.002895"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[LOCAL TEST CONTAINER OUTPUT]\n${logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-12T12:07:21.892886" elapsed="0.000168"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-06-12T12:07:21.894246" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-06-12T12:07:21.893156" elapsed="0.001113"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-06-12T12:07:21.894518" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Local container failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-06-12T12:07:21.894351" elapsed="0.000212"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-06-12T12:07:21.896629" level="INFO">${logs} = [Entrypoint] Starting all processes locally in one container (mode local_tcp)
[Publisher] Prepared 100MB message.
[Publisher] Waiting for at least 2 subscriber(s) on topic: test_topic
1749730008892 ms...</msg>
<var>${logs}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-06-12T12:07:21.894641" elapsed="0.002012"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Local Crash Receive Test ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-06-12T12:07:21.896733" elapsed="0.000147"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-06-12T12:07:21.896977" elapsed="0.005079"/>
</kw>
<arg>local_tcp</arg>
<status status="PASS" start="2025-06-12T12:06:46.758068" elapsed="35.144047"/>
</kw>
<tag>crash_receive_local_tcp</tag>
<status status="PASS" start="2025-06-12T12:06:46.757740" elapsed="35.144504"/>
</test>
<test id="s1-t4" name="Crash During Reception (Network UDP)" line="53">
<kw name="Run Network Crash Receive Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-12T12:07:21.903503" level="INFO">${IMAGE} = sub_send_crash_network_udp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-12T12:07:21.903298" elapsed="0.000234"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-12T12:07:21.903717" level="INFO">${TOPIC} = test_topic</msg>
<var>${TOPIC}</var>
<arg>test_topic</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-12T12:07:21.903627" elapsed="0.000109"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-12T12:07:21.903910" level="INFO">${SUB_OK} = sub_ok_network_udp</msg>
<var>${SUB_OK}</var>
<arg>sub_ok_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-12T12:07:21.903803" elapsed="0.000125"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-12T12:07:21.904096" level="INFO">${SUB_CRASH} = sub_crash_network_udp</msg>
<var>${SUB_CRASH}</var>
<arg>sub_crash_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-12T12:07:21.903993" elapsed="0.000120"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-12T12:07:21.904285" level="INFO">${PUBLISHER} = pub_network_udp</msg>
<var>${PUBLISHER}</var>
<arg>pub_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-12T12:07:21.904177" elapsed="0.000126"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Starting crash test in NETWORK mode: ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-12T12:07:21.904368" elapsed="0.000148"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${SUB_OK}</arg>
<arg>${IMAGE}</arg>
<arg>test_subscriber</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${SUB_OK}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-06-12T12:07:21.904606" elapsed="0.134395"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${SUB_CRASH}</arg>
<arg>${IMAGE}</arg>
<arg>crash_subscriber</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${SUB_CRASH}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-06-12T12:07:22.039191" elapsed="0.127573"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${PUBLISHER}</arg>
<arg>${IMAGE}</arg>
<arg>large_publisher</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${PUBLISHER}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-06-12T12:07:22.166977" elapsed="0.127072"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${SUB_OK}</arg>
<status status="PASS" start="2025-06-12T12:07:22.294272" elapsed="30.819380"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${SUB_CRASH}</arg>
<status status="PASS" start="2025-06-12T12:07:53.113831" elapsed="0.001523"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${PUBLISHER}</arg>
<status status="PASS" start="2025-06-12T12:07:53.115470" elapsed="0.001052"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-06-12T12:07:53.118892" level="INFO">${log1} = [Entrypoint] Starting stable subscriber in mode network_udp
[Test_Sub] Ready and waiting...
[Test_Sub] Received 52428800 bytes (message 1)
[Test_Sub] Received 52428800 bytes (message 2)
[Test_Sub] Rec...</msg>
<var>${log1}</var>
<arg>${SUB_OK}</arg>
<status status="PASS" start="2025-06-12T12:07:53.116613" elapsed="0.002306"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-06-12T12:07:53.121044" level="INFO">${log2} = [Entrypoint] Starting crashing subscriber in mode network_udp
[Crash_Sub] Listening to topic 'test_topic' in mode 'network_udp'
[Crash_Sub] Received 52428800 bytes
[Crash_Sub] Simulating crash after 2...</msg>
<var>${log2}</var>
<arg>${SUB_CRASH}</arg>
<status status="PASS" start="2025-06-12T12:07:53.119002" elapsed="0.002067"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-06-12T12:07:53.123200" level="INFO">${log3} = [Entrypoint] Starting large publisher in mode network_udp
[Publisher] Prepared 100MB message.
[Publisher] Waiting for at least 2 subscriber(s) on topic: test_topic
[Publisher] Found 2 subscriber(s). P...</msg>
<var>${log3}</var>
<arg>${PUBLISHER}</arg>
<status status="PASS" start="2025-06-12T12:07:53.121150" elapsed="0.002083"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[LOG: SUBSCRIBER]\n${log1}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-12T12:07:53.123318" elapsed="0.000188"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[LOG: CRASH_SUBSCRIBER]\n${log2}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-12T12:07:53.123614" elapsed="0.000152"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[LOG: PUBLISHER]\n${log3}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-12T12:07:53.123869" elapsed="0.000130"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-06-12T12:07:53.125040" level="INFO">${exit1} = 0</msg>
<var>${exit1}</var>
<arg>${SUB_OK}</arg>
<status status="PASS" start="2025-06-12T12:07:53.124098" elapsed="0.000968"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-06-12T12:07:53.125299" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit1}</arg>
<arg>0</arg>
<arg>Stable subscriber failed unexpectedly!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-06-12T12:07:53.125153" elapsed="0.000194"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Network Crash Receive Test ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-06-12T12:07:53.125474" elapsed="0.000160"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${SUB_OK}</arg>
<status status="PASS" start="2025-06-12T12:07:53.125719" elapsed="0.006531"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${SUB_CRASH}</arg>
<status status="PASS" start="2025-06-12T12:07:53.132334" elapsed="0.005204"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${PUBLISHER}</arg>
<status status="PASS" start="2025-06-12T12:07:53.137620" elapsed="0.005604"/>
</kw>
<arg>network_udp</arg>
<arg>network</arg>
<status status="PASS" start="2025-06-12T12:07:21.903060" elapsed="31.240225"/>
</kw>
<tag>crash_receive_network_udp</tag>
<status status="PASS" start="2025-06-12T12:07:21.902693" elapsed="31.240708"/>
</test>
<test id="s1-t5" name="Crash During Reception (Network TCP)" line="57">
<kw name="Run Network Crash Receive Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-12T12:07:53.144905" level="INFO">${IMAGE} = sub_send_crash_network_tcp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-12T12:07:53.144766" elapsed="0.000161"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-12T12:07:53.145081" level="INFO">${TOPIC} = test_topic</msg>
<var>${TOPIC}</var>
<arg>test_topic</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-12T12:07:53.145000" elapsed="0.000099"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-12T12:07:53.145273" level="INFO">${SUB_OK} = sub_ok_network_tcp</msg>
<var>${SUB_OK}</var>
<arg>sub_ok_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-12T12:07:53.145167" elapsed="0.000168"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-12T12:07:53.145568" level="INFO">${SUB_CRASH} = sub_crash_network_tcp</msg>
<var>${SUB_CRASH}</var>
<arg>sub_crash_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-12T12:07:53.145449" elapsed="0.000139"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-12T12:07:53.145759" level="INFO">${PUBLISHER} = pub_network_tcp</msg>
<var>${PUBLISHER}</var>
<arg>pub_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-12T12:07:53.145656" elapsed="0.000120"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Starting crash test in NETWORK mode: ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-12T12:07:53.145841" elapsed="0.000116"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${SUB_OK}</arg>
<arg>${IMAGE}</arg>
<arg>test_subscriber</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${SUB_OK}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-06-12T12:07:53.146050" elapsed="0.129988"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${SUB_CRASH}</arg>
<arg>${IMAGE}</arg>
<arg>crash_subscriber</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${SUB_CRASH}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-06-12T12:07:53.276258" elapsed="0.126088"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${PUBLISHER}</arg>
<arg>${IMAGE}</arg>
<arg>large_publisher</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${PUBLISHER}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-06-12T12:07:53.402621" elapsed="0.127790"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${SUB_OK}</arg>
<status status="PASS" start="2025-06-12T12:07:53.530604" elapsed="30.812001"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${SUB_CRASH}</arg>
<status status="PASS" start="2025-06-12T12:08:24.342807" elapsed="0.001523"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${PUBLISHER}</arg>
<status status="PASS" start="2025-06-12T12:08:24.344459" elapsed="0.001002"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-06-12T12:08:24.347762" level="INFO">${log1} = [Entrypoint] Starting stable subscriber in mode network_tcp
[Test_Sub] Ready and waiting...
[Test_Sub] Received 52428800 bytes (message 1)
[Test_Sub] Received 52428800 bytes (message 2)
[Test_Sub] Rec...</msg>
<var>${log1}</var>
<arg>${SUB_OK}</arg>
<status status="PASS" start="2025-06-12T12:08:24.345550" elapsed="0.002240"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-06-12T12:08:24.349928" level="INFO">${log2} = [Entrypoint] Starting crashing subscriber in mode network_tcp
[Crash_Sub] Listening to topic 'test_topic' in mode 'network_tcp'
[Crash_Sub] Received 52428800 bytes
[Crash_Sub] Simulating crash after 2...</msg>
<var>${log2}</var>
<arg>${SUB_CRASH}</arg>
<status status="PASS" start="2025-06-12T12:08:24.347875" elapsed="0.002079"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-06-12T12:08:24.354782" level="INFO">${log3} = [Entrypoint] Starting large publisher in mode network_tcp
[Publisher] Prepared 100MB message.
[Publisher] Waiting for at least 2 subscriber(s) on topic: test_topic
1749730074278 ms | f71e8fc86db0 | la...</msg>
<var>${log3}</var>
<arg>${PUBLISHER}</arg>
<status status="PASS" start="2025-06-12T12:08:24.350038" elapsed="0.004772"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[LOG: SUBSCRIBER]\n${log1}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-12T12:08:24.354925" elapsed="0.000194"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[LOG: CRASH_SUBSCRIBER]\n${log2}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-12T12:08:24.355228" elapsed="0.000194"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[LOG: PUBLISHER]\n${log3}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-12T12:08:24.355536" elapsed="0.000179"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-06-12T12:08:24.356942" level="INFO">${exit1} = 0</msg>
<var>${exit1}</var>
<arg>${SUB_OK}</arg>
<status status="PASS" start="2025-06-12T12:08:24.355815" elapsed="0.001157"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-06-12T12:08:24.357261" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit1}</arg>
<arg>0</arg>
<arg>Stable subscriber failed unexpectedly!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-06-12T12:08:24.357078" elapsed="0.000244"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Network Crash Receive Test ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-06-12T12:08:24.357455" elapsed="0.000197"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${SUB_OK}</arg>
<status status="PASS" start="2025-06-12T12:08:24.357756" elapsed="0.005760"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${SUB_CRASH}</arg>
<status status="PASS" start="2025-06-12T12:08:24.363601" elapsed="0.005303"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${PUBLISHER}</arg>
<status status="PASS" start="2025-06-12T12:08:24.369006" elapsed="0.005303"/>
</kw>
<arg>network_tcp</arg>
<arg>network</arg>
<status status="PASS" start="2025-06-12T12:07:53.144554" elapsed="31.229843"/>
</kw>
<tag>crash_receive_network_tcp</tag>
<status status="PASS" start="2025-06-12T12:07:53.144145" elapsed="31.230360"/>
</test>
<status status="FAIL" start="2025-06-12T12:05:23.638373" elapsed="180.737167"/>
</suite>
<statistics>
<total>
<stat pass="4" fail="1" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">crash_receive_local_shm</stat>
<stat pass="1" fail="0" skip="0">crash_receive_local_tcp</stat>
<stat pass="1" fail="0" skip="0">crash_receive_network_tcp</stat>
<stat pass="1" fail="0" skip="0">crash_receive_network_udp</stat>
<stat pass="0" fail="1" skip="0">zero_copy_crash_receive_local_shm</stat>
</tag>
<suite>
<stat name="Sub Send Crash" id="s1" pass="4" fail="1" skip="0">Sub Send Crash</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
