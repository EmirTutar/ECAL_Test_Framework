<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 7.3.1 (Python 3.12.3 on linux)" generated="2025-07-02T08:35:05.305208" rpa="false" schemaversion="5">
<suite id="s1" name="Basic Pub Sub &amp; Multi Pub Sub &amp; Network Crash &amp; Pub Crash &amp; Sub Crash &amp; Sub Send Crash">
<suite id="s1-s1" name="Basic Pub Sub" source="/home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/basic_pub_sub/robottests/basic_pub_sub.robot">
<kw name="Init Test Context" type="SETUP">
<kw name="Set Test Context" owner="GlobalPathsLibrary">
<arg>basic_pub_sub</arg>
<arg>basic_pub_sub</arg>
<doc>Sets the test folder and tag prefix if it's a valid test case.
The folder must exist under integration_tests/ and contain typical test structure.</doc>
<status status="PASS" start="2025-07-02T08:35:05.434687" elapsed="0.000189"/>
</kw>
<kw name="Get Build Script Path" owner="GlobalPathsLibrary">
<msg time="2025-07-02T08:35:05.435136" level="INFO">${build} = /home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/basic_pub_sub/scripts/build_images.sh</msg>
<var>${build}</var>
<status status="PASS" start="2025-07-02T08:35:05.434989" elapsed="0.000175"/>
</kw>
<kw name="Get Network Name" owner="GlobalPathsLibrary">
<msg time="2025-07-02T08:35:05.435334" level="INFO">${net} = ecal_test_net</msg>
<var>${net}</var>
<status status="PASS" start="2025-07-02T08:35:05.435240" elapsed="0.000115"/>
</kw>
<kw name="Get Build Script Args" owner="GlobalPathsLibrary">
<msg time="2025-07-02T08:35:05.435503" level="INFO">${args} = ['basic_pub_sub']</msg>
<var>${args}</var>
<status status="PASS" start="2025-07-02T08:35:05.435421" elapsed="0.000101"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-07-02T08:35:05.435761" level="INFO">${BUILD_SCRIPT} = /home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/basic_pub_sub/scripts/build_images.sh</msg>
<arg>${BUILD_SCRIPT}</arg>
<arg>${build}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-07-02T08:35:05.435600" elapsed="0.000202"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-07-02T08:35:05.436035" level="INFO">${NETWORK} = ecal_test_net</msg>
<arg>${NETWORK}</arg>
<arg>${net}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-07-02T08:35:05.435882" elapsed="0.000187"/>
</kw>
<kw name="Get Test Description" owner="GlobalPathsLibrary">
<msg time="2025-07-02T08:35:05.436289" level="INFO">${desc} = This test checks basic communication between a single publisher and a single subscriber.

Test Setup:
- The publisher sends 4 messages, each 0.2 MB in size, on a single topic.
- The subscriber listens...</msg>
<var>${desc}</var>
<doc>Reads the *** Comments *** section from the .robot file and returns it as a string.</doc>
<status status="PASS" start="2025-07-02T08:35:05.436140" elapsed="0.000174"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T08:35:05.436489" level="INFO">This test checks basic communication between a single publisher and a single subscriber.

Test Setup:
- The publisher sends 4 messages, each 0.2 MB in size, on a single topic.
- The subscriber listens on that topic for 6 seconds and counts received messages.

Covered eCAL modes:
- local_shm
- local_udp
- local_tcp
- network_udp
- network_tcp

Goals:
- Ensure that basic 1:1 communication works reliably across all transport modes.
- Validate correct transmission of payloads (200 KB).

Success Criteria:
- The subscriber receives exactly 4 messages.
- If true, it exits with code 0.
- Otherwise, it exits with code 1.</msg>
<arg>${desc}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T08:35:05.436397" elapsed="0.000125"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>[SETUP] Building Docker image...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-02T08:35:05.436590" elapsed="0.000095"/>
</kw>
<kw name="Run Process" owner="Process">
<msg time="2025-07-02T08:35:05.436956" level="INFO">Starting process:
/home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/basic_pub_sub/scripts/build_images.sh basic_pub_sub</msg>
<msg time="2025-07-02T08:35:05.437382" level="INFO">Waiting for process to complete.</msg>
<msg time="2025-07-02T08:35:20.868941" level="INFO">Process completed.</msg>
<msg time="2025-07-02T08:35:20.869137" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<var>${result}</var>
<arg>${BUILD_SCRIPT}</arg>
<arg>@{args}</arg>
<doc>Runs a process and waits for it to complete.</doc>
<status status="PASS" start="2025-07-02T08:35:05.436786" elapsed="15.432377"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-02T08:35:20.869811" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${result.rc}</arg>
<arg>0</arg>
<arg>Failed to build Docker image!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-02T08:35:20.869316" elapsed="0.000550"/>
</kw>
<kw name="Create Docker Network" owner="MyDockerLibrary">
<arg>${NETWORK}</arg>
<status status="PASS" start="2025-07-02T08:35:20.869951" elapsed="0.045357"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-02T08:35:23.915728" level="INFO">Slept 3 seconds.</msg>
<arg>3s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-02T08:35:20.915466" elapsed="3.000377"/>
</kw>
<status status="PASS" start="2025-07-02T08:35:05.434244" elapsed="18.481700"/>
</kw>
<test id="s1-s1-t1" name="Basic Pub/Sub Local SHM" line="38">
<kw name="Run Local Pub Sub Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T08:35:23.917060" level="INFO">${IMAGE} = basic_pub_sub_local_shm</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T08:35:23.916886" elapsed="0.000196"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T08:35:23.917266" level="INFO">${CONTAINER} = basic_local_local_shm</msg>
<var>${CONTAINER}</var>
<arg>basic_local_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T08:35:23.917156" elapsed="0.000128"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Running local pub/sub test in mode: ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-02T08:35:23.917350" elapsed="0.000123"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<arg>${IMAGE}</arg>
<arg>local</arg>
<arg>${layer_tag}</arg>
<arg>test_topic</arg>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-02T08:35:23.917546" elapsed="0.120939"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-02T08:35:33.039055" level="INFO">Slept 9 seconds.</msg>
<arg>9s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-02T08:35:24.038704" elapsed="9.000474"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-07-02T08:35:33.042701" level="INFO">${logs} = [Entrypoint] Starting subscriber and publisher in mode local_shm
Shared memory monitoring is enabled (domain: ecal_mon - queue size: 1024)
[Publisher] Waiting for at least 1 subscriber(s) on topic: te...</msg>
<var>${logs}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-02T08:35:33.039346" elapsed="0.003388"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[CONTAINER LOG: LOCAL PUB+SUB]\n${logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-02T08:35:33.042846" elapsed="0.000205"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T08:35:33.043268" level="INFO">
[CONTAINER LOG: LOCAL PUB+SUB]
[Entrypoint] Starting subscriber and publisher in mode local_shm
Shared memory monitoring is enabled (domain: ecal_mon - queue size: 1024)
[Publisher] Waiting for at least 1 subscriber(s) on topic: test_topic
[Publisher] Found 1 subscriber(s). Proceeding to send messages.
[Publisher] Send result: ✓, size: 209715 bytes
[Publisher] Send result: ✓, size: 209715 bytes
[Publisher] Send result: ✓, size: 209715 bytes
[Publisher] Send result: ✓, size: 209715 bytes
[Publisher] Finished sending.
Shared memory monitoring is enabled (domain: ecal_mon - queue size: 1024)


[Subscriber] Ready and waiting...

[Subscriber] Received 209715 bytes (message 1)
[Subscriber] Received 209715 bytes (message 2)
[Subscriber] Received 209715 bytes (message 3)
[Subscriber] Received 209715 bytes (message 4)
[Subscriber] Received 4 messages.
</msg>
<arg>\n[CONTAINER LOG: LOCAL PUB+SUB]\n${logs}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T08:35:33.043158" elapsed="0.000202"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-07-02T08:35:33.044518" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-02T08:35:33.043435" elapsed="0.001107"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-02T08:35:33.044769" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Local communication test failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-02T08:35:33.044624" elapsed="0.000193"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Basic Pub/Sub Local ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-07-02T08:35:33.044893" elapsed="0.000179"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-02T08:35:33.045155" elapsed="0.004865"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-02T08:35:34.050358" level="INFO">Slept 1 second.</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-02T08:35:33.050122" elapsed="1.000341"/>
</kw>
<arg>local_shm</arg>
<status status="PASS" start="2025-07-02T08:35:23.916644" elapsed="10.133913"/>
</kw>
<tag>basic_pub_sub_local_shm</tag>
<status status="PASS" start="2025-07-02T08:35:23.916062" elapsed="10.134625"/>
</test>
<test id="s1-s1-t2" name="Basic Pub/Sub Local UDP" line="42">
<kw name="Run Local Pub Sub Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T08:35:34.052183" level="INFO">${IMAGE} = basic_pub_sub_local_udp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T08:35:34.052025" elapsed="0.000179"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T08:35:34.052394" level="INFO">${CONTAINER} = basic_local_local_udp</msg>
<var>${CONTAINER}</var>
<arg>basic_local_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T08:35:34.052278" elapsed="0.000134"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Running local pub/sub test in mode: ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-02T08:35:34.052479" elapsed="0.000132"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<arg>${IMAGE}</arg>
<arg>local</arg>
<arg>${layer_tag}</arg>
<arg>test_topic</arg>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-02T08:35:34.052709" elapsed="0.118426"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-02T08:35:43.171647" level="INFO">Slept 9 seconds.</msg>
<arg>9s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-02T08:35:34.171356" elapsed="9.000403"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-07-02T08:35:43.174854" level="INFO">${logs} = [Entrypoint] Starting subscriber and publisher in mode local_udp
[Publisher] Waiting for at least 1 subscriber(s) on topic: test_topic
[Publisher] Found 1 subscriber(s). Proceeding to send messages.
[...</msg>
<var>${logs}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-02T08:35:43.171940" elapsed="0.002941"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[CONTAINER LOG: LOCAL PUB+SUB]\n${logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-02T08:35:43.174981" elapsed="0.000180"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T08:35:43.175395" level="INFO">
[CONTAINER LOG: LOCAL PUB+SUB]
[Entrypoint] Starting subscriber and publisher in mode local_udp
[Publisher] Waiting for at least 1 subscriber(s) on topic: test_topic
[Publisher] Found 1 subscriber(s). Proceeding to send messages.
[Publisher] Send result: ✓, size: 209715 bytes
[Publisher] Send result: ✓, size: 209715 bytes
[Publisher] Send result: ✓, size: 209715 bytes
[Publisher] Send result: ✓, size: 209715 bytes
[Publisher] Finished sending.


[Subscriber] Ready and waiting...

[Subscriber] Received 209715 bytes (message 1)
[Subscriber] Received 209715 bytes (message 2)
[Subscriber] Received 209715 bytes (message 3)
[Subscriber] Received 209715 bytes (message 4)
[Subscriber] Received 4 messages.
</msg>
<arg>\n[CONTAINER LOG: LOCAL PUB+SUB]\n${logs}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T08:35:43.175265" elapsed="0.000169"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-07-02T08:35:43.176556" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-02T08:35:43.175515" elapsed="0.001065"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-02T08:35:43.176794" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Local communication test failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-02T08:35:43.176660" elapsed="0.000183"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Basic Pub/Sub Local ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-07-02T08:35:43.176919" elapsed="0.000166"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-02T08:35:43.177180" elapsed="0.005139"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-02T08:35:44.182643" level="INFO">Slept 1 second.</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-02T08:35:43.182403" elapsed="1.000342"/>
</kw>
<arg>local_udp</arg>
<status status="PASS" start="2025-07-02T08:35:34.051774" elapsed="10.131053"/>
</kw>
<tag>basic_pub_sub_local_udp</tag>
<status status="PASS" start="2025-07-02T08:35:34.051370" elapsed="10.131581"/>
</test>
<test id="s1-s1-t3" name="Basic Pub/Sub Local TCP" line="46">
<kw name="Run Local Pub Sub Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T08:35:44.184360" level="INFO">${IMAGE} = basic_pub_sub_local_tcp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T08:35:44.184204" elapsed="0.000177"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T08:35:44.184559" level="INFO">${CONTAINER} = basic_local_local_tcp</msg>
<var>${CONTAINER}</var>
<arg>basic_local_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T08:35:44.184453" elapsed="0.000123"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Running local pub/sub test in mode: ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-02T08:35:44.184701" elapsed="0.000127"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<arg>${IMAGE}</arg>
<arg>local</arg>
<arg>${layer_tag}</arg>
<arg>test_topic</arg>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-02T08:35:44.184922" elapsed="0.118693"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-02T08:35:53.304092" level="INFO">Slept 9 seconds.</msg>
<arg>9s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-02T08:35:44.303784" elapsed="9.000416"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-07-02T08:35:53.307067" level="INFO">${logs} = [Entrypoint] Starting subscriber and publisher in mode local_tcp
[Publisher] Waiting for at least 1 subscriber(s) on topic: test_topic
1751445346306 ms | 98443c069882 | pub_test | 7 | info | CTCPReade...</msg>
<var>${logs}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-02T08:35:53.304354" elapsed="0.002740"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[CONTAINER LOG: LOCAL PUB+SUB]\n${logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-02T08:35:53.307184" elapsed="0.000158"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T08:35:53.307602" level="INFO">
[CONTAINER LOG: LOCAL PUB+SUB]
[Entrypoint] Starting subscriber and publisher in mode local_tcp
[Publisher] Waiting for at least 1 subscriber(s) on topic: test_topic
1751445346306 ms | 98443c069882 | pub_test | 7 | info | CTCPReaderLayer - TCPPubSub (Info) -Publisher :::0: Created publisher and waiting for clients.
1751445346306 ms | 98443c069882 | pub_test | 7 | info | CTCPReaderLayer - TCPPubSub (Info) -Publisher :::42447: Subscriber ::ffff:172.17.0.3:42244 has connected.
[Publisher] Found 1 subscriber(s). Proceeding to send messages.
[Publisher] Send result: ✓, size: 209715 bytes
[Publisher] Send result: ✓, size: 209715 bytes
[Publisher] Send result: ✓, size: 209715 bytes
[Publisher] Send result: ✓, size: 209715 bytes
[Publisher] Finished sending.


[Subscriber] Ready and waiting...

[Subscriber] Received 209715 bytes (message 1)
[Subscriber] Received 209715 bytes (message 2)
[Subscriber] Received 209715 bytes (message 3)
[Subscriber] Received 209715 bytes (message 4)
1751445349808 ms | 98443c069882 | sub_test | 13 | error | CTCPReaderLayer - TCPPubSub (Error) -SubscriberSession 172.17.0.3:42244-&gt;98443c069882:42447: Error reading header length: End of file
1751445349809 ms | 98443c069882 | sub_test | 13 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.17.0.3:42250: Failed connecting to publisher 98443c069882:42447: Connection refused
1751445349809 ms | 98443c069882 | sub_test | 13 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.17.0.3:42262: Failed connecting to publisher 98443c069882:42447: Connection refused
1751445349809 ms | 98443c069882 | sub_test | 13 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.17.0.3:42272: Failed connecting to publisher 98443c069882:42447: Connection refused
1751445349809 ms | 98443c069882 | sub_test | 13 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.17.0.3:42274: Failed connecting to publisher 98443c069882:42447: Connection refused
1751445349810 ms | 98443c069882 | sub_test | 13 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.17.0.3:42280: Failed connecting to publisher 98443c069882:42447: Connection refused
[Subscriber] Received 4 messages.
</msg>
<arg>\n[CONTAINER LOG: LOCAL PUB+SUB]\n${logs}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T08:35:53.307456" elapsed="0.000228"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-07-02T08:35:53.308908" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-02T08:35:53.307793" elapsed="0.001138"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-02T08:35:53.309182" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Local communication test failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-02T08:35:53.309042" elapsed="0.000184"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Basic Pub/Sub Local ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-07-02T08:35:53.309301" elapsed="0.000135"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-02T08:35:53.309527" elapsed="0.005126"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-02T08:35:54.314979" level="INFO">Slept 1 second.</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-02T08:35:53.314747" elapsed="1.000370"/>
</kw>
<arg>local_tcp</arg>
<status status="PASS" start="2025-07-02T08:35:44.183933" elapsed="10.131270"/>
</kw>
<tag>basic_pub_sub_local_tcp</tag>
<status status="PASS" start="2025-07-02T08:35:44.183566" elapsed="10.131750"/>
</test>
<test id="s1-s1-t4" name="Basic Pub/Sub Network UDP" line="50">
<kw name="Run Network Pub Sub Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T08:35:54.316684" level="INFO">${IMAGE} = basic_pub_sub_network_udp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T08:35:54.316537" elapsed="0.000167"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T08:35:54.316885" level="INFO">${TOPIC} = topic_network_udp</msg>
<var>${TOPIC}</var>
<arg>topic_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T08:35:54.316777" elapsed="0.000125"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T08:35:54.317088" level="INFO">${SUB_NAME} = sub_network_udp</msg>
<var>${SUB_NAME}</var>
<arg>sub_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T08:35:54.316968" elapsed="0.000137"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T08:35:54.317268" level="INFO">${PUB_NAME} = pub_network_udp</msg>
<var>${PUB_NAME}</var>
<arg>pub_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T08:35:54.317168" elapsed="0.000116"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Running network pub/sub test in mode: ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-02T08:35:54.317347" elapsed="0.000116"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${SUB_NAME}</arg>
<arg>${IMAGE}</arg>
<arg>subscriber</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${SUB_NAME}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-02T08:35:54.317555" elapsed="0.136396"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${PUB_NAME}</arg>
<arg>${IMAGE}</arg>
<arg>publisher</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${PUB_NAME}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-02T08:35:54.454170" elapsed="0.126375"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-02T08:36:03.581069" level="INFO">Slept 9 seconds.</msg>
<arg>9s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-02T08:35:54.580750" elapsed="9.000433"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-07-02T08:36:03.584256" level="INFO">${log_sub} = [Entrypoint] Starting subscriber in mode network_udp


[Subscriber] Ready and waiting...

[Subscriber] Received 209715 bytes (message 1)
[Subscriber] Received 209715 bytes (message 2)
[Subscriber] Rec...</msg>
<var>${log_sub}</var>
<arg>${SUB_NAME}</arg>
<status status="PASS" start="2025-07-02T08:36:03.581418" elapsed="0.002864"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-07-02T08:36:03.586390" level="INFO">${log_pub} = [Entrypoint] Starting publisher in mode network_udp
[Publisher] Waiting for at least 1 subscriber(s) on topic: topic_network_udp
[Publisher] Found 1 subscriber(s). Proceeding to send messages.
[Publis...</msg>
<var>${log_pub}</var>
<arg>${PUB_NAME}</arg>
<status status="PASS" start="2025-07-02T08:36:03.584374" elapsed="0.002041"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[CONTAINER LOG: PUBLISHER]\n${log_pub}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-02T08:36:03.586501" elapsed="0.000155"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T08:36:03.586894" level="INFO">
[CONTAINER LOG: PUBLISHER]
[Entrypoint] Starting publisher in mode network_udp
[Publisher] Waiting for at least 1 subscriber(s) on topic: topic_network_udp
[Publisher] Found 1 subscriber(s). Proceeding to send messages.
[Publisher] Send result: ✓, size: 209715 bytes
[Publisher] Send result: ✓, size: 209715 bytes
[Publisher] Send result: ✓, size: 209715 bytes
[Publisher] Send result: ✓, size: 209715 bytes
[Publisher] Finished sending.
</msg>
<arg>\n[CONTAINER LOG: PUBLISHER]\n${log_pub}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T08:36:03.586768" elapsed="0.000164"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[CONTAINER LOG: SUBSCRIBER]\n${log_sub}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-02T08:36:03.587028" elapsed="0.000131"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T08:36:03.587376" level="INFO">
[CONTAINER LOG: SUBSCRIBER]
[Entrypoint] Starting subscriber in mode network_udp


[Subscriber] Ready and waiting...

[Subscriber] Received 209715 bytes (message 1)
[Subscriber] Received 209715 bytes (message 2)
[Subscriber] Received 209715 bytes (message 3)
[Subscriber] Received 209715 bytes (message 4)
[Subscriber] Received 4 messages.
</msg>
<arg>\n[CONTAINER LOG: SUBSCRIBER]\n${log_sub}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T08:36:03.587265" elapsed="0.000143"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-07-02T08:36:03.588445" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>${SUB_NAME}</arg>
<status status="PASS" start="2025-07-02T08:36:03.587477" elapsed="0.000991"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-02T08:36:03.588704" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Subscriber failed in ${layer_tag}!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-02T08:36:03.588549" elapsed="0.000198"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Basic Pub/Sub Network ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-07-02T08:36:03.588822" elapsed="0.000144"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${SUB_NAME}</arg>
<status status="PASS" start="2025-07-02T08:36:03.589069" elapsed="0.004837"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${PUB_NAME}</arg>
<status status="PASS" start="2025-07-02T08:36:03.593989" elapsed="0.004992"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-02T08:36:04.599313" level="INFO">Slept 1 second.</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-02T08:36:03.599096" elapsed="1.000375"/>
</kw>
<arg>network_udp</arg>
<arg>network</arg>
<status status="PASS" start="2025-07-02T08:35:54.316292" elapsed="10.283264"/>
</kw>
<tag>basic_pub_sub_network_udp</tag>
<status status="PASS" start="2025-07-02T08:35:54.315875" elapsed="10.283796"/>
</test>
<test id="s1-s1-t5" name="Basic Pub/Sub Network TCP" line="54">
<kw name="Run Network Pub Sub Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T08:36:04.601414" level="INFO">${IMAGE} = basic_pub_sub_network_tcp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T08:36:04.601257" elapsed="0.000178"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T08:36:04.601620" level="INFO">${TOPIC} = topic_network_tcp</msg>
<var>${TOPIC}</var>
<arg>topic_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T08:36:04.601510" elapsed="0.000128"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T08:36:04.601809" level="INFO">${SUB_NAME} = sub_network_tcp</msg>
<var>${SUB_NAME}</var>
<arg>sub_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T08:36:04.601704" elapsed="0.000122"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T08:36:04.601991" level="INFO">${PUB_NAME} = pub_network_tcp</msg>
<var>${PUB_NAME}</var>
<arg>pub_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T08:36:04.601890" elapsed="0.000135"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Running network pub/sub test in mode: ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-02T08:36:04.602092" elapsed="0.000120"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${SUB_NAME}</arg>
<arg>${IMAGE}</arg>
<arg>subscriber</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${SUB_NAME}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-02T08:36:04.602313" elapsed="0.129047"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${PUB_NAME}</arg>
<arg>${IMAGE}</arg>
<arg>publisher</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${PUB_NAME}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-02T08:36:04.731563" elapsed="0.121080"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-02T08:36:13.853136" level="INFO">Slept 9 seconds.</msg>
<arg>9s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-02T08:36:04.852834" elapsed="9.000409"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-07-02T08:36:13.856334" level="INFO">${log_sub} = [Entrypoint] Starting subscriber in mode network_tcp


[Subscriber] Ready and waiting...

[Subscriber] Received 209715 bytes (message 1)
[Subscriber] Received 209715 bytes (message 2)
[Subscriber] Rec...</msg>
<var>${log_sub}</var>
<arg>${SUB_NAME}</arg>
<status status="PASS" start="2025-07-02T08:36:13.853395" elapsed="0.002968"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-07-02T08:36:13.858519" level="INFO">${log_pub} = [Entrypoint] Starting publisher in mode network_tcp
[Publisher] Waiting for at least 1 subscriber(s) on topic: topic_network_tcp
1751445365733 ms | 1d57cad8dda0 | pub_network_tcp | 7 | info | CTCPRead...</msg>
<var>${log_pub}</var>
<arg>${PUB_NAME}</arg>
<status status="PASS" start="2025-07-02T08:36:13.856461" elapsed="0.002084"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[CONTAINER LOG: PUBLISHER]\n${log_pub}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-02T08:36:13.858630" elapsed="0.000154"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T08:36:13.859090" level="INFO">
[CONTAINER LOG: PUBLISHER]
[Entrypoint] Starting publisher in mode network_tcp
[Publisher] Waiting for at least 1 subscriber(s) on topic: topic_network_tcp
1751445365733 ms | 1d57cad8dda0 | pub_network_tcp | 7 | info | CTCPReaderLayer - TCPPubSub (Info) -Publisher :::0: Created publisher and waiting for clients.
1751445365735 ms | 1d57cad8dda0 | pub_network_tcp | 7 | info | CTCPReaderLayer - TCPPubSub (Info) -Publisher :::34507: Subscriber ::ffff:172.18.0.2:60654 has connected.
[Publisher] Found 1 subscriber(s). Proceeding to send messages.
[Publisher] Send result: ✓, size: 209715 bytes
[Publisher] Send result: ✓, size: 209715 bytes
[Publisher] Send result: ✓, size: 209715 bytes
[Publisher] Send result: ✓, size: 209715 bytes
[Publisher] Finished sending.
</msg>
<arg>\n[CONTAINER LOG: PUBLISHER]\n${log_pub}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T08:36:13.858883" elapsed="0.000249"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[CONTAINER LOG: SUBSCRIBER]\n${log_sub}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-02T08:36:13.859205" elapsed="0.000128"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T08:36:13.859542" level="INFO">
[CONTAINER LOG: SUBSCRIBER]
[Entrypoint] Starting subscriber in mode network_tcp


[Subscriber] Ready and waiting...

[Subscriber] Received 209715 bytes (message 1)
[Subscriber] Received 209715 bytes (message 2)
[Subscriber] Received 209715 bytes (message 3)
[Subscriber] Received 209715 bytes (message 4)
1751445369257 ms | b6c3effa3bdc | sub_network_tcp | 7 | error | CTCPReaderLayer - TCPPubSub (Error) -SubscriberSession 172.18.0.2:60654-&gt;1d57cad8dda0:34507: Error reading header length: End of file
1751445369257 ms | b6c3effa3bdc | sub_network_tcp | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:60660: Failed connecting to publisher 1d57cad8dda0:34507: Connection refused
1751445369258 ms | b6c3effa3bdc | sub_network_tcp | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:60670: Failed connecting to publisher 1d57cad8dda0:34507: Connection refused
1751445369259 ms | b6c3effa3bdc | sub_network_tcp | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:60676: Failed connecting to publisher 1d57cad8dda0:34507: Connection refused
1751445369259 ms | b6c3effa3bdc | sub_network_tcp | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:60686: Failed connecting to publisher 1d57cad8dda0:34507: Connection refused
1751445369260 ms | b6c3effa3bdc | sub_network_tcp | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:60688: Failed connecting to publisher 1d57cad8dda0:34507: Connection refused
[Subscriber] Received 4 messages.
</msg>
<arg>\n[CONTAINER LOG: SUBSCRIBER]\n${log_sub}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T08:36:13.859435" elapsed="0.000144"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-07-02T08:36:13.860714" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>${SUB_NAME}</arg>
<status status="PASS" start="2025-07-02T08:36:13.859648" elapsed="0.001089"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-02T08:36:13.860978" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Subscriber failed in ${layer_tag}!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-02T08:36:13.860824" elapsed="0.000224"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Basic Pub/Sub Network ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-07-02T08:36:13.861124" elapsed="0.000133"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${SUB_NAME}</arg>
<status status="PASS" start="2025-07-02T08:36:13.861351" elapsed="0.005203"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${PUB_NAME}</arg>
<status status="PASS" start="2025-07-02T08:36:13.866647" elapsed="0.004973"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-02T08:36:14.871952" level="INFO">Slept 1 second.</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-02T08:36:13.871712" elapsed="1.000362"/>
</kw>
<arg>network_tcp</arg>
<arg>network</arg>
<status status="PASS" start="2025-07-02T08:36:04.601015" elapsed="10.271144"/>
</kw>
<tag>basic_pub_sub_network_tcp</tag>
<status status="PASS" start="2025-07-02T08:36:04.600590" elapsed="10.271694"/>
</test>
<status status="PASS" start="2025-07-02T08:35:05.329939" elapsed="69.543564"/>
</suite>
<suite id="s1-s2" name="Multi Pub Sub" source="/home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/multi_pub_sub/robottests/multi_pub_sub.robot">
<kw name="Init Test Context" type="SETUP">
<kw name="Set Test Context" owner="GlobalPathsLibrary">
<arg>multi_pub_sub</arg>
<arg>multi_pub_sub</arg>
<doc>Sets the test folder and tag prefix if it's a valid test case.
The folder must exist under integration_tests/ and contain typical test structure.</doc>
<status status="PASS" start="2025-07-02T08:36:14.876756" elapsed="0.000138"/>
</kw>
<kw name="Get Build Script Path" owner="GlobalPathsLibrary">
<msg time="2025-07-02T08:36:14.877107" level="INFO">${build} = /home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/multi_pub_sub/scripts/build_images.sh</msg>
<var>${build}</var>
<status status="PASS" start="2025-07-02T08:36:14.876974" elapsed="0.000155"/>
</kw>
<kw name="Get Network Name" owner="GlobalPathsLibrary">
<msg time="2025-07-02T08:36:14.877278" level="INFO">${net} = ecal_test_net</msg>
<var>${net}</var>
<status status="PASS" start="2025-07-02T08:36:14.877198" elapsed="0.000098"/>
</kw>
<kw name="Get Build Script Args" owner="GlobalPathsLibrary">
<msg time="2025-07-02T08:36:14.877433" level="INFO">${args} = ['multi_pub_sub']</msg>
<var>${args}</var>
<status status="PASS" start="2025-07-02T08:36:14.877358" elapsed="0.000092"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-07-02T08:36:14.877665" level="INFO">${BUILD_SCRIPT} = /home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/multi_pub_sub/scripts/build_images.sh</msg>
<arg>${BUILD_SCRIPT}</arg>
<arg>${build}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-07-02T08:36:14.877527" elapsed="0.000166"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-07-02T08:36:14.877891" level="INFO">${NETWORK} = ecal_test_net</msg>
<arg>${NETWORK}</arg>
<arg>${net}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-07-02T08:36:14.877765" elapsed="0.000164"/>
</kw>
<kw name="Get Test Description" owner="GlobalPathsLibrary">
<msg time="2025-07-02T08:36:14.878219" level="INFO">${desc} = This test validates eCAL communication in a scenario involving multiple publishers and subscribers.

Test Setup:
- Two publishers run in parallel and publish messages on the **same topic**.
• Publishe...</msg>
<var>${desc}</var>
<doc>Reads the *** Comments *** section from the .robot file and returns it as a string.</doc>
<status status="PASS" start="2025-07-02T08:36:14.878033" elapsed="0.000213"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T08:36:14.878407" level="INFO">This test validates eCAL communication in a scenario involving multiple publishers and subscribers.

Test Setup:
- Two publishers run in parallel and publish messages on the **same topic**.
• Publisher 1 sends messages containing the byte value **42**.
• Publisher 2 sends messages containing the byte value **43**.
- Two subscribers listen on that same topic and must receive all messages from both publishers.

Covered eCAL modes:
- local_shm
- local_udp
- (local_tcp)
- network_udp
- network_tcp

Goals:
- Ensure that eCAL correctly distributes messages from **multiple sources** to **multiple receivers**.
- Verify that **topic routing, message integrity, and delivery** work consistently across different transport modes.

Success Criteria:
- Each subscriber must receive **10 messages with value 42** and **10 with value 43**.
- If this condition is met, the subscriber exits with code **0**.
- If any expected messages are missing, the subscriber exits with code **1**.</msg>
<arg>${desc}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T08:36:14.878319" elapsed="0.000163"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>[SETUP] Building Docker image...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-02T08:36:14.878553" elapsed="0.000093"/>
</kw>
<kw name="Run Process" owner="Process">
<msg time="2025-07-02T08:36:14.878908" level="INFO">Starting process:
/home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/multi_pub_sub/scripts/build_images.sh multi_pub_sub</msg>
<msg time="2025-07-02T08:36:14.879397" level="INFO">Waiting for process to complete.</msg>
<msg time="2025-07-02T08:36:23.906653" level="INFO">Process completed.</msg>
<msg time="2025-07-02T08:36:23.906813" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<var>${result}</var>
<arg>${BUILD_SCRIPT}</arg>
<arg>@{args}</arg>
<doc>Runs a process and waits for it to complete.</doc>
<status status="PASS" start="2025-07-02T08:36:14.878742" elapsed="9.028097"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-02T08:36:23.907495" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${result.rc}</arg>
<arg>0</arg>
<arg>Failed to build Docker image!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-02T08:36:23.906989" elapsed="0.000555"/>
</kw>
<kw name="Create Docker Network" owner="MyDockerLibrary">
<arg>${NETWORK}</arg>
<status status="PASS" start="2025-07-02T08:36:23.907631" elapsed="0.007355"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-02T08:36:26.915423" level="INFO">Slept 3 seconds.</msg>
<arg>3s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-02T08:36:23.915133" elapsed="3.000416"/>
</kw>
<status status="PASS" start="2025-07-02T08:36:14.876609" elapsed="12.039042"/>
</kw>
<test id="s1-s2-t1" name="Multi Pub/Sub Local SHM Test" line="39">
<kw name="Run Multi Pub Sub Test Local">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T08:36:26.916905" level="INFO">${IMAGE} = multi_pub_sub_local_shm</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T08:36:26.916734" elapsed="0.000194"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T08:36:26.917164" level="INFO">${CONTAINER} = multi_locallocal_shm</msg>
<var>${CONTAINER}</var>
<arg>multi_local${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T08:36:26.917037" elapsed="0.000147"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Running local multi pub/sub test (all binarys in same Container) with ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-02T08:36:26.917260" elapsed="0.000145"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<arg>${IMAGE}</arg>
<arg>local_multi</arg>
<arg>${layer_tag}</arg>
<status status="PASS" start="2025-07-02T08:36:26.917506" elapsed="0.131807"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-02T08:36:45.050051" level="INFO">Slept 18 seconds.</msg>
<arg>18s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-02T08:36:27.049692" elapsed="18.000476"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-07-02T08:36:45.053136" level="INFO">${logs} = [Entrypoint] Starting local multi pub/sub test in mode local_shm
Shared memory monitoring is enabled (domain: ecal_mon - queue size: 1024)
[Publisher] Waiting for at least 2 subscriber(s) on topic: te...</msg>
<var>${logs}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-02T08:36:45.050334" elapsed="0.002830"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[CONTAINER LOG: All Local Binarys Multi Pub/Sub]\n${logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-02T08:36:45.053261" elapsed="0.000163"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T08:36:45.053679" level="INFO">
[CONTAINER LOG: All Local Binarys Multi Pub/Sub]
[Entrypoint] Starting local multi pub/sub test in mode local_shm
Shared memory monitoring is enabled (domain: ecal_mon - queue size: 1024)
[Publisher] Waiting for at least 2 subscriber(s) on topic: test_topic
Shared memory monitoring is enabled (domain: ecal_mon - queue size: 1024)
[Publisher] Waiting for at least 2 subscriber(s) on topic: test_topic
Shared memory monitoring is enabled (domain: ecal_mon - queue size: 1024)
[Subscriber 1] Waiting for messages...

Shared memory monitoring is enabled (domain: ecal_mon - queue size: 1024)
[Subscriber 2] Waiting for messages...
[Publisher] Found 2 subscriber(s). Proceeding to send messages.
[Publisher] Found 2 subscriber(s). Proceeding to send messages.
[Publisher 2] Started with mode=local_shm, topic=test_topic, node=multi_publisher, count=10, delay=1000ms
[Publisher 1] Started with mode=local_shm, topic=test_topic, node=multi_publisher, count=10, delay=1000ms

[Publisher 2] Finished sending messages.

[Publisher 1] Finished sending messages.

=== [Subscriber 2] Received Message Summary ===
PUB1 messages (42):--------------&gt; 10/10
PUB2 messages (43):-------------&gt; 10/10
[Subscriber 2] [✓] Received messages from both publishers.


=== [Subscriber 1] Received Message Summary ===
PUB1 messages (42):--------------&gt; 10/10
PUB2 messages (43):-------------&gt; 10/10
[Subscriber 1] [✓] Received messages from both publishers.

[Entrypoint] All subscribers received messages from both publishers.
</msg>
<arg>\n[CONTAINER LOG: All Local Binarys Multi Pub/Sub]\n${logs}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T08:36:45.053535" elapsed="0.000218"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-07-02T08:36:45.055102" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-02T08:36:45.053855" elapsed="0.001270"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-02T08:36:45.055347" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Local Multi Pub/Sub Test test failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-02T08:36:45.055208" elapsed="0.000183"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-02T08:36:45.055467" elapsed="0.006194"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-02T08:36:46.062014" level="INFO">Slept 1 second.</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-02T08:36:45.061748" elapsed="1.000375"/>
</kw>
<arg>local_shm</arg>
<status status="PASS" start="2025-07-02T08:36:26.916228" elapsed="19.146043"/>
</kw>
<tag>multi_pub_sub_local_shm</tag>
<status status="PASS" start="2025-07-02T08:36:26.915730" elapsed="19.146656"/>
</test>
<test id="s1-s2-t2" name="Multi Pub/Sub Local UDP Test" line="43">
<kw name="Run Multi Pub Sub Test Local">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T08:36:46.063735" level="INFO">${IMAGE} = multi_pub_sub_local_udp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T08:36:46.063586" elapsed="0.000170"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T08:36:46.063940" level="INFO">${CONTAINER} = multi_locallocal_udp</msg>
<var>${CONTAINER}</var>
<arg>multi_local${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T08:36:46.063830" elapsed="0.000127"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Running local multi pub/sub test (all binarys in same Container) with ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-02T08:36:46.064057" elapsed="0.000131"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<arg>${IMAGE}</arg>
<arg>local_multi</arg>
<arg>${layer_tag}</arg>
<status status="PASS" start="2025-07-02T08:36:46.064280" elapsed="0.116471"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-02T08:37:04.181376" level="INFO">Slept 18 seconds.</msg>
<arg>18s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-02T08:36:46.180973" elapsed="18.000519"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-07-02T08:37:04.185552" level="INFO">${logs} = [Entrypoint] Starting local multi pub/sub test in mode local_udp
[Publisher] Waiting for at least 2 subscriber(s) on topic: test_topic
[Publisher] Waiting for at least 2 subscriber(s) on topic: test_t...</msg>
<var>${logs}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-02T08:37:04.181658" elapsed="0.003921"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[CONTAINER LOG: All Local Binarys Multi Pub/Sub]\n${logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-02T08:37:04.185674" elapsed="0.000160"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T08:37:04.186097" level="INFO">
[CONTAINER LOG: All Local Binarys Multi Pub/Sub]
[Entrypoint] Starting local multi pub/sub test in mode local_udp
[Publisher] Waiting for at least 2 subscriber(s) on topic: test_topic
[Publisher] Waiting for at least 2 subscriber(s) on topic: test_topic
[Subscriber 1] Waiting for messages...

[Subscriber 2] Waiting for messages...
[Publisher] Found 2 subscriber(s). Proceeding to send messages.
[Publisher] Found 2 subscriber(s). Proceeding to send messages.
[Publisher 2] Started with mode=local_udp, topic=test_topic, node=multi_publisher, count=10, delay=1000ms
[Publisher 1] Started with mode=local_udp, topic=test_topic, node=multi_publisher, count=10, delay=1000ms

[Publisher 1] Finished sending messages.

[Publisher 2] Finished sending messages.

=== [Subscriber 2] Received Message Summary ===
PUB1 messages (42):--------------&gt; 10/10
PUB2 messages (43):-------------&gt; 10/10
[Subscriber 2] [✓] Received messages from both publishers.


=== [Subscriber 1] Received Message Summary ===
PUB1 messages (42):--------------&gt; 10/10
PUB2 messages (43):-------------&gt; 10/10
[Subscriber 1] [✓] Received messages from both publishers.

[Entrypoint] All subscribers received messages from both publishers.
</msg>
<arg>\n[CONTAINER LOG: All Local Binarys Multi Pub/Sub]\n${logs}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T08:37:04.185939" elapsed="0.000202"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-07-02T08:37:04.187303" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-02T08:37:04.186213" elapsed="0.001114"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-02T08:37:04.187542" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Local Multi Pub/Sub Test test failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-02T08:37:04.187408" elapsed="0.000187"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-02T08:37:04.187694" elapsed="0.005132"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-02T08:37:05.193179" level="INFO">Slept 1 second.</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-02T08:37:04.192911" elapsed="1.000383"/>
</kw>
<arg>local_udp</arg>
<status status="PASS" start="2025-07-02T08:36:46.063359" elapsed="19.130027"/>
</kw>
<tag>multi_pub_sub_local_udp</tag>
<status status="PASS" start="2025-07-02T08:36:46.062945" elapsed="19.130566"/>
</test>
<test id="s1-s2-t3" name="Multi Pub/Sub Network UDP Test" line="56">
<kw name="Run Multi Pub Sub Test Network">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T08:37:05.194940" level="INFO">${IMAGE} = multi_pub_sub_network_udp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T08:37:05.194795" elapsed="0.000165"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T08:37:05.195154" level="INFO">${TOPIC} = test_topic</msg>
<var>${TOPIC}</var>
<arg>test_topic</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T08:37:05.195060" elapsed="0.000112"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T08:37:05.195347" level="INFO">${PUB1} = pub1_network_udp</msg>
<var>${PUB1}</var>
<arg>pub1_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T08:37:05.195242" elapsed="0.000121"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T08:37:05.195524" level="INFO">${PUB2} = pub2_network_udp</msg>
<var>${PUB2}</var>
<arg>pub2_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T08:37:05.195426" elapsed="0.000114"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T08:37:05.195699" level="INFO">${SUB1} = sub1_network_udp</msg>
<var>${SUB1}</var>
<arg>sub1_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T08:37:05.195602" elapsed="0.000114"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T08:37:05.195871" level="INFO">${SUB2} = sub2_network_udp</msg>
<var>${SUB2}</var>
<arg>sub2_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T08:37:05.195776" elapsed="0.000110"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Starting multi pub/sub test with ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-02T08:37:05.195948" elapsed="0.000134"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${SUB1}</arg>
<arg>${IMAGE}</arg>
<arg>multi_subscriber</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-02T08:37:05.196179" elapsed="0.133574"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${SUB2}</arg>
<arg>${IMAGE}</arg>
<arg>multi_subscriber2</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-02T08:37:05.329946" elapsed="0.126984"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${PUB1}</arg>
<arg>${IMAGE}</arg>
<arg>multi_publisher</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-02T08:37:05.457250" elapsed="0.124422"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${PUB2}</arg>
<arg>${IMAGE}</arg>
<arg>multi_publisher2</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-02T08:37:05.581876" elapsed="0.124878"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-02T08:37:23.707331" level="INFO">Slept 18 seconds.</msg>
<arg>18s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-02T08:37:05.706942" elapsed="18.000509"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-07-02T08:37:23.710389" level="INFO">${log1} = [Entrypoint] Starting multi_subscriber in mode network_udp
[Subscriber 1] Waiting for messages...


=== [Subscriber 1] Received Message Summary ===
PUB1 messages (42):--------------&gt; 10/10
PUB2 messag...</msg>
<var>${log1}</var>
<arg>${SUB1}</arg>
<status status="PASS" start="2025-07-02T08:37:23.707619" elapsed="0.002799"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[CONTAINER LOG: SUBSCRIBER 1]\n${log1}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-02T08:37:23.710509" elapsed="0.000157"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T08:37:23.710904" level="INFO">
[CONTAINER LOG: SUBSCRIBER 1]
[Entrypoint] Starting multi_subscriber in mode network_udp
[Subscriber 1] Waiting for messages...


=== [Subscriber 1] Received Message Summary ===
PUB1 messages (42):--------------&gt; 10/10
PUB2 messages (43):-------------&gt; 10/10
[Subscriber 1] [✓] Received messages from both publishers.

</msg>
<arg>\n[CONTAINER LOG: SUBSCRIBER 1]\n${log1}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T08:37:23.710775" elapsed="0.000168"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-07-02T08:37:23.713091" level="INFO">${log2} = [Entrypoint] Starting multi_subscriber2 in mode network_udp
[Subscriber 2] Waiting for messages...

=== [Subscriber 2] Received Message Summary ===
PUB1 messages (42):--------------&gt; 10/10
PUB2 messag...</msg>
<var>${log2}</var>
<arg>${SUB2}</arg>
<status status="PASS" start="2025-07-02T08:37:23.711034" elapsed="0.002083"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[CONTAINER LOG: SUBSCRIBER 2]\n${log2}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-02T08:37:23.713201" elapsed="0.000134"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T08:37:23.713558" level="INFO">
[CONTAINER LOG: SUBSCRIBER 1]
[Entrypoint] Starting multi_subscriber2 in mode network_udp
[Subscriber 2] Waiting for messages...

=== [Subscriber 2] Received Message Summary ===
PUB1 messages (42):--------------&gt; 10/10
PUB2 messages (43):-------------&gt; 10/10
[Subscriber 2] [✓] Received messages from both publishers.

</msg>
<arg>\n[CONTAINER LOG: SUBSCRIBER 1]\n${log2}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T08:37:23.713439" elapsed="0.000155"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${SUB1}</arg>
<status status="PASS" start="2025-07-02T08:37:23.713662" elapsed="0.000973"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${SUB2}</arg>
<status status="PASS" start="2025-07-02T08:37:23.714715" elapsed="0.000929"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${PUB1}</arg>
<status status="PASS" start="2025-07-02T08:37:23.715723" elapsed="0.000947"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${PUB2}</arg>
<status status="PASS" start="2025-07-02T08:37:23.716751" elapsed="0.001052"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-07-02T08:37:23.718721" level="INFO">${exit1} = 0</msg>
<var>${exit1}</var>
<arg>${SUB1}</arg>
<status status="PASS" start="2025-07-02T08:37:23.717884" elapsed="0.000860"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-07-02T08:37:23.719689" level="INFO">${exit2} = 0</msg>
<var>${exit2}</var>
<arg>${SUB2}</arg>
<status status="PASS" start="2025-07-02T08:37:23.718821" elapsed="0.000893"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-02T08:37:23.719928" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit1}</arg>
<arg>0</arg>
<arg>Subscriber 1 failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-02T08:37:23.719795" elapsed="0.000176"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-02T08:37:23.720189" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit2}</arg>
<arg>0</arg>
<arg>Subscriber 2 failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-02T08:37:23.720077" elapsed="0.000150"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Multi Pub/Sub Test ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-07-02T08:37:23.720298" elapsed="0.000132"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${SUB1}</arg>
<status status="PASS" start="2025-07-02T08:37:23.720518" elapsed="0.005101"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${SUB2}</arg>
<status status="PASS" start="2025-07-02T08:37:23.725700" elapsed="0.005170"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${PUB1}</arg>
<status status="PASS" start="2025-07-02T08:37:23.730952" elapsed="0.005215"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${PUB2}</arg>
<status status="PASS" start="2025-07-02T08:37:23.736249" elapsed="0.004863"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-02T08:37:24.741453" level="INFO">Slept 1 second.</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-02T08:37:23.741209" elapsed="1.000347"/>
</kw>
<arg>network_udp</arg>
<arg>network</arg>
<status status="PASS" start="2025-07-02T08:37:05.194555" elapsed="19.547092"/>
</kw>
<tag>multi_pub_sub_network_udp</tag>
<status status="PASS" start="2025-07-02T08:37:05.194105" elapsed="19.547657"/>
</test>
<test id="s1-s2-t4" name="Multi Pub/Sub Network TCP Test" line="60">
<kw name="Run Multi Pub Sub Test Network">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T08:37:24.743878" level="INFO">${IMAGE} = multi_pub_sub_network_tcp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T08:37:24.743735" elapsed="0.000164"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T08:37:24.744086" level="INFO">${TOPIC} = test_topic</msg>
<var>${TOPIC}</var>
<arg>test_topic</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T08:37:24.743971" elapsed="0.000134"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T08:37:24.744278" level="INFO">${PUB1} = pub1_network_tcp</msg>
<var>${PUB1}</var>
<arg>pub1_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T08:37:24.744174" elapsed="0.000121"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T08:37:24.744455" level="INFO">${PUB2} = pub2_network_tcp</msg>
<var>${PUB2}</var>
<arg>pub2_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T08:37:24.744357" elapsed="0.000114"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T08:37:24.744707" level="INFO">${SUB1} = sub1_network_tcp</msg>
<var>${SUB1}</var>
<arg>sub1_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T08:37:24.744601" elapsed="0.000123"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T08:37:24.744881" level="INFO">${SUB2} = sub2_network_tcp</msg>
<var>${SUB2}</var>
<arg>sub2_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T08:37:24.744787" elapsed="0.000115"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Starting multi pub/sub test with ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-02T08:37:24.744966" elapsed="0.000146"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${SUB1}</arg>
<arg>${IMAGE}</arg>
<arg>multi_subscriber</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-02T08:37:24.745200" elapsed="0.136463"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${SUB2}</arg>
<arg>${IMAGE}</arg>
<arg>multi_subscriber2</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-02T08:37:24.881848" elapsed="0.128507"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${PUB1}</arg>
<arg>${IMAGE}</arg>
<arg>multi_publisher</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-02T08:37:25.010564" elapsed="0.133994"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${PUB2}</arg>
<arg>${IMAGE}</arg>
<arg>multi_publisher2</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-02T08:37:25.144750" elapsed="0.137337"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-02T08:37:43.282547" level="INFO">Slept 18 seconds.</msg>
<arg>18s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-02T08:37:25.282255" elapsed="18.000408"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-07-02T08:37:43.285534" level="INFO">${log1} = [Entrypoint] Starting multi_subscriber in mode network_tcp
[Subscriber 1] Waiting for messages...

1751445458050 ms | 92de951d7c51 | multi_subscriber | 7 | error | CTCPReaderLayer - TCPPubSub (Error) ...</msg>
<var>${log1}</var>
<arg>${SUB1}</arg>
<status status="PASS" start="2025-07-02T08:37:43.282829" elapsed="0.002733"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[CONTAINER LOG: SUBSCRIBER 1]\n${log1}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-02T08:37:43.285654" elapsed="0.000177"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T08:37:43.286086" level="INFO">
[CONTAINER LOG: SUBSCRIBER 1]
[Entrypoint] Starting multi_subscriber in mode network_tcp
[Subscriber 1] Waiting for messages...

1751445458050 ms | 92de951d7c51 | multi_subscriber | 7 | error | CTCPReaderLayer - TCPPubSub (Error) -SubscriberSession 172.18.0.2:58316-&gt;343532fe1bc1:43919: Error reading header length: End of file
1751445458050 ms | 92de951d7c51 | multi_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:51512: Failed connecting to publisher 343532fe1bc1:43919: Connection refused
1751445458051 ms | 92de951d7c51 | multi_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:51514: Failed connecting to publisher 343532fe1bc1:43919: Connection refused
1751445458052 ms | 92de951d7c51 | multi_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:51516: Failed connecting to publisher 343532fe1bc1:43919: Connection refused
1751445458053 ms | 92de951d7c51 | multi_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:51530: Failed connecting to publisher 343532fe1bc1:43919: Connection refused
1751445458053 ms | 92de951d7c51 | multi_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:51536: Failed connecting to publisher 343532fe1bc1:43919: Connection refused
1751445458090 ms | 92de951d7c51 | multi_subscriber | 7 | error | CTCPReaderLayer - TCPPubSub (Error) -SubscriberSession 172.18.0.2:36946-&gt;1157dee6ba04:43813: Error reading header length: End of file
1751445458092 ms | 92de951d7c51 | multi_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:53400: Failed connecting to publisher 1157dee6ba04:43813: Connection refused
1751445458092 ms | 92de951d7c51 | multi_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:53404: Failed connecting to publisher 1157dee6ba04:43813: Connection refused
1751445458093 ms | 92de951d7c51 | multi_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:53420: Failed connecting to publisher 1157dee6ba04:43813: Connection refused
1751445458095 ms | 92de951d7c51 | multi_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:53434: Failed connecting to publisher 1157dee6ba04:43813: Connection refused
1751445458096 ms | 92de951d7c51 | multi_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:53450: Failed connecting to publisher 1157dee6ba04:43813: Connection refused

=== [Subscriber 1] Received Message Summary ===
PUB1 messages (42):--------------&gt; 10/10
PUB2 messages (43):-------------&gt; 10/10
[Subscriber 1] [✓] Received messages from both publishers.

</msg>
<arg>\n[CONTAINER LOG: SUBSCRIBER 1]\n${log1}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T08:37:43.285934" elapsed="0.000205"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-07-02T08:37:43.288415" level="INFO">${log2} = [Entrypoint] Starting multi_subscriber2 in mode network_tcp
[Subscriber 2] Waiting for messages...
1751445458050 ms | a55032be524f | multi_subscriber | 7 | error | CTCPReaderLayer - TCPPubSub (Error) ...</msg>
<var>${log2}</var>
<arg>${SUB2}</arg>
<status status="PASS" start="2025-07-02T08:37:43.286211" elapsed="0.002228"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[CONTAINER LOG: SUBSCRIBER 2]\n${log2}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-02T08:37:43.288521" elapsed="0.000171"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T08:37:43.288955" level="INFO">
[CONTAINER LOG: SUBSCRIBER 1]
[Entrypoint] Starting multi_subscriber2 in mode network_tcp
[Subscriber 2] Waiting for messages...
1751445458050 ms | a55032be524f | multi_subscriber | 7 | error | CTCPReaderLayer - TCPPubSub (Error) -SubscriberSession 172.18.0.3:57490-&gt;343532fe1bc1:43919: Error reading header length: End of file
1751445458050 ms | a55032be524f | multi_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.3:41490: Failed connecting to publisher 343532fe1bc1:43919: Connection refused
1751445458051 ms | a55032be524f | multi_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.3:41500: Failed connecting to publisher 343532fe1bc1:43919: Connection refused
1751445458052 ms | a55032be524f | multi_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.3:41514: Failed connecting to publisher 343532fe1bc1:43919: Connection refused
1751445458052 ms | a55032be524f | multi_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.3:41520: Failed connecting to publisher 343532fe1bc1:43919: Connection refused
1751445458053 ms | a55032be524f | multi_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.3:41536: Failed connecting to publisher 343532fe1bc1:43919: Connection refused
1751445458090 ms | a55032be524f | multi_subscriber | 7 | error | CTCPReaderLayer - TCPPubSub (Error) -SubscriberSession 172.18.0.3:57264-&gt;1157dee6ba04:43813: Error reading header length: End of file
1751445458091 ms | a55032be524f | multi_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.3:53854: Failed connecting to publisher 1157dee6ba04:43813: Connection refused
1751445458092 ms | a55032be524f | multi_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.3:53868: Failed connecting to publisher 1157dee6ba04:43813: Connection refused
1751445458093 ms | a55032be524f | multi_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.3:53872: Failed connecting to publisher 1157dee6ba04:43813: Connection refused
1751445458094 ms | a55032be524f | multi_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.3:53882: Failed connecting to publisher 1157dee6ba04:43813: Connection refused
1751445458096 ms | a55032be524f | multi_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.3:53896: Failed connecting to publisher 1157dee6ba04:43813: Connection refused

=== [Subscriber 2] Received Message Summary ===
PUB1 messages (42):--------------&gt; 10/10
PUB2 messages (43):-------------&gt; 10/10
[Subscriber 2] [✓] Received messages from both publishers.

</msg>
<arg>\n[CONTAINER LOG: SUBSCRIBER 1]\n${log2}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T08:37:43.288790" elapsed="0.000321"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${SUB1}</arg>
<status status="PASS" start="2025-07-02T08:37:43.289217" elapsed="0.001074"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${SUB2}</arg>
<status status="PASS" start="2025-07-02T08:37:43.290397" elapsed="0.001183"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${PUB1}</arg>
<status status="PASS" start="2025-07-02T08:37:43.291661" elapsed="0.000985"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${PUB2}</arg>
<status status="PASS" start="2025-07-02T08:37:43.292727" elapsed="0.000963"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-07-02T08:37:43.294666" level="INFO">${exit1} = 0</msg>
<var>${exit1}</var>
<arg>${SUB1}</arg>
<status status="PASS" start="2025-07-02T08:37:43.293774" elapsed="0.000915"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-07-02T08:37:43.295816" level="INFO">${exit2} = 0</msg>
<var>${exit2}</var>
<arg>${SUB2}</arg>
<status status="PASS" start="2025-07-02T08:37:43.294768" elapsed="0.001073"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-02T08:37:43.296095" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit1}</arg>
<arg>0</arg>
<arg>Subscriber 1 failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-02T08:37:43.295925" elapsed="0.000223"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-02T08:37:43.296346" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit2}</arg>
<arg>0</arg>
<arg>Subscriber 2 failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-02T08:37:43.296233" elapsed="0.000151"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Multi Pub/Sub Test ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-07-02T08:37:43.296455" elapsed="0.000133"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${SUB1}</arg>
<status status="PASS" start="2025-07-02T08:37:43.296681" elapsed="0.005365"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${SUB2}</arg>
<status status="PASS" start="2025-07-02T08:37:43.302130" elapsed="0.005109"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${PUB1}</arg>
<status status="PASS" start="2025-07-02T08:37:43.307321" elapsed="0.005018"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${PUB2}</arg>
<status status="PASS" start="2025-07-02T08:37:43.312423" elapsed="0.005100"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-02T08:37:44.317854" level="INFO">Slept 1 second.</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-02T08:37:43.317609" elapsed="1.000353"/>
</kw>
<arg>network_tcp</arg>
<arg>network</arg>
<status status="PASS" start="2025-07-02T08:37:24.743504" elapsed="19.574565"/>
</kw>
<tag>multi_pub_sub_network_tcp</tag>
<status status="PASS" start="2025-07-02T08:37:24.743076" elapsed="19.575115"/>
</test>
<status status="PASS" start="2025-07-02T08:36:14.874137" elapsed="89.445353"/>
</suite>
<suite id="s1-s3" name="Network Crash" source="/home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/network_crash/robottests/network_crash.robot">
<kw name="Init Test Context" type="SETUP">
<kw name="Set Test Context" owner="GlobalPathsLibrary">
<arg>network_crash</arg>
<arg>network_crash</arg>
<doc>Sets the test folder and tag prefix if it's a valid test case.
The folder must exist under integration_tests/ and contain typical test structure.</doc>
<status status="PASS" start="2025-07-02T08:37:44.322639" elapsed="0.000134"/>
</kw>
<kw name="Get Build Script Path" owner="GlobalPathsLibrary">
<msg time="2025-07-02T08:37:44.322939" level="INFO">${build} = /home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/network_crash/scripts/build_images.sh</msg>
<var>${build}</var>
<status status="PASS" start="2025-07-02T08:37:44.322851" elapsed="0.000108"/>
</kw>
<kw name="Get Network Name" owner="GlobalPathsLibrary">
<msg time="2025-07-02T08:37:44.323133" level="INFO">${net} = ecal_test_net</msg>
<var>${net}</var>
<status status="PASS" start="2025-07-02T08:37:44.323050" elapsed="0.000101"/>
</kw>
<kw name="Get Build Script Args" owner="GlobalPathsLibrary">
<msg time="2025-07-02T08:37:44.323288" level="INFO">${args} = ['network_crash']</msg>
<var>${args}</var>
<status status="PASS" start="2025-07-02T08:37:44.323212" elapsed="0.000093"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-07-02T08:37:44.323506" level="INFO">${BUILD_SCRIPT} = /home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/network_crash/scripts/build_images.sh</msg>
<arg>${BUILD_SCRIPT}</arg>
<arg>${build}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-07-02T08:37:44.323378" elapsed="0.000156"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-07-02T08:37:44.323758" level="INFO">${NETWORK} = ecal_test_net</msg>
<arg>${NETWORK}</arg>
<arg>${net}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-07-02T08:37:44.323643" elapsed="0.000142"/>
</kw>
<kw name="Get Test Description" owner="GlobalPathsLibrary">
<msg time="2025-07-02T08:37:44.324051" level="INFO">${desc} = Test Objective:
Verify that local UDP-based communication remains functional even if a separate network UDP publisher is disconnected —
simulating a network failure scenario such as a cable unplug.

T...</msg>
<var>${desc}</var>
<doc>Reads the *** Comments *** section from the .robot file and returns it as a string.</doc>
<status status="PASS" start="2025-07-02T08:37:44.323849" elapsed="0.000226"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T08:37:44.324235" level="INFO">Test Objective:
Verify that local UDP-based communication remains functional even if a separate network UDP publisher is disconnected —
simulating a network failure scenario such as a cable unplug.

Test Context:
This test validates the robustness of eCAL's UDP transport layer under fault conditions by ensuring that
local communication is not affected by network-layer interruptions.

Test Scenario:
1. A local UDP subscriber and two local UDP publishers run in the **same container** using eCAL's local mode.
- Publisher 1 sends payloads with value 42 from the beginning.
- Publisher 2 sends value 44, but only **after the network publisher is disconnected** (simulated delay).

2. A network UDP publisher runs in a **separate container**, using eCAL network mode and sends value 43.

3. All publishers run in parallel for a defined period (publisher 2 starts delayed after ~7s).

4. The test then **disconnects** the network UDP publisher from the Docker network.

Success Criteria:
- The subscriber receives:
• Messages with value 42 throughout the test.
• Messages with value 43 only **before** the disconnection.
• Messages with value 44 after the network crash (i.e., from local UDP Publisher 2).
- The subscriber container exits with code 0.
- The log confirms all expected messages have been received.

Note:
This test ensures **fault isolation** between local and network layers in eCAL middleware.</msg>
<arg>${desc}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T08:37:44.324148" elapsed="0.000123"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>[SETUP] Building image...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-02T08:37:44.324336" elapsed="0.000083"/>
</kw>
<kw name="Run Process" owner="Process">
<msg time="2025-07-02T08:37:44.324662" level="INFO">Starting process:
/home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/network_crash/scripts/build_images.sh network_crash</msg>
<msg time="2025-07-02T08:37:44.325103" level="INFO">Waiting for process to complete.</msg>
<msg time="2025-07-02T08:37:53.030276" level="INFO">Process completed.</msg>
<msg time="2025-07-02T08:37:53.030436" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<var>${result}</var>
<arg>${BUILD_SCRIPT}</arg>
<arg>@{args}</arg>
<doc>Runs a process and waits for it to complete.</doc>
<status status="PASS" start="2025-07-02T08:37:44.324513" elapsed="8.705948"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-02T08:37:53.031114" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${result.rc}</arg>
<arg>0</arg>
<arg>Docker image build failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-02T08:37:53.030610" elapsed="0.000555"/>
</kw>
<kw name="Create Docker Network" owner="MyDockerLibrary">
<arg>${NETWORK}</arg>
<status status="PASS" start="2025-07-02T08:37:53.031248" elapsed="0.007095"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-02T08:37:55.038723" level="INFO">Slept 2 seconds.</msg>
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-02T08:37:53.038462" elapsed="2.000375"/>
</kw>
<status status="PASS" start="2025-07-02T08:37:44.322492" elapsed="10.716439"/>
</kw>
<test id="s1-s3-t1" name="Local communication survives Network crash" line="45">
<kw name="Run Network Crash Survival Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T08:37:55.040229" level="INFO">${IMAGE} = network_crash_local_udp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_local_udp</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T08:37:55.040090" elapsed="0.000160"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T08:37:55.040406" level="INFO">${TOPIC} = test_topic</msg>
<var>${TOPIC}</var>
<arg>test_topic</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T08:37:55.040323" elapsed="0.000100"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T08:37:55.040567" level="INFO">${NET_PUB} = udp_network_pub</msg>
<var>${NET_PUB}</var>
<arg>udp_network_pub</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T08:37:55.040488" elapsed="0.000095"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T08:37:55.040721" level="INFO">${LOCAL_ALL} = udp_local_all</msg>
<var>${LOCAL_ALL}</var>
<arg>udp_local_all</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T08:37:55.040645" elapsed="0.000092"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n\n[INFO] Starting "LOCAL UDP (PUB1 + SUB + PUB3)" in one container and "NETWORK UDP (PUB2)" separately...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-02T08:37:55.040799" elapsed="0.000104"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${LOCAL_ALL}</arg>
<arg>${IMAGE}</arg>
<arg>udp_local_all</arg>
<arg>${TOPIC}</arg>
<arg>${LOCAL_ALL}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-02T08:37:55.041020" elapsed="0.133709"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${NET_PUB}</arg>
<arg>${IMAGE}</arg>
<arg>udp_network_pub</arg>
<arg>${TOPIC}</arg>
<arg>${NET_PUB}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-02T08:37:55.174938" elapsed="0.118863"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Letting PUB1 and PUB2 run in parallel for 7s...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-02T08:37:55.293971" elapsed="0.000197"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-02T08:38:02.294554" level="INFO">Slept 7 seconds.</msg>
<arg>7s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-02T08:37:55.294280" elapsed="7.000390"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[SIMULATION] Disconnecting NETWORK UDP Publisher..</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-02T08:38:02.294842" elapsed="0.000217"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-07-02T08:38:02.297880" level="INFO">${log_net} = [Entrypoint] Starting network UDP publisher...
[Publisher] Waiting for at least 1 subscriber(s) on topic: test_topic
[Publisher] Found 1 subscriber(s). Proceeding to send messages.
</msg>
<var>${log_net}</var>
<arg>${NET_PUB}</arg>
<status status="PASS" start="2025-07-02T08:38:02.295196" elapsed="0.002712"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T08:38:02.298160" level="INFO">
[LOG: NETWORK UDP PUB2 CONTAINER]
[Entrypoint] Starting network UDP publisher...
[Publisher] Waiting for at least 1 subscriber(s) on topic: test_topic
[Publisher] Found 1 subscriber(s). Proceeding to send messages.
</msg>
<arg>\n[LOG: NETWORK UDP PUB2 CONTAINER]\n${log_net}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T08:38:02.298033" elapsed="0.000215"/>
</kw>
<kw name="Disconnect Container From Network">
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[SIMULATION] Disconnecting ${container} from ${network} (simulate network failure)...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-02T08:38:02.298626" elapsed="0.000155"/>
</kw>
<kw name="Run Process" owner="Process">
<msg time="2025-07-02T08:38:02.299068" level="INFO">Starting process:
docker network disconnect ecal_test_net udp_network_pub</msg>
<msg time="2025-07-02T08:38:02.299784" level="INFO">Waiting for process to complete.</msg>
<msg time="2025-07-02T08:38:02.343380" level="INFO">Process completed.</msg>
<msg time="2025-07-02T08:38:02.343577" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<var>${result}</var>
<arg>docker</arg>
<arg>network</arg>
<arg>disconnect</arg>
<arg>${network}</arg>
<arg>${container}</arg>
<doc>Runs a process and waits for it to complete.</doc>
<status status="PASS" start="2025-07-02T08:38:02.298894" elapsed="0.044720"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-02T08:38:02.344370" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${result.rc}</arg>
<arg>0</arg>
<arg>Failed to disconnect ${container} from ${network}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-02T08:38:02.343808" elapsed="0.000613"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-02T08:38:03.344752" level="INFO">Slept 1 second.</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-02T08:38:02.344508" elapsed="1.000360"/>
</kw>
<arg>${NET_PUB}</arg>
<arg>${NETWORK}</arg>
<status status="PASS" start="2025-07-02T08:38:02.298384" elapsed="1.046575"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-02T08:38:36.345430" level="INFO">Slept 33 seconds.</msg>
<arg>33s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-02T08:38:03.345132" elapsed="33.000402"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-07-02T08:38:36.348711" level="INFO">${log_local} = [Entrypoint] Starting UDP subscriber, then UDP publisher...
[Publisher] Waiting for at least 1 subscriber(s) on topic: test_topic
[Publisher] Found 1 subscriber(s). Proceeding to send messages.
[Subsc...</msg>
<var>${log_local}</var>
<arg>${LOCAL_ALL}</arg>
<status status="PASS" start="2025-07-02T08:38:36.345692" elapsed="0.003047"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[LOG: LOCAL UDP PUB + SUB + PUB3 CONTAINER]\n${log_local}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-02T08:38:36.348841" elapsed="0.000206"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T08:38:36.349319" level="INFO">
[LOG: LOCAL UDP PUB + SUB + PUB3 CONTAINER]
[Entrypoint] Starting UDP subscriber, then UDP publisher...
[Publisher] Waiting for at least 1 subscriber(s) on topic: test_topic
[Publisher] Found 1 subscriber(s). Proceeding to send messages.
[Subscriber] Listening on topic 'test_topic'...
[Subscriber] Received: 42
[Subscriber] Received: 43
[Subscriber] Received: 42
[Subscriber] Received: 43
[Subscriber] Received: 42
[Subscriber] Received: 43
[Subscriber] Received: 42
[Subscriber] Received: 43
[Subscriber] Received: 42
[Subscriber] Received: 43
[Subscriber] Received: 42
[Subscriber] Received: 42
[Subscriber] Received: 42
[Subscriber] Received: 42
[Entrypoint] Starting delayed LOCAL UDP Publisher 2 after network failure...
[Publisher] Waiting for at least 1 subscriber(s) on topic: test_topic
[Publisher] Found 1 subscriber(s). Proceeding to send messages.
[Subscriber] Received: 42
[Subscriber] Received: 42
[Subscriber] Received: 44
[Subscriber] Received: 42
[Subscriber] Received: 44
[Subscriber] Received: 42
[Subscriber] Received: 44
[Subscriber] Received: 42
[Subscriber] Received: 44
[Subscriber] Received: 42
[Subscriber] Received: 44
[Subscriber] Received: 42
[Subscriber] Received: 44
[Subscriber] Received: 42
[Subscriber] Received: 44
[Subscriber] Received: 42
[Subscriber] Received: 44
[Subscriber] Received: 42
[Subscriber] Received: 44
[Subscriber] Received: 42
[Subscriber] Received: 44
[Subscriber] Received: 42
[Subscriber] Received: 44
[Subscriber] Received: 42
[Subscriber] Received: 44
[Subscriber] Received: 42
[Subscriber] Received: 44
[Subscriber] Received: 42
[Subscriber] Received: 44
[Subscriber] Received: 42
[Subscriber] Received: 44

=== Message Summary ===

Local UDP PUB1 messages (42):--------------&gt; 25/25
Network UDP PUB2 messages (43):-------------&gt; 5/25
Local UDP PUB3 messages after crash (44):--&gt; 15/15


[✓] All expected messages received: local before and after crash, and network.
[Entrypoint] Subscriber exited with code 0
</msg>
<arg>\n[LOG: LOCAL UDP PUB + SUB + PUB3 CONTAINER]\n${log_local}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T08:38:36.349163" elapsed="0.000240"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${LOCAL_ALL}</arg>
<status status="PASS" start="2025-07-02T08:38:36.349513" elapsed="0.001255"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-07-02T08:38:36.351749" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>${LOCAL_ALL}</arg>
<status status="PASS" start="2025-07-02T08:38:36.350853" elapsed="0.000919"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-02T08:38:36.351987" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>LOCAL container (PUB + SUB + PUB3) failed unexpectedly!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-02T08:38:36.351853" elapsed="0.000212"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Network Crash Test with Local Recovery Publisher</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-07-02T08:38:36.352145" elapsed="0.000129"/>
</kw>
<status status="PASS" start="2025-07-02T08:37:55.039590" elapsed="41.312749"/>
</kw>
<tag>network_crash_test</tag>
<status status="PASS" start="2025-07-02T08:37:55.039032" elapsed="41.313397"/>
</test>
<status status="PASS" start="2025-07-02T08:37:44.320054" elapsed="52.033176"/>
</suite>
<suite id="s1-s4" name="Pub Crash" source="/home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/pub_crash/robottests/pub_crash.robot">
<kw name="Init Test Context" type="SETUP">
<kw name="Set Test Context" owner="GlobalPathsLibrary">
<arg>pub_crash</arg>
<arg>pub_crash</arg>
<doc>Sets the test folder and tag prefix if it's a valid test case.
The folder must exist under integration_tests/ and contain typical test structure.</doc>
<status status="PASS" start="2025-07-02T08:38:36.356292" elapsed="0.000133"/>
</kw>
<kw name="Get Build Script Path" owner="GlobalPathsLibrary">
<msg time="2025-07-02T08:38:36.356588" level="INFO">${build} = /home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/pub_crash/scripts/build_images.sh</msg>
<var>${build}</var>
<status status="PASS" start="2025-07-02T08:38:36.356502" elapsed="0.000105"/>
</kw>
<kw name="Get Network Name" owner="GlobalPathsLibrary">
<msg time="2025-07-02T08:38:36.356743" level="INFO">${net} = ecal_test_net</msg>
<var>${net}</var>
<status status="PASS" start="2025-07-02T08:38:36.356668" elapsed="0.000092"/>
</kw>
<kw name="Get Build Script Args" owner="GlobalPathsLibrary">
<msg time="2025-07-02T08:38:36.356926" level="INFO">${args} = ['pub_crash']</msg>
<var>${args}</var>
<status status="PASS" start="2025-07-02T08:38:36.356820" elapsed="0.000125"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-07-02T08:38:36.357238" level="INFO">${BUILD_SCRIPT} = /home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/pub_crash/scripts/build_images.sh</msg>
<arg>${BUILD_SCRIPT}</arg>
<arg>${build}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-07-02T08:38:36.357092" elapsed="0.000176"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-07-02T08:38:36.357459" level="INFO">${NETWORK} = ecal_test_net</msg>
<arg>${NETWORK}</arg>
<arg>${net}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-07-02T08:38:36.357344" elapsed="0.000141"/>
</kw>
<kw name="Get Test Description" owner="GlobalPathsLibrary">
<msg time="2025-07-02T08:38:36.357693" level="INFO">${desc} = Test Objective:
Ensure that communication to the subscriber continues even if one publisher crashes.

Test Scenario:
- Two publishers are started:
1. crash_publisher: sends a few messages (value 42) a...</msg>
<var>${desc}</var>
<doc>Reads the *** Comments *** section from the .robot file and returns it as a string.</doc>
<status status="PASS" start="2025-07-02T08:38:36.357551" elapsed="0.000162"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T08:38:36.357866" level="INFO">Test Objective:
Ensure that communication to the subscriber continues even if one publisher crashes.

Test Scenario:
- Two publishers are started:
1. crash_publisher: sends a few messages (value 42) and then crashes.
2. test_publisher: continuously sends messages (value 43).
- One subscriber receives data from both publishers.
- A monitoring process tracks process appearance.

Success Criteria:
- Subscriber receives enough messages with value 43 after crash_publisher crashes.
- Subscriber exits with code 0, indicating continued communication.
- All containers terminate cleanly.</msg>
<arg>${desc}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T08:38:36.357783" elapsed="0.000115"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>[SETUP] Building Docker image...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-02T08:38:36.357962" elapsed="0.000117"/>
</kw>
<kw name="Run Process" owner="Process">
<msg time="2025-07-02T08:38:36.358320" level="INFO">Starting process:
/home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/pub_crash/scripts/build_images.sh pub_crash</msg>
<msg time="2025-07-02T08:38:36.358720" level="INFO">Waiting for process to complete.</msg>
<msg time="2025-07-02T08:38:45.092163" level="INFO">Process completed.</msg>
<msg time="2025-07-02T08:38:45.092327" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<var>${result}</var>
<arg>${BUILD_SCRIPT}</arg>
<arg>@{args}</arg>
<doc>Runs a process and waits for it to complete.</doc>
<status status="PASS" start="2025-07-02T08:38:36.358167" elapsed="8.734186"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-02T08:38:45.092979" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${result.rc}</arg>
<arg>0</arg>
<arg>Docker build failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-02T08:38:45.092507" elapsed="0.000564"/>
</kw>
<kw name="Create Docker Network" owner="MyDockerLibrary">
<arg>${NETWORK}</arg>
<status status="PASS" start="2025-07-02T08:38:45.093159" elapsed="0.007262"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-02T08:38:48.100763" level="INFO">Slept 3 seconds.</msg>
<arg>3s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-02T08:38:45.100542" elapsed="3.000324"/>
</kw>
<status status="PASS" start="2025-07-02T08:38:36.356160" elapsed="11.744789"/>
</kw>
<test id="s1-s4-t1" name="Communication Continues After Publisher Crash (UDP)" line="30">
<kw name="Run Network Communication Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T08:38:48.102218" level="INFO">${IMAGE} = pub_crash_network_udp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T08:38:48.102065" elapsed="0.000173"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T08:38:48.102395" level="INFO">${TOPIC} = test_topic</msg>
<var>${TOPIC}</var>
<arg>test_topic</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T08:38:48.102312" elapsed="0.000100"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T08:38:48.102583" level="INFO">${CRASH_PUB} = crash_pub_network_udp</msg>
<var>${CRASH_PUB}</var>
<arg>crash_pub_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T08:38:48.102479" elapsed="0.000121"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T08:38:48.102767" level="INFO">${TEST_PUB} = test_pub_network_udp</msg>
<var>${TEST_PUB}</var>
<arg>test_pub_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T08:38:48.102665" elapsed="0.000120"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T08:38:48.102951" level="INFO">${SUB_NAME} = sub_network_udp</msg>
<var>${SUB_NAME}</var>
<arg>sub_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T08:38:48.102850" elapsed="0.000117"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Starting communication continuity test with ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-02T08:38:48.103056" elapsed="0.000124"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${SUB_NAME}</arg>
<arg>${IMAGE}</arg>
<arg>subscriber</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-02T08:38:48.103265" elapsed="0.133694"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${CRASH_PUB}</arg>
<arg>${IMAGE}</arg>
<arg>crash_publisher</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-02T08:38:48.237161" elapsed="0.122501"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${TEST_PUB}</arg>
<arg>${IMAGE}</arg>
<arg>test_publisher</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${TEST_PUB}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-02T08:38:48.359829" elapsed="0.123931"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-02T08:39:23.484295" level="INFO">Slept 35 seconds.</msg>
<arg>35s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-02T08:38:48.483958" elapsed="35.000454"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-07-02T08:39:23.487465" level="INFO">${sub_logs} = [Entrypoint] Starting crash subscriber in mode network_udp

[Subscriber] Registering callback and waiting for messages...

[Subscriber] Received value: 42
[Subscriber] Received value: 43
[Subscriber] ...</msg>
<var>${sub_logs}</var>
<arg>${SUB_NAME}</arg>
<status status="PASS" start="2025-07-02T08:39:23.484580" elapsed="0.002913"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[SUBSCRIBER CONTAINER OUTPUT]\n${sub_logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-02T08:39:23.487588" elapsed="0.000170"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T08:39:23.488038" level="INFO">
[SUBSCRIBER CONTAINER OUTPUT]
[Entrypoint] Starting crash subscriber in mode network_udp

[Subscriber] Registering callback and waiting for messages...

[Subscriber] Received value: 42
[Subscriber] Received value: 43
[Subscriber] Received value: 42
[Subscriber] Received value: 43
[Subscriber] Received value: 42
[Subscriber] Received value: 43
[Subscriber] Received value: 42
[Subscriber] Received value: 43
[Subscriber] Received value: 42
[Subscriber] Received value: 43
[Subscriber] Received value: 42
[Subscriber] Received value: 43
[Subscriber] Received value: 42
[Subscriber] Received value: 43
[Subscriber] Received value: 42
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Summary] Received 8 x 42 (crash pub), 25 x 43 (test pub)

[✓] Communication continued after crash!

[✓] One Publisher crashed and no more messages received from the crashed publisher!
</msg>
<arg>\n[SUBSCRIBER CONTAINER OUTPUT]\n${sub_logs}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T08:39:23.487864" elapsed="0.000316"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-07-02T08:39:23.490475" level="INFO">${crash_logs} = [Entrypoint] Starting crash publisher in mode network_udp
[Publisher] Waiting for at least 1 subscriber(s) on topic: test_topic
[Publisher] Found 1 subscriber(s). Proceeding to send messages.
[Crash P...</msg>
<var>${crash_logs}</var>
<arg>${CRASH_PUB}</arg>
<status status="PASS" start="2025-07-02T08:39:23.488286" elapsed="0.002215"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[CRASH PUBLISHER OUTPUT]\n${crash_logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-02T08:39:23.490587" elapsed="0.000143"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T08:39:23.490963" level="INFO">
[CRASH PUBLISHER OUTPUT]
[Entrypoint] Starting crash publisher in mode network_udp
[Publisher] Waiting for at least 1 subscriber(s) on topic: test_topic
[Publisher] Found 1 subscriber(s). Proceeding to send messages.
[Crash Publisher] Starting and will crash after 10 messages...
[Crash Publisher] Sent buffer with content: 42 (message 1)
[Crash Publisher] Sent buffer with content: 42 (message 2)
[Crash Publisher] Sent buffer with content: 42 (message 3)
[Crash Publisher] Sent buffer with content: 42 (message 4)
[Crash Publisher] Sent buffer with content: 42 (message 5)
[Crash Publisher] Sent buffer with content: 42 (message 6)
[Crash Publisher] Sent buffer with content: 42 (message 7)
[Crash Publisher] Sent buffer with content: 42 (message 8)
[Crash Publisher] Crashing after message 7
./entrypoint.sh: line 60:     7 Aborted                 (core dumped) ./crash_publisher $ARGS $EXTRA
</msg>
<arg>\n[CRASH PUBLISHER OUTPUT]\n${crash_logs}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T08:39:23.490843" elapsed="0.000184"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${SUB_NAME}</arg>
<status status="PASS" start="2025-07-02T08:39:23.491102" elapsed="0.001017"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${CRASH_PUB}</arg>
<status status="PASS" start="2025-07-02T08:39:23.492202" elapsed="0.000977"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${TEST_PUB}</arg>
<status status="PASS" start="2025-07-02T08:39:23.493260" elapsed="0.000939"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-07-02T08:39:23.495173" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>${SUB_NAME}</arg>
<status status="PASS" start="2025-07-02T08:39:23.494284" elapsed="0.000913"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-02T08:39:23.495427" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Communication failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-02T08:39:23.495291" elapsed="0.000189"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Network Communication after one Publisher crash ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-07-02T08:39:23.495557" elapsed="0.000150"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${SUB_NAME}</arg>
<status status="PASS" start="2025-07-02T08:39:23.495791" elapsed="0.006851"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${CRASH_PUB}</arg>
<status status="PASS" start="2025-07-02T08:39:23.502723" elapsed="0.005308"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${TEST_PUB}</arg>
<status status="PASS" start="2025-07-02T08:39:23.508120" elapsed="0.005057"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-02T08:39:24.513509" level="INFO">Slept 1 second.</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-02T08:39:23.513263" elapsed="1.000362"/>
</kw>
<arg>network_udp</arg>
<arg>network</arg>
<status status="PASS" start="2025-07-02T08:38:48.101541" elapsed="36.412176"/>
</kw>
<tag>pub_crash_network_udp</tag>
<status status="PASS" start="2025-07-02T08:38:48.101035" elapsed="36.412794"/>
</test>
<test id="s1-s4-t2" name="Communication Continues After Publisher Crash (TCP)" line="34">
<kw name="Run Network Communication Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T08:39:24.515958" level="INFO">${IMAGE} = pub_crash_network_tcp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T08:39:24.515810" elapsed="0.000169"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T08:39:24.516163" level="INFO">${TOPIC} = test_topic</msg>
<var>${TOPIC}</var>
<arg>test_topic</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T08:39:24.516076" elapsed="0.000104"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T08:39:24.516355" level="INFO">${CRASH_PUB} = crash_pub_network_tcp</msg>
<var>${CRASH_PUB}</var>
<arg>crash_pub_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T08:39:24.516248" elapsed="0.000124"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T08:39:24.516538" level="INFO">${TEST_PUB} = test_pub_network_tcp</msg>
<var>${TEST_PUB}</var>
<arg>test_pub_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T08:39:24.516436" elapsed="0.000118"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T08:39:24.516714" level="INFO">${SUB_NAME} = sub_network_tcp</msg>
<var>${SUB_NAME}</var>
<arg>sub_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T08:39:24.516617" elapsed="0.000114"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Starting communication continuity test with ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-02T08:39:24.516793" elapsed="0.000129"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${SUB_NAME}</arg>
<arg>${IMAGE}</arg>
<arg>subscriber</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-02T08:39:24.517046" elapsed="0.138819"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${CRASH_PUB}</arg>
<arg>${IMAGE}</arg>
<arg>crash_publisher</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-02T08:39:24.656137" elapsed="0.124226"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${TEST_PUB}</arg>
<arg>${IMAGE}</arg>
<arg>test_publisher</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${TEST_PUB}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-02T08:39:24.780546" elapsed="0.126856"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-02T08:39:59.907909" level="INFO">Slept 35 seconds.</msg>
<arg>35s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-02T08:39:24.907594" elapsed="35.000464"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-07-02T08:39:59.911222" level="INFO">${sub_logs} = [Entrypoint] Starting crash subscriber in mode network_tcp

[Subscriber] Registering callback and waiting for messages...

[Subscriber] Received value: 42
[Subscriber] Received value: 43
[Subscriber] ...</msg>
<var>${sub_logs}</var>
<arg>${SUB_NAME}</arg>
<status status="PASS" start="2025-07-02T08:39:59.908232" elapsed="0.003016"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[SUBSCRIBER CONTAINER OUTPUT]\n${sub_logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-02T08:39:59.911342" elapsed="0.000173"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T08:39:59.911795" level="INFO">
[SUBSCRIBER CONTAINER OUTPUT]
[Entrypoint] Starting crash subscriber in mode network_tcp

[Subscriber] Registering callback and waiting for messages...

[Subscriber] Received value: 42
[Subscriber] Received value: 43
[Subscriber] Received value: 42
[Subscriber] Received value: 43
[Subscriber] Received value: 42
[Subscriber] Received value: 43
[Subscriber] Received value: 42
[Subscriber] Received value: 43
[Subscriber] Received value: 42
[Subscriber] Received value: 43
[Subscriber] Received value: 42
[Subscriber] Received value: 43
[Subscriber] Received value: 42
[Subscriber] Received value: 43
[Subscriber] Received value: 42
[Subscriber] Received value: 43
[Subscriber] Received value: 43
1751445575514 ms | 21ad880a12c7 | ./test_subscriber | 7 | error | CTCPReaderLayer - TCPPubSub (Error) -SubscriberSession 172.18.0.2:35392-&gt;c017912651ea:35763: Error reading header length: End of file
1751445575515 ms | 21ad880a12c7 | ./test_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:45978: Failed connecting to publisher c017912651ea:35763: Connection refused
1751445575516 ms | 21ad880a12c7 | ./test_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:45982: Failed connecting to publisher c017912651ea:35763: Connection refused
1751445575516 ms | 21ad880a12c7 | ./test_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:45986: Failed connecting to publisher c017912651ea:35763: Connection refused
1751445575517 ms | 21ad880a12c7 | ./test_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:45992: Failed connecting to publisher c017912651ea:35763: Connection refused
1751445575517 ms | 21ad880a12c7 | ./test_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:46004: Failed connecting to publisher c017912651ea:35763: Connection refused
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Subscriber] Received value: 43
1751445592215 ms | 21ad880a12c7 | ./test_subscriber | 7 | error | CTCPReaderLayer - TCPPubSub (Error) -SubscriberSession 172.18.0.2:51370-&gt;a3431f683dc1:44145: Error reading header length: End of file
1751445592216 ms | 21ad880a12c7 | ./test_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:57956: Failed connecting to publisher a3431f683dc1:44145: Connection refused
1751445592217 ms | 21ad880a12c7 | ./test_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:57972: Failed connecting to publisher a3431f683dc1:44145: Connection refused
1751445592217 ms | 21ad880a12c7 | ./test_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:57978: Failed connecting to publisher a3431f683dc1:44145: Connection refused
1751445592218 ms | 21ad880a12c7 | ./test_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:57986: Failed connecting to publisher a3431f683dc1:44145: Connection refused
1751445592219 ms | 21ad880a12c7 | ./test_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:57990: Failed connecting to publisher a3431f683dc1:44145: Connection refused
[Summary] Received 8 x 42 (crash pub), 25 x 43 (test pub)

[✓] Communication continued after crash!

[✓] One Publisher crashed and no more messages received from the crashed publisher!
</msg>
<arg>\n[SUBSCRIBER CONTAINER OUTPUT]\n${sub_logs}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T08:39:59.911625" elapsed="0.000263"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-07-02T08:39:59.914505" level="INFO">${crash_logs} = [Entrypoint] Starting crash publisher in mode network_tcp
[Publisher] Waiting for at least 1 subscriber(s) on topic: test_topic
1751445565658 ms | c017912651ea | ./crash_publisher | 7 | info | CTCPRea...</msg>
<var>${crash_logs}</var>
<arg>${CRASH_PUB}</arg>
<status status="PASS" start="2025-07-02T08:39:59.912015" elapsed="0.002515"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[CRASH PUBLISHER OUTPUT]\n${crash_logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-02T08:39:59.914616" elapsed="0.000152"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T08:39:59.914984" level="INFO">
[CRASH PUBLISHER OUTPUT]
[Entrypoint] Starting crash publisher in mode network_tcp
[Publisher] Waiting for at least 1 subscriber(s) on topic: test_topic
1751445565658 ms | c017912651ea | ./crash_publisher | 7 | info | CTCPReaderLayer - TCPPubSub (Info) -Publisher :::0: Created publisher and waiting for clients.
1751445565659 ms | c017912651ea | ./crash_publisher | 7 | info | CTCPReaderLayer - TCPPubSub (Info) -Publisher :::35763: Subscriber ::ffff:172.18.0.2:35392 has connected.
[Publisher] Found 1 subscriber(s). Proceeding to send messages.
[Crash Publisher] Starting and will crash after 10 messages...
[Crash Publisher] Sent buffer with content: 42 (message 1)
[Crash Publisher] Sent buffer with content: 42 (message 2)
[Crash Publisher] Sent buffer with content: 42 (message 3)
[Crash Publisher] Sent buffer with content: 42 (message 4)
[Crash Publisher] Sent buffer with content: 42 (message 5)
[Crash Publisher] Sent buffer with content: 42 (message 6)
[Crash Publisher] Sent buffer with content: 42 (message 7)
[Crash Publisher] Sent buffer with content: 42 (message 8)
[Crash Publisher] Crashing after message 7
./entrypoint.sh: line 60:     7 Aborted                 (core dumped) ./crash_publisher $ARGS $EXTRA
</msg>
<arg>\n[CRASH PUBLISHER OUTPUT]\n${crash_logs}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T08:39:59.914878" elapsed="0.000162"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${SUB_NAME}</arg>
<status status="PASS" start="2025-07-02T08:39:59.915113" elapsed="0.001003"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${CRASH_PUB}</arg>
<status status="PASS" start="2025-07-02T08:39:59.916236" elapsed="0.000987"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${TEST_PUB}</arg>
<status status="PASS" start="2025-07-02T08:39:59.917309" elapsed="0.000956"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-07-02T08:39:59.919233" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>${SUB_NAME}</arg>
<status status="PASS" start="2025-07-02T08:39:59.918348" elapsed="0.000908"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-02T08:39:59.919472" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Communication failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-02T08:39:59.919339" elapsed="0.000176"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Network Communication after one Publisher crash ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-07-02T08:39:59.919589" elapsed="0.000137"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${SUB_NAME}</arg>
<status status="PASS" start="2025-07-02T08:39:59.919831" elapsed="0.005635"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${CRASH_PUB}</arg>
<status status="PASS" start="2025-07-02T08:39:59.925548" elapsed="0.005505"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${TEST_PUB}</arg>
<status status="PASS" start="2025-07-02T08:39:59.931138" elapsed="0.005062"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-02T08:40:00.936530" level="INFO">Slept 1 second.</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-02T08:39:59.936285" elapsed="1.000361"/>
</kw>
<arg>network_tcp</arg>
<arg>network</arg>
<status status="PASS" start="2025-07-02T08:39:24.515573" elapsed="36.421169"/>
</kw>
<tag>pub_crash_network_tcp</tag>
<status status="PASS" start="2025-07-02T08:39:24.515117" elapsed="36.421757"/>
</test>
<test id="s1-s4-t3" name="Communication Continues After Publisher Crash (SHM)" line="38">
<kw name="Run Local Communication Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T08:40:00.938628" level="INFO">${IMAGE} = pub_crash_local_shm</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T08:40:00.938486" elapsed="0.000162"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T08:40:00.938823" level="INFO">${CONTAINER} = local_all_local_shm</msg>
<var>${CONTAINER}</var>
<arg>local_all_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T08:40:00.938719" elapsed="0.000121"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\nStarting local test container with ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-02T08:40:00.938905" elapsed="0.000141"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<arg>${IMAGE}</arg>
<arg>local_all</arg>
<arg>${layer_tag}</arg>
<status status="PASS" start="2025-07-02T08:40:00.939144" elapsed="0.120400"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-02T08:40:36.060128" level="INFO">Slept 35 seconds.</msg>
<arg>35s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-02T08:40:01.059779" elapsed="35.000453"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-07-02T08:40:36.063345" level="INFO">${logs} = [Entrypoint] Starting local test (pub/sub/monitor) in mode local_shm
Shared memory monitoring is enabled (domain: ecal_mon - queue size: 1024)
[Publisher] Waiting for at least 1 subscriber(s) on topic...</msg>
<var>${logs}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-02T08:40:36.060383" elapsed="0.002990"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n\n[CONTAINER LOG: LOCAL PUB+SUB]\n\n${logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-02T08:40:36.063466" elapsed="0.000173"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T08:40:36.063907" level="INFO">

[CONTAINER LOG: LOCAL PUB+SUB]

[Entrypoint] Starting local test (pub/sub/monitor) in mode local_shm
Shared memory monitoring is enabled (domain: ecal_mon - queue size: 1024)
[Publisher] Waiting for at least 1 subscriber(s) on topic: test_topic
Shared memory monitoring is enabled (domain: ecal_mon - queue size: 1024)
[Publisher] Waiting for at least 1 subscriber(s) on topic: test_topic
Shared memory monitoring is enabled (domain: ecal_mon - queue size: 1024)

[Subscriber] Registering callback and waiting for messages...

[Publisher] Found 1 subscriber(s). Proceeding to send messages.
[Publisher] Found 1 subscriber(s). Proceeding to send messages.
[Crash Publisher] Starting and will crash after 10 messages...
[Crash Publisher] Sent buffer with content: 42 (message 1)

 [Test Publisher] Started with mode=local_shm, topic=test_topic, node=test_publisher, count=25, delay=1000ms
[Subscriber] Received value: 42
[Test Publisher] Sent buffer with content: 43 (message 1)
[Crash Publisher] Sent buffer with content: 42 (message 2)
[Subscriber] Received value: 42
[Test Publisher] Sent buffer with content: 43 (message 2)
[Crash Publisher] Sent buffer with content: 42 (message 3)
[Subscriber] Received value: 42
[Test Publisher] Sent buffer with content: 43 (message 3)
[Crash Publisher] Sent buffer with content: 42 (message 4)
[Subscriber] Received value: 42
[Test Publisher] Sent buffer with content: 43 (message 4)
[Crash Publisher] Sent buffer with content: 42 (message 5)
[Subscriber] Received value: 42
[Test Publisher] Sent buffer with content: 43 (message 5)
[Crash Publisher] Sent buffer with content: 42 (message 6)
[Subscriber] Received value: 42
[Test Publisher] Sent buffer with content: 43 (message 6)
[Crash Publisher] Sent buffer with content: 42 (message 7)
[Subscriber] Received value: 42
[Test Publisher] Sent buffer with content: 43 (message 7)
[Crash Publisher] Sent buffer with content: 42 (message 8)
[Test Publisher] Sent buffer with content: 43 (message 8)
[Subscriber] Received value: 42
[Crash Publisher] Crashing after message 7
[Test Publisher] Sent buffer with content: 43 (message 9)
[Test Publisher] Sent buffer with content: 43 (message 10)
[Test Publisher] Sent buffer with content: 43 (message 11)
[Test Publisher] Sent buffer with content: 43 (message 12)
[Test Publisher] Sent buffer with content: 43 (message 13)
[Test Publisher] Sent buffer with content: 43 (message 14)
[Test Publisher] Sent buffer with content: 43 (message 15)
[Test Publisher] Sent buffer with content: 43 (message 16)
[Test Publisher] Sent buffer with content: 43 (message 17)
[Test Publisher] Sent buffer with content: 43 (message 18)
[Test Publisher] Sent buffer with content: 43 (message 19)
[Test Publisher] Sent buffer with content: 43 (message 20)
[Test Publisher] Sent buffer with content: 43 (message 21)
[Test Publisher] Sent buffer with content: 43 (message 22)
[Test Publisher] Sent buffer with content: 43 (message 23)
[Test Publisher] Sent buffer with content: 43 (message 24)
[Test Publisher] Sent buffer with content: 43 (message 25)
[Summary] Received 8 x 42 (crash pub), 0 x 43 (test pub)

[✓] Communication continued after crash!

[✓] One Publisher crashed and no more messages received from the crashed publisher!
./entrypoint.sh: line 55:     7 Aborted                 (core dumped) ./crash_publisher $ARGS
</msg>
<arg>\n\n[CONTAINER LOG: LOCAL PUB+SUB]\n\n${logs}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T08:40:36.063750" elapsed="0.000264"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-07-02T08:40:36.065248" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-02T08:40:36.064121" elapsed="0.001151"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-02T08:40:36.065489" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Local test failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-02T08:40:36.065354" elapsed="0.000184"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Local Communication after one Publisher crash ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-07-02T08:40:36.065613" elapsed="0.000140"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-02T08:40:36.065856" elapsed="0.005558"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-02T08:40:37.071742" level="INFO">Slept 1 second.</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-02T08:40:36.071502" elapsed="1.000349"/>
</kw>
<arg>local_shm</arg>
<status status="PASS" start="2025-07-02T08:40:00.938257" elapsed="36.133682"/>
</kw>
<tag>pub_crash_local_shm</tag>
<status status="PASS" start="2025-07-02T08:40:00.937848" elapsed="36.134232"/>
</test>
<status status="PASS" start="2025-07-02T08:38:36.353758" elapsed="120.719027"/>
</suite>
<suite id="s1-s5" name="Sub Crash" source="/home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/sub_crash/robottests/sub_crash.robot">
<kw name="Init Test Context" type="SETUP">
<kw name="Set Test Context" owner="GlobalPathsLibrary">
<arg>sub_crash</arg>
<arg>sub_crash</arg>
<doc>Sets the test folder and tag prefix if it's a valid test case.
The folder must exist under integration_tests/ and contain typical test structure.</doc>
<status status="PASS" start="2025-07-02T08:40:37.076115" elapsed="0.000144"/>
</kw>
<kw name="Get Build Script Path" owner="GlobalPathsLibrary">
<msg time="2025-07-02T08:40:37.076432" level="INFO">${build} = /home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/sub_crash/scripts/build_images.sh</msg>
<var>${build}</var>
<status status="PASS" start="2025-07-02T08:40:37.076339" elapsed="0.000112"/>
</kw>
<kw name="Get Network Name" owner="GlobalPathsLibrary">
<msg time="2025-07-02T08:40:37.076594" level="INFO">${net} = ecal_test_net</msg>
<var>${net}</var>
<status status="PASS" start="2025-07-02T08:40:37.076516" elapsed="0.000096"/>
</kw>
<kw name="Get Build Script Args" owner="GlobalPathsLibrary">
<msg time="2025-07-02T08:40:37.076757" level="INFO">${args} = ['sub_crash']</msg>
<var>${args}</var>
<status status="PASS" start="2025-07-02T08:40:37.076681" elapsed="0.000092"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-07-02T08:40:37.076982" level="INFO">${BUILD_SCRIPT} = /home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/sub_crash/scripts/build_images.sh</msg>
<arg>${BUILD_SCRIPT}</arg>
<arg>${build}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-07-02T08:40:37.076846" elapsed="0.000187"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-07-02T08:40:37.077225" level="INFO">${NETWORK} = ecal_test_net</msg>
<arg>${NETWORK}</arg>
<arg>${net}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-07-02T08:40:37.077109" elapsed="0.000142"/>
</kw>
<kw name="Get Test Description" owner="GlobalPathsLibrary">
<msg time="2025-07-02T08:40:37.077474" level="INFO">${desc} = Test Objective:
Ensure that a second subscriber continues to receive messages even if one subscriber crashes.

Test Scenario:
- One publisher (`test_publisher`) sends continuous messages (value 43).
-...</msg>
<var>${desc}</var>
<doc>Reads the *** Comments *** section from the .robot file and returns it as a string.</doc>
<status status="PASS" start="2025-07-02T08:40:37.077317" elapsed="0.000178"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T08:40:37.077649" level="INFO">Test Objective:
Ensure that a second subscriber continues to receive messages even if one subscriber crashes.

Test Scenario:
- One publisher (`test_publisher`) sends continuous messages (value 43).
- Two subscribers are started:
1. `crash_subscriber`: receives a few messages and then crashes.
2. `test_subscriber`: receives messages throughout the test duration.
- A monitoring process tracks all components.

Success Criteria:
- `test_subscriber` must receive a number of messages.
- `test_subscriber` must exit with code 0.
- The crash of one subscriber does not affect the continued communication of the other.</msg>
<arg>${desc}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T08:40:37.077566" elapsed="0.000115"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>[SETUP] Building Docker image...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-02T08:40:37.077746" elapsed="0.000087"/>
</kw>
<kw name="Run Process" owner="Process">
<msg time="2025-07-02T08:40:37.078141" level="INFO">Starting process:
/home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/sub_crash/scripts/build_images.sh sub_crash</msg>
<msg time="2025-07-02T08:40:37.078608" level="INFO">Waiting for process to complete.</msg>
<msg time="2025-07-02T08:40:46.319297" level="INFO">Process completed.</msg>
<msg time="2025-07-02T08:40:46.319458" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<var>${result}</var>
<arg>${BUILD_SCRIPT}</arg>
<arg>@{args}</arg>
<doc>Runs a process and waits for it to complete.</doc>
<status status="PASS" start="2025-07-02T08:40:37.077943" elapsed="9.241540"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-02T08:40:46.320136" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${result.rc}</arg>
<arg>0</arg>
<arg>Docker build failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-02T08:40:46.319632" elapsed="0.000556"/>
</kw>
<kw name="Create Docker Network" owner="MyDockerLibrary">
<arg>${NETWORK}</arg>
<status status="PASS" start="2025-07-02T08:40:46.320275" elapsed="0.007492"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-02T08:40:49.328112" level="INFO">Slept 3 seconds.</msg>
<arg>3s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-02T08:40:46.327881" elapsed="3.000350"/>
</kw>
<status status="PASS" start="2025-07-02T08:40:37.075924" elapsed="12.252402"/>
</kw>
<test id="s1-s5-t1" name="Network Communication Continues After Subscriber Crash (UDP)" line="30">
<kw name="Run Network Communication Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T08:40:49.329391" level="INFO">${IMAGE} = sub_crash_network_udp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T08:40:49.329235" elapsed="0.000177"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T08:40:49.329568" level="INFO">${TOPIC} = test_topic</msg>
<var>${TOPIC}</var>
<arg>test_topic</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T08:40:49.329484" elapsed="0.000101"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T08:40:49.329750" level="INFO">${CRASH_SUB} = crash_sub_network_udp</msg>
<var>${CRASH_SUB}</var>
<arg>crash_sub_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T08:40:49.329650" elapsed="0.000117"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T08:40:49.329985" level="INFO">${TEST_SUB} = test_sub_network_udp</msg>
<var>${TEST_SUB}</var>
<arg>test_sub_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T08:40:49.329877" elapsed="0.000142"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T08:40:49.330188" level="INFO">${TEST_PUB} = test_pub_network_udp</msg>
<var>${TEST_PUB}</var>
<arg>test_pub_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T08:40:49.330088" elapsed="0.000117"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Starting subscriber crash continuity test with ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-02T08:40:49.330269" elapsed="0.000120"/>
</kw>
<kw name="Create Docker Network" owner="MyDockerLibrary">
<arg>${NETWORK}</arg>
<status status="PASS" start="2025-07-02T08:40:49.330477" elapsed="0.007386"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${CRASH_SUB}</arg>
<arg>${IMAGE}</arg>
<arg>crash_subscriber</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${CRASH_SUB}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-02T08:40:49.337977" elapsed="0.129568"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${TEST_SUB}</arg>
<arg>${IMAGE}</arg>
<arg>test_subscriber</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${TEST_SUB}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-02T08:40:49.467767" elapsed="0.124706"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${TEST_PUB}</arg>
<arg>${IMAGE}</arg>
<arg>test_publisher</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${TEST_PUB}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-02T08:40:49.592662" elapsed="0.126160"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${CRASH_SUB}</arg>
<status status="PASS" start="2025-07-02T08:40:49.718992" elapsed="7.071480"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${TEST_SUB}</arg>
<status status="PASS" start="2025-07-02T08:40:56.790644" elapsed="26.860895"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${TEST_PUB}</arg>
<status status="PASS" start="2025-07-02T08:41:23.651738" elapsed="0.001509"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-07-02T08:41:23.655840" level="INFO">${test_sub_logs} = [Entrypoint] Starting crash publisher in mode network_udp

[Test_Subscriber] Waiting for messages...
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Receive...</msg>
<var>${test_sub_logs}</var>
<arg>${TEST_SUB}</arg>
<status status="PASS" start="2025-07-02T08:41:23.653353" elapsed="0.002516"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[SUBSCRIBER CONTAINER OUTPUT]\n${test_sub_logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-02T08:41:23.655958" elapsed="0.000203"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T08:41:23.656447" level="INFO">
[SUBSCRIBER CONTAINER OUTPUT]
[Entrypoint] Starting crash publisher in mode network_udp

[Test_Subscriber] Waiting for messages...
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43

[✓] Communication successful, received 30 messages.
</msg>
<arg>\n[SUBSCRIBER CONTAINER OUTPUT]\n${test_sub_logs}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T08:41:23.656275" elapsed="0.000240"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-07-02T08:41:23.658805" level="INFO">${crash_sub_logs} = [Entrypoint] Starting crash subscriber in mode network_udp

[Crash Subscriber] Registered and sleeping before crash...

[Crash_Subscriber] Received value: 43
[Crash_Subscriber] Received value: 43
[Cra...</msg>
<var>${crash_sub_logs}</var>
<arg>${CRASH_SUB}</arg>
<status status="PASS" start="2025-07-02T08:41:23.656618" elapsed="0.002212"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[CRASH SUBSCRIBER CONTAINER OUTPUT]\n${crash_sub_logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-02T08:41:23.658914" elapsed="0.000170"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T08:41:23.659312" level="INFO">
[CRASH SUBSCRIBER CONTAINER OUTPUT]
[Entrypoint] Starting crash subscriber in mode network_udp

[Crash Subscriber] Registered and sleeping before crash...

[Crash_Subscriber] Received value: 43
[Crash_Subscriber] Received value: 43
[Crash_Subscriber] Received value: 43
[Crash_Subscriber] Received value: 43
[Crash_Subscriber] Received value: 43

[Crash Subscriber] Received 5 messages before crash.

[Crash Subscriber] Simulating crash now.

./entrypoint.sh: line 61:     7 Aborted                 (core dumped) ./crash_subscriber $ARGS $EXTRA
</msg>
<arg>\n[CRASH SUBSCRIBER CONTAINER OUTPUT]\n${crash_sub_logs}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T08:41:23.659193" elapsed="0.000154"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-07-02T08:41:23.660301" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>${TEST_SUB}</arg>
<status status="PASS" start="2025-07-02T08:41:23.659422" elapsed="0.000903"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-02T08:41:23.660539" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Communication failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-02T08:41:23.660406" elapsed="0.000176"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Network Communication after one Subscriber crash ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-07-02T08:41:23.660656" elapsed="0.000136"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${CRASH_SUB}</arg>
<status status="PASS" start="2025-07-02T08:41:23.660886" elapsed="0.005141"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${TEST_SUB}</arg>
<status status="PASS" start="2025-07-02T08:41:23.666114" elapsed="0.006372"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${TEST_PUB}</arg>
<status status="PASS" start="2025-07-02T08:41:23.672581" elapsed="0.005130"/>
</kw>
<arg>network_udp</arg>
<arg>network</arg>
<status status="PASS" start="2025-07-02T08:40:49.328952" elapsed="34.348819"/>
</kw>
<tag>sub_crash_network_udp</tag>
<status status="PASS" start="2025-07-02T08:40:49.328396" elapsed="34.349468"/>
</test>
<test id="s1-s5-t2" name="Network Communication Continues After Publisher Crash (TCP)" line="34">
<kw name="Run Network Communication Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T08:41:23.679858" level="INFO">${IMAGE} = sub_crash_network_tcp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T08:41:23.679711" elapsed="0.000168"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T08:41:23.680120" level="INFO">${TOPIC} = test_topic</msg>
<var>${TOPIC}</var>
<arg>test_topic</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T08:41:23.679952" elapsed="0.000189"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T08:41:23.680324" level="INFO">${CRASH_SUB} = crash_sub_network_tcp</msg>
<var>${CRASH_SUB}</var>
<arg>crash_sub_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T08:41:23.680213" elapsed="0.000129"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T08:41:23.680517" level="INFO">${TEST_SUB} = test_sub_network_tcp</msg>
<var>${TEST_SUB}</var>
<arg>test_sub_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T08:41:23.680416" elapsed="0.000133"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T08:41:23.680719" level="INFO">${TEST_PUB} = test_pub_network_tcp</msg>
<var>${TEST_PUB}</var>
<arg>test_pub_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T08:41:23.680617" elapsed="0.000118"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Starting subscriber crash continuity test with ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-02T08:41:23.680798" elapsed="0.000110"/>
</kw>
<kw name="Create Docker Network" owner="MyDockerLibrary">
<arg>${NETWORK}</arg>
<status status="PASS" start="2025-07-02T08:41:23.681021" elapsed="0.006713"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${CRASH_SUB}</arg>
<arg>${IMAGE}</arg>
<arg>crash_subscriber</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${CRASH_SUB}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-02T08:41:23.687844" elapsed="0.118646"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${TEST_SUB}</arg>
<arg>${IMAGE}</arg>
<arg>test_subscriber</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${TEST_SUB}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-02T08:41:23.806684" elapsed="0.121951"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${TEST_PUB}</arg>
<arg>${IMAGE}</arg>
<arg>test_publisher</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${TEST_PUB}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-02T08:41:23.928799" elapsed="0.150695"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${CRASH_SUB}</arg>
<status status="PASS" start="2025-07-02T08:41:24.079686" elapsed="7.186625"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${TEST_SUB}</arg>
<status status="PASS" start="2025-07-02T08:41:31.266519" elapsed="26.721392"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${TEST_PUB}</arg>
<status status="PASS" start="2025-07-02T08:41:57.988118" elapsed="0.001701"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-07-02T08:41:57.992593" level="INFO">${test_sub_logs} = [Entrypoint] Starting crash publisher in mode network_tcp

[Test_Subscriber] Waiting for messages...
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Receive...</msg>
<var>${test_sub_logs}</var>
<arg>${TEST_SUB}</arg>
<status status="PASS" start="2025-07-02T08:41:57.989968" elapsed="0.002653"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[SUBSCRIBER CONTAINER OUTPUT]\n${test_sub_logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-02T08:41:57.992712" elapsed="0.000164"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T08:41:57.993173" level="INFO">
[SUBSCRIBER CONTAINER OUTPUT]
[Entrypoint] Starting crash publisher in mode network_tcp

[Test_Subscriber] Waiting for messages...
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
1751445716486 ms | ea2894c3c0e6 | ./test_subscriber | 7 | error | CTCPReaderLayer - TCPPubSub (Error) -SubscriberSession 172.18.0.3:40026-&gt;4c8fc41eb67e:34965: Error reading header length: End of file
1751445716487 ms | ea2894c3c0e6 | ./test_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.3:42454: Failed connecting to publisher 4c8fc41eb67e:34965: Connection refused
1751445716487 ms | ea2894c3c0e6 | ./test_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.3:42470: Failed connecting to publisher 4c8fc41eb67e:34965: Connection refused
1751445716488 ms | ea2894c3c0e6 | ./test_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.3:42476: Failed connecting to publisher 4c8fc41eb67e:34965: Connection refused
1751445716489 ms | ea2894c3c0e6 | ./test_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.3:42488: Failed connecting to publisher 4c8fc41eb67e:34965: Connection refused
1751445716489 ms | ea2894c3c0e6 | ./test_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.3:42502: Failed connecting to publisher 4c8fc41eb67e:34965: Connection refused

[✓] Communication successful, received 30 messages.
</msg>
<arg>\n[SUBSCRIBER CONTAINER OUTPUT]\n${test_sub_logs}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T08:41:57.992980" elapsed="0.000249"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-07-02T08:41:57.995581" level="INFO">${crash_sub_logs} = [Entrypoint] Starting crash subscriber in mode network_tcp

[Crash Subscriber] Registered and sleeping before crash...

[Crash_Subscriber] Received value: 43
[Crash_Subscriber] Received value: 43
[Cra...</msg>
<var>${crash_sub_logs}</var>
<arg>${CRASH_SUB}</arg>
<status status="PASS" start="2025-07-02T08:41:57.993324" elapsed="0.002283"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[CRASH SUBSCRIBER CONTAINER OUTPUT]\n${crash_sub_logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-02T08:41:57.995692" elapsed="0.000145"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T08:41:57.996097" level="INFO">
[CRASH SUBSCRIBER CONTAINER OUTPUT]
[Entrypoint] Starting crash subscriber in mode network_tcp

[Crash Subscriber] Registered and sleeping before crash...

[Crash_Subscriber] Received value: 43
[Crash_Subscriber] Received value: 43
[Crash_Subscriber] Received value: 43
[Crash_Subscriber] Received value: 43
[Crash_Subscriber] Received value: 43

[Crash Subscriber] Simulating crash now.


[Crash Subscriber] Received 5 messages before crash.
./entrypoint.sh: line 61:     7 Aborted                 (core dumped) ./crash_subscriber $ARGS $EXTRA
</msg>
<arg>\n[CRASH SUBSCRIBER CONTAINER OUTPUT]\n${crash_sub_logs}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T08:41:57.995952" elapsed="0.000222"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-07-02T08:41:57.997145" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>${TEST_SUB}</arg>
<status status="PASS" start="2025-07-02T08:41:57.996250" elapsed="0.000919"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-02T08:41:57.997386" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Communication failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-02T08:41:57.997251" elapsed="0.000179"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Network Communication after one Subscriber crash ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-07-02T08:41:57.997505" elapsed="0.000137"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${CRASH_SUB}</arg>
<status status="PASS" start="2025-07-02T08:41:57.997734" elapsed="0.005119"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${TEST_SUB}</arg>
<status status="PASS" start="2025-07-02T08:41:58.002940" elapsed="0.005227"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${TEST_PUB}</arg>
<status status="PASS" start="2025-07-02T08:41:58.008251" elapsed="0.005260"/>
</kw>
<arg>network_tcp</arg>
<arg>network</arg>
<status status="PASS" start="2025-07-02T08:41:23.679498" elapsed="34.334075"/>
</kw>
<tag>pub_crash_network_tcp</tag>
<status status="PASS" start="2025-07-02T08:41:23.679075" elapsed="34.334593"/>
</test>
<test id="s1-s5-t3" name="Local Communication Continues After Subscriber Crash (SHM)" line="38">
<kw name="Run Local Communication Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T08:41:58.015323" level="INFO">${IMAGE} = sub_crash_local_shm</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T08:41:58.015185" elapsed="0.000160"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T08:41:58.015535" level="INFO">${CONTAINER} = local_all_local_shm</msg>
<var>${CONTAINER}</var>
<arg>local_all_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T08:41:58.015418" elapsed="0.000134"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Starting local test container with ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-02T08:41:58.015620" elapsed="0.000121"/>
</kw>
<kw name="Create Docker Network" owner="MyDockerLibrary">
<arg>${NETWORK}</arg>
<status status="PASS" start="2025-07-02T08:41:58.015844" elapsed="0.007106"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<arg>${IMAGE}</arg>
<arg>local_all</arg>
<arg>${layer_tag}</arg>
<status status="PASS" start="2025-07-02T08:41:58.023106" elapsed="0.116162"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-07-02T08:42:32.209728" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-02T08:41:58.139488" elapsed="34.070289"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-02T08:42:32.210190" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Local test failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-02T08:42:32.209950" elapsed="0.000305"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-07-02T08:42:32.213046" level="INFO">${logs} = [Entrypoint] Starting local test (pub/sub/monitor) in mode local_shm
Shared memory monitoring is enabled (domain: ecal_mon - queue size: 1024)
[Publisher] Waiting for at least 2 subscriber(s) on topic...</msg>
<var>${logs}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-02T08:42:32.210357" elapsed="0.002717"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n\n[LOCAL TEST CONTAINER OUTPUT]\n\n${logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-02T08:42:32.213162" elapsed="0.000155"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Local Communication after one Subscriber crash ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-07-02T08:42:32.213433" elapsed="0.000190"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-02T08:42:32.213718" elapsed="0.004797"/>
</kw>
<arg>local_shm</arg>
<status status="PASS" start="2025-07-02T08:41:58.014963" elapsed="34.203614"/>
</kw>
<tag>sub_crash_local_shm</tag>
<status status="PASS" start="2025-07-02T08:41:58.014598" elapsed="34.204073"/>
</test>
<test id="s1-s5-t4" name="Local Communication Continues After Subscriber Crash (UDP)" line="42">
<kw name="Run Local Communication Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T08:42:32.219914" level="INFO">${IMAGE} = sub_crash_local_udp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T08:42:32.219776" elapsed="0.000159"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T08:42:32.220206" level="INFO">${CONTAINER} = local_all_local_udp</msg>
<var>${CONTAINER}</var>
<arg>local_all_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T08:42:32.220075" elapsed="0.000151"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Starting local test container with ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-02T08:42:32.220299" elapsed="0.000132"/>
</kw>
<kw name="Create Docker Network" owner="MyDockerLibrary">
<arg>${NETWORK}</arg>
<status status="PASS" start="2025-07-02T08:42:32.220534" elapsed="0.007045"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<arg>${IMAGE}</arg>
<arg>local_all</arg>
<arg>${layer_tag}</arg>
<status status="PASS" start="2025-07-02T08:42:32.227710" elapsed="0.112128"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-07-02T08:43:06.405732" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-02T08:42:32.340066" elapsed="34.065710"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-02T08:43:06.406171" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Local test failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-02T08:43:06.405922" elapsed="0.000300"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-07-02T08:43:06.409232" level="INFO">${logs} = [Entrypoint] Starting local test (pub/sub/monitor) in mode local_udp
[Publisher] Waiting for at least 2 subscriber(s) on topic: test_topic

[Crash Subscriber] Registered and sleeping before crash...

...</msg>
<var>${logs}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-02T08:43:06.406331" elapsed="0.002974"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n\n[LOCAL TEST CONTAINER OUTPUT]\n\n${logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-02T08:43:06.409399" elapsed="0.000164"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Local Communication after one Subscriber crash ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-07-02T08:43:06.409666" elapsed="0.000210"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-02T08:43:06.409978" elapsed="0.005891"/>
</kw>
<arg>local_udp</arg>
<status status="PASS" start="2025-07-02T08:42:32.219581" elapsed="34.196351"/>
</kw>
<tag>sub_crash_local_udp</tag>
<status status="PASS" start="2025-07-02T08:42:32.219220" elapsed="34.196842"/>
</test>
<test id="s1-s5-t5" name="Local Communication Continues After Subscriber Crash (TCP)" line="46">
<kw name="Run Local Communication Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T08:43:06.417316" level="INFO">${IMAGE} = sub_crash_local_tcp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T08:43:06.417176" elapsed="0.000161"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T08:43:06.417522" level="INFO">${CONTAINER} = local_all_local_tcp</msg>
<var>${CONTAINER}</var>
<arg>local_all_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T08:43:06.417412" elapsed="0.000127"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Starting local test container with ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-02T08:43:06.417607" elapsed="0.000120"/>
</kw>
<kw name="Create Docker Network" owner="MyDockerLibrary">
<arg>${NETWORK}</arg>
<status status="PASS" start="2025-07-02T08:43:06.417833" elapsed="0.007092"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<arg>${IMAGE}</arg>
<arg>local_all</arg>
<arg>${layer_tag}</arg>
<status status="PASS" start="2025-07-02T08:43:06.425064" elapsed="0.113445"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-07-02T08:43:40.601085" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-02T08:43:06.538713" elapsed="34.062426"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-02T08:43:40.601692" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Local test failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-02T08:43:40.601366" elapsed="0.000400"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-07-02T08:43:40.604698" level="INFO">${logs} = [Entrypoint] Starting local test (pub/sub/monitor) in mode local_tcp
[Publisher] Waiting for at least 2 subscriber(s) on topic: test_topic

[Test_Subscriber] Waiting for messages...

[Crash Subscriber...</msg>
<var>${logs}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-02T08:43:40.601895" elapsed="0.002830"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n\n[LOCAL TEST CONTAINER OUTPUT]\n\n${logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-02T08:43:40.604812" elapsed="0.000163"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Local Communication after one Subscriber crash ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-07-02T08:43:40.605189" elapsed="0.000196"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-02T08:43:40.605495" elapsed="0.005252"/>
</kw>
<arg>local_tcp</arg>
<status status="PASS" start="2025-07-02T08:43:06.416952" elapsed="34.193858"/>
</kw>
<tag>sub_crash_local_tcp</tag>
<status status="PASS" start="2025-07-02T08:43:06.416592" elapsed="34.194314"/>
</test>
<status status="PASS" start="2025-07-02T08:40:37.073419" elapsed="183.538130"/>
</suite>
<suite id="s1-s6" name="Sub Send Crash" source="/home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/sub_send_crash/robottests/sub_send_crash.robot">
<kw name="Init Test Context" type="SETUP">
<kw name="Set Test Context" owner="GlobalPathsLibrary">
<arg>sub_send_crash</arg>
<arg>sub_send_crash</arg>
<doc>Sets the test folder and tag prefix if it's a valid test case.
The folder must exist under integration_tests/ and contain typical test structure.</doc>
<status status="PASS" start="2025-07-02T08:43:40.614749" elapsed="0.000130"/>
</kw>
<kw name="Get Build Script Path" owner="GlobalPathsLibrary">
<msg time="2025-07-02T08:43:40.615084" level="INFO">${build} = /home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/sub_send_crash/scripts/build_images.sh</msg>
<var>${build}</var>
<status status="PASS" start="2025-07-02T08:43:40.614959" elapsed="0.000147"/>
</kw>
<kw name="Get Network Name" owner="GlobalPathsLibrary">
<msg time="2025-07-02T08:43:40.615255" level="INFO">${net} = ecal_test_net</msg>
<var>${net}</var>
<status status="PASS" start="2025-07-02T08:43:40.615175" elapsed="0.000098"/>
</kw>
<kw name="Get Build Script Args" owner="GlobalPathsLibrary">
<msg time="2025-07-02T08:43:40.615416" level="INFO">${args} = ['sub_send_crash']</msg>
<var>${args}</var>
<status status="PASS" start="2025-07-02T08:43:40.615338" elapsed="0.000095"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-07-02T08:43:40.615673" level="INFO">${BUILD_SCRIPT} = /home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/sub_send_crash/scripts/build_images.sh</msg>
<arg>${BUILD_SCRIPT}</arg>
<arg>${build}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-07-02T08:43:40.615507" elapsed="0.000200"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-07-02T08:43:40.615908" level="INFO">${NETWORK} = ecal_test_net</msg>
<arg>${NETWORK}</arg>
<arg>${net}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-07-02T08:43:40.615786" elapsed="0.000148"/>
</kw>
<kw name="Get Test Description" owner="GlobalPathsLibrary">
<msg time="2025-07-02T08:43:40.616186" level="INFO">${desc} = Test Objective:
This test verifies that if one subscriber crashes during the reception of a large message,
other subscribers or the publisher remain unaffected and stable.

Test Scenario:
- A `large_p...</msg>
<var>${desc}</var>
<doc>Reads the *** Comments *** section from the .robot file and returns it as a string.</doc>
<status status="PASS" start="2025-07-02T08:43:40.616031" elapsed="0.000176"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T08:43:40.616362" level="INFO">Test Objective:
This test verifies that if one subscriber crashes during the reception of a large message,
other subscribers or the publisher remain unaffected and stable.

Test Scenario:
- A `large_publisher` sends very large messages (~50MB+).
- One `crash_subscriber` is designed to crash during message reception (e.g., via simulated failure during callback).
- One `test_subscriber` continues running and must successfully receive all messages.
- In an additional test case, a variant with `zero_copy_mode` enabled is used to evaluate the performance and fault tolerance in a high-throughput configuration.

Success Criteria:
- The `test_subscriber` must receive messages without crashing and exit with code 0.
- The `crash_subscriber` should crash as intended.
- The `large_publisher` must remain operational and not be blocked or destabilized.
- In SHM mode with `zero_copy`, the system should handle the shared memory access without affecting other subscribers or the pubisher.

Notes:
- Zero-Copy mode is only applicable to Shared Memory (SHM) transport.
- The Local UDP test is skipped for large messages because of message size limitations.
- This test failes because of SHM with zero copy mode, which is a known issue in the current implementation.</msg>
<arg>${desc}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T08:43:40.616279" elapsed="0.000154"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>[SETUP] Building image...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-02T08:43:40.616503" elapsed="0.000095"/>
</kw>
<kw name="Run Process" owner="Process">
<msg time="2025-07-02T08:43:40.616834" level="INFO">Starting process:
/home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/sub_send_crash/scripts/build_images.sh sub_send_crash</msg>
<msg time="2025-07-02T08:43:40.617196" level="INFO">Waiting for process to complete.</msg>
<msg time="2025-07-02T08:43:49.668796" level="INFO">Process completed.</msg>
<msg time="2025-07-02T08:43:49.668963" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<var>${result}</var>
<arg>${BUILD_SCRIPT}</arg>
<arg>@{args}</arg>
<doc>Runs a process and waits for it to complete.</doc>
<status status="PASS" start="2025-07-02T08:43:40.616687" elapsed="9.052302"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-02T08:43:49.669627" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${result.rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-02T08:43:49.669176" elapsed="0.000503"/>
</kw>
<kw name="Create Docker Network" owner="MyDockerLibrary">
<arg>${NETWORK}</arg>
<status status="PASS" start="2025-07-02T08:43:49.669762" elapsed="0.007581"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-02T08:43:52.677693" level="INFO">Slept 3 seconds.</msg>
<arg>3s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-02T08:43:49.677462" elapsed="3.000346"/>
</kw>
<status status="PASS" start="2025-07-02T08:43:40.614615" elapsed="12.063289"/>
</kw>
<test id="s1-s6-t1" name="Crash During Reception (SHM)" line="36">
<kw name="Run Local Crash Receive Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T08:43:52.678867" level="INFO">${IMAGE} = sub_send_crash_local_shm</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T08:43:52.678717" elapsed="0.000171"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T08:43:52.679099" level="INFO">${CONTAINER} = local_all_local_shm</msg>
<var>${CONTAINER}</var>
<arg>local_all_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T08:43:52.678962" elapsed="0.000155"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Starting crash test in LOCAL mode: ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-02T08:43:52.679186" elapsed="0.000131"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<arg>${IMAGE}</arg>
<arg>local_all</arg>
<arg>${layer_tag}</arg>
<arg>test_topic</arg>
<arg>${CONTAINER}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-02T08:43:52.679416" elapsed="0.131918"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-02T08:44:27.811801" level="INFO">Slept 35 seconds.</msg>
<arg>35s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-02T08:43:52.811507" elapsed="35.000414"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-07-02T08:44:27.814780" level="INFO">${logs} = [Entrypoint] Starting all processes locally in one container (mode local_shm)
Shared memory monitoring is enabled (domain: ecal_mon - queue size: 1024)
[Publisher] Prepared 50MB message.
[Publisher] W...</msg>
<var>${logs}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-02T08:44:27.812118" elapsed="0.002688"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[LOCAL TEST CONTAINER OUTPUT]\n${logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-02T08:44:27.814898" elapsed="0.000173"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T08:44:27.815298" level="INFO">
[LOCAL TEST CONTAINER OUTPUT]
[Entrypoint] Starting all processes locally in one container (mode local_shm)
Shared memory monitoring is enabled (domain: ecal_mon - queue size: 1024)
[Publisher] Prepared 50MB message.
[Publisher] Waiting for at least 2 subscriber(s) on topic: test_topic
[Publisher] Found 2 subscriber(s). Proceeding to send messages.
[Crash_Sub] Simulating crash after 2 seconds during active reception
Shared memory monitoring is enabled (domain: ecal_mon - queue size: 1024)
[Crash_Sub] Listening to topic 'test_topic' in mode 'local_shm'
[Crash_Sub] Received 52428800 bytes
[Publisher] Subscriber detected. Starting to send.
[Publisher] Send result: ✓, size: 52428800 bytes
[Publisher] Send result: ✓, size: 52428800 bytes
[Publisher] Send result: ✓, size: 52428800 bytes
[Publisher] Finished sending.
Shared memory monitoring is enabled (domain: ecal_mon - queue size: 1024)
[Test_Sub] Ready and waiting...
[Test_Sub] Received 52428800 bytes (message 1)
[Test_Sub] Received 52428800 bytes (message 2)
[Test_Sub] Received 52428800 bytes (message 3)
[✓] Received 3 messages.
./entrypoint.sh: line 45:    14 Aborted                 (core dumped) ./crash_send_subscriber $ARGS
</msg>
<arg>\n[LOCAL TEST CONTAINER OUTPUT]\n${logs}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T08:44:27.815175" elapsed="0.000166"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-07-02T08:44:27.816470" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-02T08:44:27.815411" elapsed="0.001083"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-02T08:44:27.816708" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Local container failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-02T08:44:27.816576" elapsed="0.000176"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-07-02T08:44:27.818817" level="INFO">${logs} = [Entrypoint] Starting all processes locally in one container (mode local_shm)
Shared memory monitoring is enabled (domain: ecal_mon - queue size: 1024)
[Publisher] Prepared 50MB message.
[Publisher] W...</msg>
<var>${logs}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-02T08:44:27.816827" elapsed="0.002016"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Local Crash Receive Test ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-07-02T08:44:27.818923" elapsed="0.000229"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-02T08:44:27.819240" elapsed="0.005445"/>
</kw>
<arg>local_shm</arg>
<status status="PASS" start="2025-07-02T08:43:52.678488" elapsed="35.146255"/>
</kw>
<tag>crash_receive_local_shm</tag>
<status status="PASS" start="2025-07-02T08:43:52.677972" elapsed="35.146858"/>
</test>
<test id="s1-s6-t2" name="Crash During Reception (TCP)" line="50">
<kw name="Run Local Crash Receive Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T08:44:27.826084" level="INFO">${IMAGE} = sub_send_crash_local_tcp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T08:44:27.825919" elapsed="0.000186"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T08:44:27.826290" level="INFO">${CONTAINER} = local_all_local_tcp</msg>
<var>${CONTAINER}</var>
<arg>local_all_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T08:44:27.826181" elapsed="0.000127"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Starting crash test in LOCAL mode: ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-02T08:44:27.826375" elapsed="0.000122"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<arg>${IMAGE}</arg>
<arg>local_all</arg>
<arg>${layer_tag}</arg>
<arg>test_topic</arg>
<arg>${CONTAINER}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-02T08:44:27.826584" elapsed="0.134591"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-02T08:45:02.961706" level="INFO">Slept 35 seconds.</msg>
<arg>35s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-02T08:44:27.961399" elapsed="35.000410"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-07-02T08:45:02.964917" level="INFO">${logs} = [Entrypoint] Starting all processes locally in one container (mode local_tcp)
[Publisher] Prepared 50MB message.
[Publisher] Waiting for at least 2 subscriber(s) on topic: test_topic
1751445869964 ms ...</msg>
<var>${logs}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-02T08:45:02.961965" elapsed="0.002978"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[LOCAL TEST CONTAINER OUTPUT]\n${logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-02T08:45:02.965057" elapsed="0.000161"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T08:45:02.965489" level="INFO">
[LOCAL TEST CONTAINER OUTPUT]
[Entrypoint] Starting all processes locally in one container (mode local_tcp)
[Publisher] Prepared 50MB message.
[Publisher] Waiting for at least 2 subscriber(s) on topic: test_topic
1751445869964 ms | e8da4f9bbbb0 | large_publisher | 7 | info | CTCPReaderLayer - TCPPubSub (Info) -Publisher :::0: Created publisher and waiting for clients.
1751445869964 ms | e8da4f9bbbb0 | large_publisher | 7 | info | CTCPReaderLayer - TCPPubSub (Info) -Publisher :::34635: Subscriber ::ffff:172.18.0.2:40494 has connected.
1751445869964 ms | e8da4f9bbbb0 | large_publisher | 7 | info | CTCPReaderLayer - TCPPubSub (Info) -Publisher :::34635: Subscriber ::ffff:172.18.0.2:40492 has connected.
[Publisher] Found 2 subscriber(s). Proceeding to send messages.
[Crash_Sub] Simulating crash after 2 seconds during active reception
[Crash_Sub] Listening to topic 'test_topic' in mode 'local_tcp'
[Crash_Sub] Received 52428800 bytes
[Publisher] Subscriber detected. Starting to send.
[Publisher] Send result: ✓, size: 52428800 bytes
1751445872517 ms | e8da4f9bbbb0 | large_publisher | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -PublisherSession ::ffff:172.18.0.2:34635-&gt;?: Failed sending data: Broken pipe
[Publisher] Send result: ✓, size: 52428800 bytes
[Publisher] Send result: ✓, size: 52428800 bytes
[Publisher] Finished sending.
[Test_Sub] Ready and waiting...
[Test_Sub] Received 52428800 bytes (message 1)
[Test_Sub] Received 52428800 bytes (message 2)
[Test_Sub] Received 52428800 bytes (message 3)
1751445874535 ms | e8da4f9bbbb0 | test_sub | 13 | error | CTCPReaderLayer - TCPPubSub (Error) -SubscriberSession 172.18.0.2:40492-&gt;e8da4f9bbbb0:34635: Error reading header length: End of file
1751445874535 ms | e8da4f9bbbb0 | test_sub | 13 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:58786: Failed connecting to publisher e8da4f9bbbb0:34635: Connection refused
1751445874536 ms | e8da4f9bbbb0 | test_sub | 13 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:58800: Failed connecting to publisher e8da4f9bbbb0:34635: Connection refused
1751445874536 ms | e8da4f9bbbb0 | test_sub | 13 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:58806: Failed connecting to publisher e8da4f9bbbb0:34635: Connection refused
1751445874536 ms | e8da4f9bbbb0 | test_sub | 13 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:58814: Failed connecting to publisher e8da4f9bbbb0:34635: Connection refused
1751445874536 ms | e8da4f9bbbb0 | test_sub | 13 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:58822: Failed connecting to publisher e8da4f9bbbb0:34635: Connection refused
[✓] Received 3 messages.
./entrypoint.sh: line 45:    14 Aborted                 (core dumped) ./crash_send_subscriber $ARGS
</msg>
<arg>\n[LOCAL TEST CONTAINER OUTPUT]\n${logs}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T08:45:02.965329" elapsed="0.000249"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-07-02T08:45:02.966824" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-02T08:45:02.965680" elapsed="0.001167"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-02T08:45:02.967096" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Local container failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-02T08:45:02.966928" elapsed="0.000213"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-07-02T08:45:02.969210" level="INFO">${logs} = [Entrypoint] Starting all processes locally in one container (mode local_tcp)
[Publisher] Prepared 50MB message.
[Publisher] Waiting for at least 2 subscriber(s) on topic: test_topic
1751445869964 ms ...</msg>
<var>${logs}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-02T08:45:02.967220" elapsed="0.002015"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Local Crash Receive Test ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-07-02T08:45:02.969318" elapsed="0.000161"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-02T08:45:02.969579" elapsed="0.005039"/>
</kw>
<arg>local_tcp</arg>
<status status="PASS" start="2025-07-02T08:44:27.825731" elapsed="35.148948"/>
</kw>
<tag>crash_receive_local_tcp</tag>
<status status="PASS" start="2025-07-02T08:44:27.825392" elapsed="35.149384"/>
</test>
<test id="s1-s6-t3" name="Crash During Reception (Network UDP)" line="54">
<kw name="Run Network Crash Receive Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T08:45:02.976035" level="INFO">${IMAGE} = sub_send_crash_network_udp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T08:45:02.975870" elapsed="0.000189"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T08:45:02.976270" level="INFO">${TOPIC} = test_topic</msg>
<var>${TOPIC}</var>
<arg>test_topic</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T08:45:02.976173" elapsed="0.000115"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T08:45:02.976467" level="INFO">${SUB_OK} = sub_ok_network_udp</msg>
<var>${SUB_OK}</var>
<arg>sub_ok_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T08:45:02.976359" elapsed="0.000125"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T08:45:02.976653" level="INFO">${SUB_CRASH} = sub_crash_network_udp</msg>
<var>${SUB_CRASH}</var>
<arg>sub_crash_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T08:45:02.976551" elapsed="0.000119"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T08:45:02.976834" level="INFO">${PUBLISHER} = pub_network_udp</msg>
<var>${PUBLISHER}</var>
<arg>pub_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T08:45:02.976735" elapsed="0.000115"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Starting crash test in NETWORK mode: ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-02T08:45:02.976914" elapsed="0.000138"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${SUB_OK}</arg>
<arg>${IMAGE}</arg>
<arg>test_subscriber</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${SUB_OK}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-02T08:45:02.977163" elapsed="0.127726"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${SUB_CRASH}</arg>
<arg>${IMAGE}</arg>
<arg>crash_subscriber</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${SUB_CRASH}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-02T08:45:03.105084" elapsed="0.118809"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${PUBLISHER}</arg>
<arg>${IMAGE}</arg>
<arg>large_publisher</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${PUBLISHER}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-02T08:45:03.224148" elapsed="0.116563"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${SUB_OK}</arg>
<status status="PASS" start="2025-07-02T08:45:03.340875" elapsed="30.832617"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${SUB_CRASH}</arg>
<status status="PASS" start="2025-07-02T08:45:34.173692" elapsed="0.001668"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${PUBLISHER}</arg>
<status status="PASS" start="2025-07-02T08:45:34.175464" elapsed="0.001051"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-07-02T08:45:34.178905" level="INFO">${log1} = [Entrypoint] Starting stable subscriber in mode network_udp
[Test_Sub] Ready and waiting...
[Test_Sub] Received 52428800 bytes (message 1)
[Test_Sub] Received 52428800 bytes (message 2)
[Test_Sub] Rec...</msg>
<var>${log1}</var>
<arg>${SUB_OK}</arg>
<status status="PASS" start="2025-07-02T08:45:34.176606" elapsed="0.002326"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-07-02T08:45:34.181087" level="INFO">${log2} = [Entrypoint] Starting crashing subscriber in mode network_udp
[Crash_Sub] Listening to topic 'test_topic' in mode 'network_udp'
[Crash_Sub] Received 52428800 bytes
[Crash_Sub] Simulating crash after 2...</msg>
<var>${log2}</var>
<arg>${SUB_CRASH}</arg>
<status status="PASS" start="2025-07-02T08:45:34.179039" elapsed="0.002076"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-07-02T08:45:34.183384" level="INFO">${log3} = [Entrypoint] Starting large publisher in mode network_udp
[Publisher] Prepared 50MB message.
[Publisher] Waiting for at least 2 subscriber(s) on topic: test_topic
[Publisher] Found 2 subscriber(s). Pr...</msg>
<var>${log3}</var>
<arg>${PUBLISHER}</arg>
<status status="PASS" start="2025-07-02T08:45:34.181201" elapsed="0.002210"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[LOG: SUBSCRIBER]\n${log1}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-02T08:45:34.183498" elapsed="0.000154"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[LOG: CRASH_SUBSCRIBER]\n${log2}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-02T08:45:34.183755" elapsed="0.000164"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[LOG: PUBLISHER]\n${log3}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-02T08:45:34.184046" elapsed="0.000166"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T08:45:34.184449" level="INFO">
[LOG: SUBSCRIBER]
[Entrypoint] Starting stable subscriber in mode network_udp
[Test_Sub] Ready and waiting...
[Test_Sub] Received 52428800 bytes (message 1)
[Test_Sub] Received 52428800 bytes (message 2)
[Test_Sub] Received 52428800 bytes (message 3)
[✓] Received 3 messages.
</msg>
<arg>\n[LOG: SUBSCRIBER]\n${log1}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T08:45:34.184316" elapsed="0.000181"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T08:45:34.184710" level="INFO">
[LOG: CRASH_SUBSCRIBER]
[Entrypoint] Starting crashing subscriber in mode network_udp
[Crash_Sub] Listening to topic 'test_topic' in mode 'network_udp'
[Crash_Sub] Received 52428800 bytes
[Crash_Sub] Simulating crash after 2 seconds during active reception
./entrypoint.sh: line 62:     7 Aborted                 (core dumped) ./crash_send_subscriber $ARGS $EXTRA
</msg>
<arg>\n[LOG: CRASH_SUBSCRIBER]\n${log2}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T08:45:34.184589" elapsed="0.000165"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T08:45:34.184965" level="INFO">
[LOG: PUBLISHER]
[Entrypoint] Starting large publisher in mode network_udp
[Publisher] Prepared 50MB message.
[Publisher] Waiting for at least 2 subscriber(s) on topic: test_topic
[Publisher] Found 2 subscriber(s). Proceeding to send messages.
[Publisher] Subscriber detected. Starting to send.
[Publisher] Send result: ✓, size: 52428800 bytes
[Publisher] Send result: ✓, size: 52428800 bytes
[Publisher] Send result: ✓, size: 52428800 bytes
[Publisher] Finished sending.
</msg>
<arg>\n[LOG: PUBLISHER]\n${log3}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T08:45:34.184845" elapsed="0.000191"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-07-02T08:45:34.186079" level="INFO">${exit1} = 0</msg>
<var>${exit1}</var>
<arg>${SUB_OK}</arg>
<status status="PASS" start="2025-07-02T08:45:34.185130" elapsed="0.000976"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-02T08:45:34.186323" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit1}</arg>
<arg>0</arg>
<arg>Stable subscriber failed unexpectedly!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-02T08:45:34.186190" elapsed="0.000177"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Network Crash Receive Test ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-07-02T08:45:34.186440" elapsed="0.000141"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${SUB_OK}</arg>
<status status="PASS" start="2025-07-02T08:45:34.186685" elapsed="0.005062"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${SUB_CRASH}</arg>
<status status="PASS" start="2025-07-02T08:45:34.191828" elapsed="0.004955"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${PUBLISHER}</arg>
<status status="PASS" start="2025-07-02T08:45:34.196918" elapsed="0.004616"/>
</kw>
<arg>network_udp</arg>
<arg>network</arg>
<status status="PASS" start="2025-07-02T08:45:02.975667" elapsed="31.225930"/>
</kw>
<tag>crash_receive_network_udp</tag>
<status status="PASS" start="2025-07-02T08:45:02.975278" elapsed="31.226414"/>
</test>
<test id="s1-s6-t4" name="Crash During Reception (Network TCP)" line="58">
<kw name="Run Network Crash Receive Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T08:45:34.203241" level="INFO">${IMAGE} = sub_send_crash_network_tcp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T08:45:34.203101" elapsed="0.000161"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T08:45:34.203419" level="INFO">${TOPIC} = test_topic</msg>
<var>${TOPIC}</var>
<arg>test_topic</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T08:45:34.203335" elapsed="0.000102"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T08:45:34.203609" level="INFO">${SUB_OK} = sub_ok_network_tcp</msg>
<var>${SUB_OK}</var>
<arg>sub_ok_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T08:45:34.203504" elapsed="0.000123"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T08:45:34.203797" level="INFO">${SUB_CRASH} = sub_crash_network_tcp</msg>
<var>${SUB_CRASH}</var>
<arg>sub_crash_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T08:45:34.203693" elapsed="0.000122"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-02T08:45:34.203979" level="INFO">${PUBLISHER} = pub_network_tcp</msg>
<var>${PUBLISHER}</var>
<arg>pub_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-02T08:45:34.203879" elapsed="0.000135"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Starting crash test in NETWORK mode: ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-02T08:45:34.204082" elapsed="0.000117"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${SUB_OK}</arg>
<arg>${IMAGE}</arg>
<arg>test_subscriber</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${SUB_OK}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-02T08:45:34.204300" elapsed="0.127962"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${SUB_CRASH}</arg>
<arg>${IMAGE}</arg>
<arg>crash_subscriber</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${SUB_CRASH}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-02T08:45:34.332439" elapsed="0.132868"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${PUBLISHER}</arg>
<arg>${IMAGE}</arg>
<arg>large_publisher</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${PUBLISHER}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-02T08:45:34.465511" elapsed="0.126759"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${SUB_OK}</arg>
<status status="PASS" start="2025-07-02T08:45:34.592469" elapsed="30.805295"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${SUB_CRASH}</arg>
<status status="PASS" start="2025-07-02T08:46:05.397974" elapsed="0.001419"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${PUBLISHER}</arg>
<status status="PASS" start="2025-07-02T08:46:05.399482" elapsed="0.001034"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-07-02T08:46:05.402922" level="INFO">${log1} = [Entrypoint] Starting stable subscriber in mode network_tcp
[Test_Sub] Ready and waiting...
[Test_Sub] Received 52428800 bytes (message 1)
[Test_Sub] Received 52428800 bytes (message 2)
[Test_Sub] Rec...</msg>
<var>${log1}</var>
<arg>${SUB_OK}</arg>
<status status="PASS" start="2025-07-02T08:46:05.400605" elapsed="0.002345"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-07-02T08:46:05.405062" level="INFO">${log2} = [Entrypoint] Starting crashing subscriber in mode network_tcp
[Crash_Sub] Listening to topic 'test_topic' in mode 'network_tcp'
[Crash_Sub] Received 52428800 bytes
[Crash_Sub] Simulating crash after 2...</msg>
<var>${log2}</var>
<arg>${SUB_CRASH}</arg>
<status status="PASS" start="2025-07-02T08:46:05.403058" elapsed="0.002032"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-07-02T08:46:05.407240" level="INFO">${log3} = [Entrypoint] Starting large publisher in mode network_tcp
[Publisher] Prepared 50MB message.
[Publisher] Waiting for at least 2 subscriber(s) on topic: test_topic
1751445935333 ms | 3fe00f1d468e | lar...</msg>
<var>${log3}</var>
<arg>${PUBLISHER}</arg>
<status status="PASS" start="2025-07-02T08:46:05.405172" elapsed="0.002094"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[LOG: SUBSCRIBER]\n${log1}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-02T08:46:05.407355" elapsed="0.000157"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[LOG: CRASH_SUBSCRIBER]\n${log2}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-02T08:46:05.407610" elapsed="0.000161"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[LOG: PUBLISHER]\n${log3}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-02T08:46:05.407877" elapsed="0.000176"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T08:46:05.408264" level="INFO">
[LOG: SUBSCRIBER]
[Entrypoint] Starting stable subscriber in mode network_tcp
[Test_Sub] Ready and waiting...
[Test_Sub] Received 52428800 bytes (message 1)
[Test_Sub] Received 52428800 bytes (message 2)
[Test_Sub] Received 52428800 bytes (message 3)
1751445940066 ms | 54b6b1b25171 | test_sub | 7 | error | CTCPReaderLayer - TCPPubSub (Error) -SubscriberSession 172.18.0.2:55978-&gt;3fe00f1d468e:44191: Error reading header length: End of file
1751445940067 ms | 54b6b1b25171 | test_sub | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:55982: Failed connecting to publisher 3fe00f1d468e:44191: Connection refused
1751445940068 ms | 54b6b1b25171 | test_sub | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:55992: Failed connecting to publisher 3fe00f1d468e:44191: Connection refused
1751445940068 ms | 54b6b1b25171 | test_sub | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:55998: Failed connecting to publisher 3fe00f1d468e:44191: Connection refused
1751445940069 ms | 54b6b1b25171 | test_sub | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:56010: Failed connecting to publisher 3fe00f1d468e:44191: Connection refused
1751445940070 ms | 54b6b1b25171 | test_sub | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:56012: Failed connecting to publisher 3fe00f1d468e:44191: Connection refused
[✓] Received 3 messages.
</msg>
<arg>\n[LOG: SUBSCRIBER]\n${log1}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T08:46:05.408154" elapsed="0.000155"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T08:46:05.408470" level="INFO">
[LOG: CRASH_SUBSCRIBER]
[Entrypoint] Starting crashing subscriber in mode network_tcp
[Crash_Sub] Listening to topic 'test_topic' in mode 'network_tcp'
[Crash_Sub] Received 52428800 bytes
[Crash_Sub] Simulating crash after 2 seconds during active reception
./entrypoint.sh: line 62:     7 Aborted                 (core dumped) ./crash_send_subscriber $ARGS $EXTRA
</msg>
<arg>\n[LOG: CRASH_SUBSCRIBER]\n${log2}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T08:46:05.408380" elapsed="0.000165"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-02T08:46:05.408708" level="INFO">
[LOG: PUBLISHER]
[Entrypoint] Starting large publisher in mode network_tcp
[Publisher] Prepared 50MB message.
[Publisher] Waiting for at least 2 subscriber(s) on topic: test_topic
1751445935333 ms | 3fe00f1d468e | large_publisher | 7 | info | CTCPReaderLayer - TCPPubSub (Info) -Publisher :::0: Created publisher and waiting for clients.
1751445935335 ms | 3fe00f1d468e | large_publisher | 7 | info | CTCPReaderLayer - TCPPubSub (Info) -Publisher :::44191: Subscriber ::ffff:172.18.0.2:55978 has connected.
1751445935335 ms | 3fe00f1d468e | large_publisher | 7 | info | CTCPReaderLayer - TCPPubSub (Info) -Publisher :::44191: Subscriber ::ffff:172.18.0.3:39056 has connected.
[Publisher] Found 2 subscriber(s). Proceeding to send messages.
[Publisher] Subscriber detected. Starting to send.
[Publisher] Send result: ✓, size: 52428800 bytes
[Publisher] Send result: ✓, size: 52428800 bytes
1751445938049 ms | 3fe00f1d468e | large_publisher | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -PublisherSession ::ffff:172.18.0.4:44191-&gt;?: Failed sending data: Broken pipe
[Publisher] Send result: ✓, size: 52428800 bytes
[Publisher] Finished sending.
</msg>
<arg>\n[LOG: PUBLISHER]\n${log3}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-02T08:46:05.408616" elapsed="0.000132"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-07-02T08:46:05.409772" level="INFO">${exit1} = 0</msg>
<var>${exit1}</var>
<arg>${SUB_OK}</arg>
<status status="PASS" start="2025-07-02T08:46:05.408815" elapsed="0.000981"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-02T08:46:05.410033" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit1}</arg>
<arg>0</arg>
<arg>Stable subscriber failed unexpectedly!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-02T08:46:05.409876" elapsed="0.000207"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Network Crash Receive Test ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-07-02T08:46:05.410159" elapsed="0.000146"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${SUB_OK}</arg>
<status status="PASS" start="2025-07-02T08:46:05.410388" elapsed="0.005157"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${SUB_CRASH}</arg>
<status status="PASS" start="2025-07-02T08:46:05.415629" elapsed="0.005207"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${PUBLISHER}</arg>
<status status="PASS" start="2025-07-02T08:46:05.420920" elapsed="0.004993"/>
</kw>
<arg>network_tcp</arg>
<arg>network</arg>
<status status="PASS" start="2025-07-02T08:45:34.202871" elapsed="31.223104"/>
</kw>
<tag>crash_receive_network_tcp</tag>
<status status="PASS" start="2025-07-02T08:45:34.202478" elapsed="31.223614"/>
</test>
<status status="PASS" start="2025-07-02T08:43:40.612159" elapsed="144.814765"/>
</suite>
<status status="PASS" start="2025-07-02T08:35:05.305917" elapsed="660.121706"/>
</suite>
<statistics>
<total>
<stat pass="22" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">basic_pub_sub_local_shm</stat>
<stat pass="1" fail="0" skip="0">basic_pub_sub_local_tcp</stat>
<stat pass="1" fail="0" skip="0">basic_pub_sub_local_udp</stat>
<stat pass="1" fail="0" skip="0">basic_pub_sub_network_tcp</stat>
<stat pass="1" fail="0" skip="0">basic_pub_sub_network_udp</stat>
<stat pass="1" fail="0" skip="0">crash_receive_local_shm</stat>
<stat pass="1" fail="0" skip="0">crash_receive_local_tcp</stat>
<stat pass="1" fail="0" skip="0">crash_receive_network_tcp</stat>
<stat pass="1" fail="0" skip="0">crash_receive_network_udp</stat>
<stat pass="1" fail="0" skip="0">multi_pub_sub_local_shm</stat>
<stat pass="1" fail="0" skip="0">multi_pub_sub_local_udp</stat>
<stat pass="1" fail="0" skip="0">multi_pub_sub_network_tcp</stat>
<stat pass="1" fail="0" skip="0">multi_pub_sub_network_udp</stat>
<stat pass="1" fail="0" skip="0">network_crash_test</stat>
<stat pass="1" fail="0" skip="0">pub_crash_local_shm</stat>
<stat pass="2" fail="0" skip="0">pub_crash_network_tcp</stat>
<stat pass="1" fail="0" skip="0">pub_crash_network_udp</stat>
<stat pass="1" fail="0" skip="0">sub_crash_local_shm</stat>
<stat pass="1" fail="0" skip="0">sub_crash_local_tcp</stat>
<stat pass="1" fail="0" skip="0">sub_crash_local_udp</stat>
<stat pass="1" fail="0" skip="0">sub_crash_network_udp</stat>
</tag>
<suite>
<stat name="Basic Pub Sub &amp; Multi Pub Sub &amp; Network Crash &amp; Pub Crash &amp; Sub Crash &amp; Sub Send Crash" id="s1" pass="22" fail="0" skip="0">Basic Pub Sub &amp; Multi Pub Sub &amp; Network Crash &amp; Pub Crash &amp; Sub Crash &amp; Sub Send Crash</stat>
<stat name="Basic Pub Sub" id="s1-s1" pass="5" fail="0" skip="0">Basic Pub Sub &amp; Multi Pub Sub &amp; Network Crash &amp; Pub Crash &amp; Sub Crash &amp; Sub Send Crash.Basic Pub Sub</stat>
<stat name="Multi Pub Sub" id="s1-s2" pass="4" fail="0" skip="0">Basic Pub Sub &amp; Multi Pub Sub &amp; Network Crash &amp; Pub Crash &amp; Sub Crash &amp; Sub Send Crash.Multi Pub Sub</stat>
<stat name="Network Crash" id="s1-s3" pass="1" fail="0" skip="0">Basic Pub Sub &amp; Multi Pub Sub &amp; Network Crash &amp; Pub Crash &amp; Sub Crash &amp; Sub Send Crash.Network Crash</stat>
<stat name="Pub Crash" id="s1-s4" pass="3" fail="0" skip="0">Basic Pub Sub &amp; Multi Pub Sub &amp; Network Crash &amp; Pub Crash &amp; Sub Crash &amp; Sub Send Crash.Pub Crash</stat>
<stat name="Sub Crash" id="s1-s5" pass="5" fail="0" skip="0">Basic Pub Sub &amp; Multi Pub Sub &amp; Network Crash &amp; Pub Crash &amp; Sub Crash &amp; Sub Send Crash.Sub Crash</stat>
<stat name="Sub Send Crash" id="s1-s6" pass="4" fail="0" skip="0">Basic Pub Sub &amp; Multi Pub Sub &amp; Network Crash &amp; Pub Crash &amp; Sub Crash &amp; Sub Send Crash.Sub Send Crash</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
