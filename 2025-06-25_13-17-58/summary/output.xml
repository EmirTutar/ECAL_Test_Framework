<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 7.3.1 (Python 3.12.3 on linux)" generated="2025-06-25T13:28:58.179714" rpa="false" schemaversion="5">
<suite id="s1" name="Basic Pub Sub &amp; Message Validation &amp; Multi Pub Sub &amp; Network Crash &amp; Pub Crash &amp; Sub Crash &amp; Sub Send Crash">
<suite id="s1-s1" name="Basic Pub Sub" source="/home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/basic_pub_sub/robottests/basic_pub_sub.robot">
<kw name="Init Test Context" type="SETUP">
<kw name="Set Test Context" owner="GlobalPathsLibrary">
<arg>basic_pub_sub</arg>
<arg>basic_pub_sub</arg>
<doc>Sets the test folder (e.g. basic_pub_sub or message_validation) and tag prefix (e.g. basic_pub_sub).
Should be called once in Suite Setup if you're using non-default test cases.</doc>
<status status="PASS" start="2025-06-25T13:28:58.302222" elapsed="0.000162"/>
</kw>
<kw name="Get Build Script Path" owner="GlobalPathsLibrary">
<msg time="2025-06-25T13:28:58.302608" level="INFO">${build} = /home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/basic_pub_sub/scripts/build_images.sh</msg>
<var>${build}</var>
<status status="PASS" start="2025-06-25T13:28:58.302497" elapsed="0.000168"/>
</kw>
<kw name="Get Network Name" owner="GlobalPathsLibrary">
<msg time="2025-06-25T13:28:58.302837" level="INFO">${net} = ecal_test_net</msg>
<var>${net}</var>
<status status="PASS" start="2025-06-25T13:28:58.302746" elapsed="0.000112"/>
</kw>
<kw name="Get Build Script Args" owner="GlobalPathsLibrary">
<msg time="2025-06-25T13:28:58.303012" level="INFO">${args} = ['basic_pub_sub']</msg>
<var>${args}</var>
<status status="PASS" start="2025-06-25T13:28:58.302924" elapsed="0.000107"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-06-25T13:28:58.303274" level="INFO">${BUILD_SCRIPT} = /home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/basic_pub_sub/scripts/build_images.sh</msg>
<arg>${BUILD_SCRIPT}</arg>
<arg>${build}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-06-25T13:28:58.303112" elapsed="0.000195"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-06-25T13:28:58.303524" level="INFO">${NETWORK} = ecal_test_net</msg>
<arg>${NETWORK}</arg>
<arg>${net}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-06-25T13:28:58.303393" elapsed="0.000161"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>[SETUP] Building Docker image...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-25T13:28:58.303652" elapsed="0.000112"/>
</kw>
<kw name="Run Process" owner="Process">
<msg time="2025-06-25T13:28:58.304062" level="INFO">Starting process:
/home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/basic_pub_sub/scripts/build_images.sh basic_pub_sub</msg>
<msg time="2025-06-25T13:28:58.304457" level="INFO">Waiting for process to complete.</msg>
<msg time="2025-06-25T13:29:13.949251" level="INFO">Process completed.</msg>
<msg time="2025-06-25T13:29:13.949416" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<var>${result}</var>
<arg>${BUILD_SCRIPT}</arg>
<arg>@{args}</arg>
<doc>Runs a process and waits for it to complete.</doc>
<status status="PASS" start="2025-06-25T13:28:58.303876" elapsed="15.645565"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-06-25T13:29:13.950116" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${result.rc}</arg>
<arg>0</arg>
<arg>Failed to build Docker image!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-06-25T13:29:13.949596" elapsed="0.000575"/>
</kw>
<kw name="Create Docker Network" owner="MyDockerLibrary">
<arg>${NETWORK}</arg>
<status status="PASS" start="2025-06-25T13:29:13.950257" elapsed="0.045443"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-06-25T13:29:16.996143" level="INFO">Slept 3 seconds.</msg>
<arg>3s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-06-25T13:29:13.995867" elapsed="3.000380"/>
</kw>
<status status="PASS" start="2025-06-25T13:28:58.301774" elapsed="18.694565"/>
</kw>
<test id="s1-s1-t1" name="Basic Pub/Sub Local SHM" line="26">
<kw name="Run Local Pub Sub Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-25T13:29:16.997362" level="INFO">${IMAGE} = basic_pub_sub_local_shm</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-25T13:29:16.997204" elapsed="0.000180"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-25T13:29:16.997581" level="INFO">${CONTAINER} = basic_local_local_shm</msg>
<var>${CONTAINER}</var>
<arg>basic_local_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-25T13:29:16.997462" elapsed="0.000137"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Running local pub/sub test in mode: ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-25T13:29:16.997695" elapsed="0.000141"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<arg>${IMAGE}</arg>
<arg>local</arg>
<arg>${layer_tag}</arg>
<arg>test_topic</arg>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-06-25T13:29:16.997937" elapsed="0.127053"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-06-25T13:29:32.188458" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-06-25T13:29:17.125210" elapsed="15.063304"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-06-25T13:29:32.188991" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Local communication test failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-06-25T13:29:32.188738" elapsed="0.000320"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-06-25T13:29:32.192122" level="INFO">${logs} = [Entrypoint] Starting subscriber and publisher in mode local_shm
Shared memory monitoring is enabled (domain: ecal_mon - queue size: 1024)
[Subscriber] Registering callback and waiting for messages......</msg>
<var>${logs}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-06-25T13:29:32.189184" elapsed="0.002970"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[CONTAINER LOG: LOCAL PUB+SUB]\n${logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-25T13:29:32.192265" elapsed="0.000158"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Basic Pub/Sub Local ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-06-25T13:29:32.192525" elapsed="0.000214"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-06-25T13:29:32.192844" elapsed="0.004644"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-06-25T13:29:33.197869" level="INFO">Slept 1 second.</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-06-25T13:29:32.197574" elapsed="1.000416"/>
</kw>
<arg>local_shm</arg>
<status status="PASS" start="2025-06-25T13:29:16.996943" elapsed="16.201154"/>
</kw>
<tag>basic_pub_sub_local_shm</tag>
<status status="PASS" start="2025-06-25T13:29:16.996415" elapsed="16.201840"/>
</test>
<test id="s1-s1-t2" name="Basic Pub/Sub Local UDP" line="30">
<kw name="Run Local Pub Sub Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-25T13:29:33.199763" level="INFO">${IMAGE} = basic_pub_sub_local_udp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-25T13:29:33.199593" elapsed="0.000191"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-25T13:29:33.200034" level="INFO">${CONTAINER} = basic_local_local_udp</msg>
<var>${CONTAINER}</var>
<arg>basic_local_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-25T13:29:33.199919" elapsed="0.000133"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Running local pub/sub test in mode: ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-25T13:29:33.200122" elapsed="0.000127"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<arg>${IMAGE}</arg>
<arg>local</arg>
<arg>${layer_tag}</arg>
<arg>test_topic</arg>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-06-25T13:29:33.200351" elapsed="0.114482"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-06-25T13:29:48.389421" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-06-25T13:29:33.315010" elapsed="15.074466"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-06-25T13:29:48.389961" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Local communication test failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-06-25T13:29:48.389707" elapsed="0.000308"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-06-25T13:29:48.393718" level="INFO">${logs} = [Entrypoint] Starting subscriber and publisher in mode local_udp
[Publisher] Waiting for at least 1 subscriber(s) on topic: test_topic
[Subscriber] Registering callback and waiting for messages...
[Pu...</msg>
<var>${logs}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-06-25T13:29:48.390196" elapsed="0.003560"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[CONTAINER LOG: LOCAL PUB+SUB]\n${logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-25T13:29:48.393878" elapsed="0.000160"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Basic Pub/Sub Local ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-06-25T13:29:48.394151" elapsed="0.000205"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-06-25T13:29:48.394458" elapsed="0.004985"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-06-25T13:29:49.399802" level="INFO">Slept 1 second.</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-06-25T13:29:48.399531" elapsed="1.000387"/>
</kw>
<arg>local_udp</arg>
<status status="PASS" start="2025-06-25T13:29:33.199373" elapsed="16.200636"/>
</kw>
<tag>basic_pub_sub_local_udp</tag>
<status status="PASS" start="2025-06-25T13:29:33.198998" elapsed="16.201148"/>
</test>
<test id="s1-s1-t3" name="Basic Pub/Sub Local TCP" line="34">
<kw name="Run Local Pub Sub Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-25T13:29:49.401506" level="INFO">${IMAGE} = basic_pub_sub_local_tcp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-25T13:29:49.401362" elapsed="0.000165"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-25T13:29:49.401745" level="INFO">${CONTAINER} = basic_local_local_tcp</msg>
<var>${CONTAINER}</var>
<arg>basic_local_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-25T13:29:49.401600" elapsed="0.000163"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Running local pub/sub test in mode: ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-25T13:29:49.401832" elapsed="0.000134"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<arg>${IMAGE}</arg>
<arg>local</arg>
<arg>${layer_tag}</arg>
<arg>test_topic</arg>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-06-25T13:29:49.402052" elapsed="0.121490"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-06-25T13:30:04.588183" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-06-25T13:29:49.523769" elapsed="15.064468"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-06-25T13:30:04.588701" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Local communication test failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-06-25T13:30:04.588424" elapsed="0.000353"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-06-25T13:30:04.592236" level="INFO">${logs} = [Entrypoint] Starting subscriber and publisher in mode local_tcp
[Publisher] Waiting for at least 1 subscriber(s) on topic: test_topic
[Subscriber] Registering callback and waiting for messages...
175...</msg>
<var>${logs}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-06-25T13:30:04.588897" elapsed="0.003365"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[CONTAINER LOG: LOCAL PUB+SUB]\n${logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-25T13:30:04.592347" elapsed="0.000151"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Basic Pub/Sub Local ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-06-25T13:30:04.592596" elapsed="0.000226"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-06-25T13:30:04.592923" elapsed="0.004912"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-06-25T13:30:05.598107" level="INFO">Slept 1 second.</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-06-25T13:30:04.597927" elapsed="1.000296"/>
</kw>
<arg>local_tcp</arg>
<status status="PASS" start="2025-06-25T13:29:49.401140" elapsed="16.197172"/>
</kw>
<tag>basic_pub_sub_local_tcp</tag>
<status status="PASS" start="2025-06-25T13:29:49.400774" elapsed="16.197659"/>
</test>
<test id="s1-s1-t4" name="Basic Pub/Sub Network UDP" line="38">
<kw name="Run Network Pub Sub Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-25T13:30:05.599876" level="INFO">${IMAGE} = basic_pub_sub_network_udp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-25T13:30:05.599726" elapsed="0.000171"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-25T13:30:05.600078" level="INFO">${TOPIC} = topic_network_udp</msg>
<var>${TOPIC}</var>
<arg>topic_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-25T13:30:05.599970" elapsed="0.000126"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-25T13:30:05.600265" level="INFO">${SUB_NAME} = sub_network_udp</msg>
<var>${SUB_NAME}</var>
<arg>sub_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-25T13:30:05.600162" elapsed="0.000120"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-25T13:30:05.600445" level="INFO">${PUB_NAME} = pub_network_udp</msg>
<var>${PUB_NAME}</var>
<arg>pub_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-25T13:30:05.600345" elapsed="0.000117"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Running network pub/sub test in mode: ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-25T13:30:05.600585" elapsed="0.000168"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${SUB_NAME}</arg>
<arg>${IMAGE}</arg>
<arg>subscriber</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${SUB_NAME}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-06-25T13:30:05.600846" elapsed="0.133452"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${PUB_NAME}</arg>
<arg>${IMAGE}</arg>
<arg>publisher</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${PUB_NAME}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-06-25T13:30:05.734496" elapsed="0.124002"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-06-25T13:30:20.797235" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>${SUB_NAME}</arg>
<status status="PASS" start="2025-06-25T13:30:05.858733" elapsed="14.938558"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-06-25T13:30:20.797822" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Subscriber failed in ${layer_tag}!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-06-25T13:30:20.797479" elapsed="0.000422"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-06-25T13:30:20.800607" level="INFO">${log_sub} = [Entrypoint] Starting subscriber in mode network_udp
[Subscriber] Registering callback and waiting for messages...
[Subscriber] Received value: 42
[Subscriber] Received value: 42
[Subscriber] Received...</msg>
<var>${log_sub}</var>
<arg>${SUB_NAME}</arg>
<status status="PASS" start="2025-06-25T13:30:20.798037" elapsed="0.002619"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-06-25T13:30:20.802933" level="INFO">${log_pub} = [Entrypoint] Starting publisher in mode network_udp
[Publisher] Waiting for at least 1 subscriber(s) on topic: topic_network_udp
[Publisher] Found 1 subscriber(s). Proceeding to send messages.
[Publis...</msg>
<var>${log_pub}</var>
<arg>${PUB_NAME}</arg>
<status status="PASS" start="2025-06-25T13:30:20.800754" elapsed="0.002205"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[CONTAINER LOG: SUBSCRIBER]\n${log_sub}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-25T13:30:20.803046" elapsed="0.000164"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[CONTAINER LOG: PUBLISHER]\n${log_pub}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-25T13:30:20.803314" elapsed="0.000143"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Basic Pub/Sub Network ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-06-25T13:30:20.803550" elapsed="0.000196"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${SUB_NAME}</arg>
<status status="PASS" start="2025-06-25T13:30:20.803832" elapsed="0.005192"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${PUB_NAME}</arg>
<status status="PASS" start="2025-06-25T13:30:20.809107" elapsed="0.005061"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-06-25T13:30:21.814476" level="INFO">Slept 1 second.</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-06-25T13:30:20.814256" elapsed="1.000333"/>
</kw>
<arg>network_udp</arg>
<arg>network</arg>
<status status="PASS" start="2025-06-25T13:30:05.599457" elapsed="16.215256"/>
</kw>
<tag>basic_pub_sub_network_udp</tag>
<status status="PASS" start="2025-06-25T13:30:05.599072" elapsed="16.215808"/>
</test>
<test id="s1-s1-t5" name="Basic Pub/Sub Network TCP" line="42">
<kw name="Run Network Pub Sub Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-25T13:30:21.816555" level="INFO">${IMAGE} = basic_pub_sub_network_tcp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-25T13:30:21.816411" elapsed="0.000166"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-25T13:30:21.816790" level="INFO">${TOPIC} = topic_network_tcp</msg>
<var>${TOPIC}</var>
<arg>topic_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-25T13:30:21.816674" elapsed="0.000134"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-25T13:30:21.816983" level="INFO">${SUB_NAME} = sub_network_tcp</msg>
<var>${SUB_NAME}</var>
<arg>sub_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-25T13:30:21.816878" elapsed="0.000122"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-25T13:30:21.817163" level="INFO">${PUB_NAME} = pub_network_tcp</msg>
<var>${PUB_NAME}</var>
<arg>pub_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-25T13:30:21.817064" elapsed="0.000116"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Running network pub/sub test in mode: ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-25T13:30:21.817245" elapsed="0.000132"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${SUB_NAME}</arg>
<arg>${IMAGE}</arg>
<arg>subscriber</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${SUB_NAME}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-06-25T13:30:21.817466" elapsed="0.135270"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${PUB_NAME}</arg>
<arg>${IMAGE}</arg>
<arg>publisher</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${PUB_NAME}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-06-25T13:30:21.952945" elapsed="0.131335"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-06-25T13:30:37.014137" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>${SUB_NAME}</arg>
<status status="PASS" start="2025-06-25T13:30:22.084454" elapsed="14.929739"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-06-25T13:30:37.014688" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Subscriber failed in ${layer_tag}!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-06-25T13:30:37.014382" elapsed="0.000372"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-06-25T13:30:37.017499" level="INFO">${log_sub} = [Entrypoint] Starting subscriber in mode network_tcp
[Subscriber] Registering callback and waiting for messages...
[Subscriber] Received value: 42
[Subscriber] Received value: 42
[Subscriber] Received...</msg>
<var>${log_sub}</var>
<arg>${SUB_NAME}</arg>
<status status="PASS" start="2025-06-25T13:30:37.014844" elapsed="0.002681"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-06-25T13:30:37.019713" level="INFO">${log_pub} = [Entrypoint] Starting publisher in mode network_tcp
[Publisher] Waiting for at least 1 subscriber(s) on topic: topic_network_tcp
1750858222954 ms | 167aaaa82471 | pub_network_tcp | 7 | info | CTCPRead...</msg>
<var>${log_pub}</var>
<arg>${PUB_NAME}</arg>
<status status="PASS" start="2025-06-25T13:30:37.017608" elapsed="0.002130"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[CONTAINER LOG: SUBSCRIBER]\n${log_sub}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-25T13:30:37.019823" elapsed="0.000161"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[CONTAINER LOG: PUBLISHER]\n${log_pub}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-25T13:30:37.020156" elapsed="0.000195"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Basic Pub/Sub Network ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-06-25T13:30:37.020463" elapsed="0.000214"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${SUB_NAME}</arg>
<status status="PASS" start="2025-06-25T13:30:37.020781" elapsed="0.006213"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${PUB_NAME}</arg>
<status status="PASS" start="2025-06-25T13:30:37.027111" elapsed="0.005868"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-06-25T13:30:38.033420" level="INFO">Slept 1 second.</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-06-25T13:30:37.033140" elapsed="1.000386"/>
</kw>
<arg>network_tcp</arg>
<arg>network</arg>
<status status="PASS" start="2025-06-25T13:30:21.816178" elapsed="16.217429"/>
</kw>
<tag>basic_pub_sub_network_tcp</tag>
<status status="PASS" start="2025-06-25T13:30:21.815784" elapsed="16.217967"/>
</test>
<status status="PASS" start="2025-06-25T13:28:58.200774" elapsed="99.834060"/>
</suite>
<suite id="s1-s2" name="Message Validation" source="/home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/message_validation/robottests/message_validation.robot">
<kw name="Init Test Context" type="SETUP">
<kw name="Set Test Context" owner="GlobalPathsLibrary">
<arg>message_validation</arg>
<arg>message_validation</arg>
<doc>Sets the test folder (e.g. basic_pub_sub or message_validation) and tag prefix (e.g. basic_pub_sub).
Should be called once in Suite Setup if you're using non-default test cases.</doc>
<status status="PASS" start="2025-06-25T13:30:38.038165" elapsed="0.000116"/>
</kw>
<kw name="Get Build Script Path" owner="GlobalPathsLibrary">
<msg time="2025-06-25T13:30:38.038450" level="INFO">${build} = /home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/message_validation/scripts/build_images.sh</msg>
<var>${build}</var>
<status status="PASS" start="2025-06-25T13:30:38.038360" elapsed="0.000110"/>
</kw>
<kw name="Get Network Name" owner="GlobalPathsLibrary">
<msg time="2025-06-25T13:30:38.038647" level="INFO">${net} = ecal_test_net</msg>
<var>${net}</var>
<status status="PASS" start="2025-06-25T13:30:38.038534" elapsed="0.000135"/>
</kw>
<kw name="Get Build Script Args" owner="GlobalPathsLibrary">
<msg time="2025-06-25T13:30:38.038814" level="INFO">${args} = ['message_validation']</msg>
<var>${args}</var>
<status status="PASS" start="2025-06-25T13:30:38.038735" elapsed="0.000097"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-06-25T13:30:38.039035" level="INFO">${BUILD_SCRIPT} = /home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/message_validation/scripts/build_images.sh</msg>
<arg>${BUILD_SCRIPT}</arg>
<arg>${build}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-06-25T13:30:38.038907" elapsed="0.000157"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-06-25T13:30:38.039247" level="INFO">${NETWORK} = ecal_test_net</msg>
<arg>${NETWORK}</arg>
<arg>${net}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-06-25T13:30:38.039136" elapsed="0.000139"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>[SETUP] Building Docker images...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-25T13:30:38.039342" elapsed="0.000092"/>
</kw>
<kw name="Run Process" owner="Process">
<msg time="2025-06-25T13:30:38.039750" level="INFO">Starting process:
/home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/message_validation/scripts/build_images.sh message_validation</msg>
<msg time="2025-06-25T13:30:38.040208" level="INFO">Waiting for process to complete.</msg>
<msg time="2025-06-25T13:30:38.715592" level="INFO">Process completed.</msg>
<msg time="2025-06-25T13:30:38.715772" level="INFO">${result} = &lt;result object with rc 1&gt;</msg>
<var>${result}</var>
<arg>${BUILD_SCRIPT}</arg>
<arg>@{args}</arg>
<doc>Runs a process and waits for it to complete.</doc>
<status status="PASS" start="2025-06-25T13:30:38.039542" elapsed="0.676257"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-06-25T13:30:38.716429" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg time="2025-06-25T13:30:38.716551" level="FAIL">Docker build failed!: 1 != 0</msg>
<arg>${result.rc}</arg>
<arg>0</arg>
<arg>Docker build failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="FAIL" start="2025-06-25T13:30:38.715952" elapsed="0.000798">Docker build failed!: 1 != 0</status>
</kw>
<kw name="Create Docker Network" owner="MyDockerLibrary">
<arg>${NETWORK}</arg>
<status status="NOT RUN" start="2025-06-25T13:30:38.716864" elapsed="0.000018"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<arg>3s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" start="2025-06-25T13:30:38.716952" elapsed="0.000014"/>
</kw>
<status status="FAIL" start="2025-06-25T13:30:38.037976" elapsed="0.679087">Docker build failed!: 1 != 0</status>
</kw>
<test id="s1-s2-t1" name="Valid Protobuf Transmission" line="14">
<tag>message_validation_valid</tag>
<status status="FAIL" start="2025-06-25T13:30:38.717129" elapsed="0.000304">Parent suite setup failed:
Docker build failed!: 1 != 0</status>
</test>
<test id="s1-s2-t2" name="Malformed Protobuf Transmission" line="19">
<tag>message_validation_malformed</tag>
<status status="FAIL" start="2025-06-25T13:30:38.717615" elapsed="0.000321">Parent suite setup failed:
Docker build failed!: 1 != 0</status>
</test>
<status status="FAIL" start="2025-06-25T13:30:38.035457" elapsed="0.682768">Suite setup failed:
Docker build failed!: 1 != 0</status>
</suite>
<suite id="s1-s3" name="Multi Pub Sub" source="/home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/multi_pub_sub/robottests/multi_pub_sub.robot">
<kw name="Init Test Context" type="SETUP">
<kw name="Set Test Context" owner="GlobalPathsLibrary">
<arg>multi_pub_sub</arg>
<arg>multi_pub_sub</arg>
<doc>Sets the test folder (e.g. basic_pub_sub or message_validation) and tag prefix (e.g. basic_pub_sub).
Should be called once in Suite Setup if you're using non-default test cases.</doc>
<status status="PASS" start="2025-06-25T13:30:38.721758" elapsed="0.000108"/>
</kw>
<kw name="Get Build Script Path" owner="GlobalPathsLibrary">
<msg time="2025-06-25T13:30:38.722036" level="INFO">${build} = /home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/multi_pub_sub/scripts/build_images.sh</msg>
<var>${build}</var>
<status status="PASS" start="2025-06-25T13:30:38.721945" elapsed="0.000112"/>
</kw>
<kw name="Get Network Name" owner="GlobalPathsLibrary">
<msg time="2025-06-25T13:30:38.722199" level="INFO">${net} = ecal_test_net</msg>
<var>${net}</var>
<status status="PASS" start="2025-06-25T13:30:38.722122" elapsed="0.000095"/>
</kw>
<kw name="Get Build Script Args" owner="GlobalPathsLibrary">
<msg time="2025-06-25T13:30:38.722356" level="INFO">${args} = ['multi_pub_sub']</msg>
<var>${args}</var>
<status status="PASS" start="2025-06-25T13:30:38.722279" elapsed="0.000100"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-06-25T13:30:38.722590" level="INFO">${BUILD_SCRIPT} = /home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/multi_pub_sub/scripts/build_images.sh</msg>
<arg>${BUILD_SCRIPT}</arg>
<arg>${build}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-06-25T13:30:38.722455" elapsed="0.000186"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-06-25T13:30:38.722894" level="INFO">${NETWORK} = ecal_test_net</msg>
<arg>${NETWORK}</arg>
<arg>${net}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-06-25T13:30:38.722768" elapsed="0.000156"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>[SETUP] Building Docker image...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-25T13:30:38.722993" elapsed="0.000094"/>
</kw>
<kw name="Run Process" owner="Process">
<msg time="2025-06-25T13:30:38.723368" level="INFO">Starting process:
/home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/multi_pub_sub/scripts/build_images.sh multi_pub_sub</msg>
<msg time="2025-06-25T13:30:38.723754" level="INFO">Waiting for process to complete.</msg>
<msg time="2025-06-25T13:30:47.827667" level="INFO">Process completed.</msg>
<msg time="2025-06-25T13:30:47.827831" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<var>${result}</var>
<arg>${BUILD_SCRIPT}</arg>
<arg>@{args}</arg>
<doc>Runs a process and waits for it to complete.</doc>
<status status="PASS" start="2025-06-25T13:30:38.723195" elapsed="9.104661"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-06-25T13:30:47.828479" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${result.rc}</arg>
<arg>0</arg>
<arg>Failed to build Docker image!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-06-25T13:30:47.828003" elapsed="0.000526"/>
</kw>
<kw name="Create Docker Network" owner="MyDockerLibrary">
<arg>${NETWORK}</arg>
<status status="PASS" start="2025-06-25T13:30:47.828612" elapsed="0.007469"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-06-25T13:30:50.836407" level="INFO">Slept 3 seconds.</msg>
<arg>3s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-06-25T13:30:47.836190" elapsed="3.000328"/>
</kw>
<status status="PASS" start="2025-06-25T13:30:38.721555" elapsed="12.115049"/>
</kw>
<test id="s1-s3-t1" name="Multi Pub/Sub Local UDP Test" line="26">
<kw name="Run Multi Pub Sub Test Local">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-25T13:30:50.837667" level="INFO">${IMAGE} = multi_pub_sub_local_udp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-25T13:30:50.837441" elapsed="0.000250"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-25T13:30:50.837890" level="INFO">${CONTAINER} = multi_locallocal_udp</msg>
<var>${CONTAINER}</var>
<arg>multi_local${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-25T13:30:50.837770" elapsed="0.000138"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Running local multi pub/sub test (all binarys in same Container) with ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-25T13:30:50.837982" elapsed="0.000145"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<arg>${IMAGE}</arg>
<arg>local_multi</arg>
<arg>${layer_tag}</arg>
<status status="PASS" start="2025-06-25T13:30:50.838230" elapsed="0.121669"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-06-25T13:31:09.024916" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-06-25T13:30:50.960085" elapsed="18.064895"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-06-25T13:31:09.025435" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Local Multi Pub/Sub Test test failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-06-25T13:31:09.025183" elapsed="0.000336"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-06-25T13:31:09.035079" level="INFO">${logs} = [Entrypoint] Starting local multi pub/sub test in mode local_udp
[Publisher] Waiting for at least 2 subscriber(s) on topic: test_topic
[Publisher] Waiting for at least 2 subscriber(s) on topic: test_t...</msg>
<var>${logs}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-06-25T13:31:09.025658" elapsed="0.009455"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[CONTAINER LOG: All Local Binarys Multi Pub/Sub]\n${logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-25T13:31:09.035205" elapsed="0.000174"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-06-25T13:31:09.035488" elapsed="0.005480"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-06-25T13:31:10.041304" level="INFO">Slept 1 second.</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-06-25T13:31:09.041057" elapsed="1.000359"/>
</kw>
<arg>local_udp</arg>
<status status="PASS" start="2025-06-25T13:30:50.837139" elapsed="19.204358"/>
</kw>
<tag>multi_pub_sub_local_udp</tag>
<status status="PASS" start="2025-06-25T13:30:50.836686" elapsed="19.204922"/>
</test>
<test id="s1-s3-t2" name="Multi Pub/Sub Local TCP Test" line="30">
<kw name="Run Multi Pub Sub Test Local">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-25T13:31:10.043004" level="INFO">${IMAGE} = multi_pub_sub_local_tcp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-25T13:31:10.042855" elapsed="0.000170"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-25T13:31:10.043205" level="INFO">${CONTAINER} = multi_locallocal_tcp</msg>
<var>${CONTAINER}</var>
<arg>multi_local${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-25T13:31:10.043098" elapsed="0.000125"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Running local multi pub/sub test (all binarys in same Container) with ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-25T13:31:10.043290" elapsed="0.000122"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<arg>${IMAGE}</arg>
<arg>local_multi</arg>
<arg>${layer_tag}</arg>
<status status="PASS" start="2025-06-25T13:31:10.043493" elapsed="0.124649"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-06-25T13:31:28.236142" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-06-25T13:31:10.168369" elapsed="18.067824"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-06-25T13:31:28.236591" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Local Multi Pub/Sub Test test failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-06-25T13:31:28.236374" elapsed="0.000338"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-06-25T13:31:28.240304" level="INFO">${logs} = [Entrypoint] Starting local multi pub/sub test in mode local_tcp
[Publisher] Waiting for at least 2 subscriber(s) on topic: test_topic
[Multi Subscriber] Waiting for messages...
[Multi Subscriber] Wai...</msg>
<var>${logs}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-06-25T13:31:28.236894" elapsed="0.003436"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[CONTAINER LOG: All Local Binarys Multi Pub/Sub]\n${logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-25T13:31:28.240419" elapsed="0.000197"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-06-25T13:31:28.240795" elapsed="0.005712"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-06-25T13:31:29.246828" level="INFO">Slept 1 second.</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-06-25T13:31:28.246609" elapsed="1.000331"/>
</kw>
<arg>local_tcp</arg>
<status status="PASS" start="2025-06-25T13:31:10.042595" elapsed="19.204426"/>
</kw>
<tag>multi_pub_sub_local_tcp</tag>
<status status="PASS" start="2025-06-25T13:31:10.042224" elapsed="19.204910"/>
</test>
<test id="s1-s3-t3" name="Multi Pub/Sub Local SHM Test" line="34">
<kw name="Run Multi Pub Sub Test Local">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-25T13:31:29.248533" level="INFO">${IMAGE} = multi_pub_sub_local_shm</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-25T13:31:29.248387" elapsed="0.000166"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-25T13:31:29.248770" level="INFO">${CONTAINER} = multi_locallocal_shm</msg>
<var>${CONTAINER}</var>
<arg>multi_local${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-25T13:31:29.248653" elapsed="0.000135"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Running local multi pub/sub test (all binarys in same Container) with ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-25T13:31:29.248860" elapsed="0.000136"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<arg>${IMAGE}</arg>
<arg>local_multi</arg>
<arg>${layer_tag}</arg>
<status status="PASS" start="2025-06-25T13:31:29.249099" elapsed="0.126505"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-06-25T13:31:47.447453" level="INFO">${exit_code} = 1</msg>
<var>${exit_code}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-06-25T13:31:29.375879" elapsed="18.071614"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-06-25T13:31:47.447876" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg time="2025-06-25T13:31:47.447974" level="FAIL">Local Multi Pub/Sub Test test failed!: 1 != 0</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Local Multi Pub/Sub Test test failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="FAIL" start="2025-06-25T13:31:47.447682" elapsed="0.000368">Local Multi Pub/Sub Test test failed!: 1 != 0</status>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<var>${logs}</var>
<arg>${CONTAINER}</arg>
<status status="NOT RUN" start="2025-06-25T13:31:47.448148" elapsed="0.000017"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[CONTAINER LOG: All Local Binarys Multi Pub/Sub]\n${logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2025-06-25T13:31:47.448236" elapsed="0.000016"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<status status="NOT RUN" start="2025-06-25T13:31:47.448314" elapsed="0.000014"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" start="2025-06-25T13:31:47.448386" elapsed="0.000013"/>
</kw>
<arg>local_shm</arg>
<status status="FAIL" start="2025-06-25T13:31:29.248161" elapsed="18.200322">Local Multi Pub/Sub Test test failed!: 1 != 0</status>
</kw>
<tag>multi_pub_sub_local_shm</tag>
<status status="FAIL" start="2025-06-25T13:31:29.247787" elapsed="18.200895">Local Multi Pub/Sub Test test failed!: 1 != 0</status>
</test>
<test id="s1-s3-t4" name="Multi Pub/Sub Network UDP Test" line="38">
<kw name="Run Multi Pub Sub Network Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-25T13:31:47.450084" level="INFO">${IMAGE} = multi_pub_sub_network_udp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-25T13:31:47.449946" elapsed="0.000159"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-25T13:31:47.450266" level="INFO">${TOPIC} = test_topic</msg>
<var>${TOPIC}</var>
<arg>test_topic</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-25T13:31:47.450180" elapsed="0.000103"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-25T13:31:47.450456" level="INFO">${PUB1} = pub1_network_udp</msg>
<var>${PUB1}</var>
<arg>pub1_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-25T13:31:47.450350" elapsed="0.000123"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-25T13:31:47.450666" level="INFO">${PUB2} = pub2_network_udp</msg>
<var>${PUB2}</var>
<arg>pub2_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-25T13:31:47.450537" elapsed="0.000148"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-25T13:31:47.450856" level="INFO">${SUB1} = sub1_network_udp</msg>
<var>${SUB1}</var>
<arg>sub1_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-25T13:31:47.450754" elapsed="0.000119"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-25T13:31:47.451043" level="INFO">${SUB2} = sub2_network_udp</msg>
<var>${SUB2}</var>
<arg>sub2_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-25T13:31:47.450943" elapsed="0.000117"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Starting multi pub/sub test with ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-25T13:31:47.451122" elapsed="0.000119"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${SUB1}</arg>
<arg>${IMAGE}</arg>
<arg>multi_subscriber</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-06-25T13:31:47.451334" elapsed="0.132740"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${SUB2}</arg>
<arg>${IMAGE}</arg>
<arg>multi_subscriber2</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-06-25T13:31:47.584266" elapsed="0.126821"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${PUB1}</arg>
<arg>${IMAGE}</arg>
<arg>multi_publisher</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-06-25T13:31:47.711249" elapsed="0.128341"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${PUB2}</arg>
<arg>${IMAGE}</arg>
<arg>multi_publisher2</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-06-25T13:31:47.839807" elapsed="0.134193"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${SUB1}</arg>
<status status="PASS" start="2025-06-25T13:31:47.974206" elapsed="17.674072"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${SUB2}</arg>
<status status="PASS" start="2025-06-25T13:32:05.648508" elapsed="0.127089"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${PUB1}</arg>
<status status="PASS" start="2025-06-25T13:32:05.775806" elapsed="0.001493"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${PUB2}</arg>
<status status="PASS" start="2025-06-25T13:32:05.777418" elapsed="0.001313"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-06-25T13:32:05.781420" level="INFO">${log1} = [Entrypoint] Starting multi_subscriber in mode network_udp
[Multi Subscriber] Waiting for messages...
[Multi Subscriber] Received value: 43
[Multi Subscriber] Received value: 42
[Multi Subscriber] Rec...</msg>
<var>${log1}</var>
<arg>${SUB1}</arg>
<status status="PASS" start="2025-06-25T13:32:05.778895" elapsed="0.002552"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[CONTAINER LOG: SUBSCRIBER 1]\n${log1}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-25T13:32:05.781538" elapsed="0.000203"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-06-25T13:32:05.784282" level="INFO">${log2} = [Entrypoint] Starting multi_subscriber2 in mode network_udp
[Multi Subscriber] Waiting for messages...
[Multi Subscriber] Received value: 43
[Multi Subscriber] Received value: 42
[Multi Subscriber] Re...</msg>
<var>${log2}</var>
<arg>${SUB2}</arg>
<status status="PASS" start="2025-06-25T13:32:05.781853" elapsed="0.002456"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[CONTAINER LOG: SUBSCRIBER 2]\n${log2}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-25T13:32:05.784397" elapsed="0.000163"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-06-25T13:32:05.785858" level="INFO">${exit1} = 0</msg>
<var>${exit1}</var>
<arg>${SUB1}</arg>
<status status="PASS" start="2025-06-25T13:32:05.784753" elapsed="0.001129"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-06-25T13:32:05.786867" level="INFO">${exit2} = 0</msg>
<var>${exit2}</var>
<arg>${SUB2}</arg>
<status status="PASS" start="2025-06-25T13:32:05.785965" elapsed="0.000926"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-06-25T13:32:05.787115" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit1}</arg>
<arg>0</arg>
<arg>Subscriber 1 failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-06-25T13:32:05.786975" elapsed="0.000186"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-06-25T13:32:05.787469" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit2}</arg>
<arg>0</arg>
<arg>Subscriber 2 failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-06-25T13:32:05.787239" elapsed="0.000271"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Multi Pub/Sub Test ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-06-25T13:32:05.787585" elapsed="0.000176"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${SUB1}</arg>
<status status="PASS" start="2025-06-25T13:32:05.787847" elapsed="0.005142"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${SUB2}</arg>
<status status="PASS" start="2025-06-25T13:32:05.793075" elapsed="0.004856"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${PUB1}</arg>
<status status="PASS" start="2025-06-25T13:32:05.798014" elapsed="0.005596"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${PUB2}</arg>
<status status="PASS" start="2025-06-25T13:32:05.803743" elapsed="0.005257"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-06-25T13:32:06.809352" level="INFO">Slept 1 second.</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-06-25T13:32:05.809104" elapsed="1.000356"/>
</kw>
<arg>network_udp</arg>
<arg>network</arg>
<status status="PASS" start="2025-06-25T13:31:47.449732" elapsed="19.359811"/>
</kw>
<tag>multi_pub_sub_network_udp</tag>
<status status="PASS" start="2025-06-25T13:31:47.449218" elapsed="19.360476"/>
</test>
<test id="s1-s3-t5" name="Multi Pub/Sub Network TCP Test" line="42">
<kw name="Run Multi Pub Sub Network Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-25T13:32:06.811421" level="INFO">${IMAGE} = multi_pub_sub_network_tcp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-25T13:32:06.811269" elapsed="0.000173"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-25T13:32:06.811599" level="INFO">${TOPIC} = test_topic</msg>
<var>${TOPIC}</var>
<arg>test_topic</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-25T13:32:06.811516" elapsed="0.000100"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-25T13:32:06.811809" level="INFO">${PUB1} = pub1_network_tcp</msg>
<var>${PUB1}</var>
<arg>pub1_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-25T13:32:06.811702" elapsed="0.000124"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-25T13:32:06.811991" level="INFO">${PUB2} = pub2_network_tcp</msg>
<var>${PUB2}</var>
<arg>pub2_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-25T13:32:06.811891" elapsed="0.000117"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-25T13:32:06.812169" level="INFO">${SUB1} = sub1_network_tcp</msg>
<var>${SUB1}</var>
<arg>sub1_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-25T13:32:06.812070" elapsed="0.000115"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-25T13:32:06.812344" level="INFO">${SUB2} = sub2_network_tcp</msg>
<var>${SUB2}</var>
<arg>sub2_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-25T13:32:06.812248" elapsed="0.000112"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Starting multi pub/sub test with ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-25T13:32:06.812422" elapsed="0.000121"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${SUB1}</arg>
<arg>${IMAGE}</arg>
<arg>multi_subscriber</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-06-25T13:32:06.812660" elapsed="0.131667"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${SUB2}</arg>
<arg>${IMAGE}</arg>
<arg>multi_subscriber2</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-06-25T13:32:06.944502" elapsed="0.125267"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${PUB1}</arg>
<arg>${IMAGE}</arg>
<arg>multi_publisher</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-06-25T13:32:07.069966" elapsed="0.124089"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${PUB2}</arg>
<arg>${IMAGE}</arg>
<arg>multi_publisher2</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-06-25T13:32:07.194239" elapsed="0.124144"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${SUB1}</arg>
<status status="PASS" start="2025-06-25T13:32:07.318569" elapsed="17.690507"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${SUB2}</arg>
<status status="PASS" start="2025-06-25T13:32:25.009265" elapsed="0.126627"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${PUB1}</arg>
<status status="PASS" start="2025-06-25T13:32:25.136100" elapsed="0.001799"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${PUB2}</arg>
<status status="PASS" start="2025-06-25T13:32:25.138022" elapsed="0.001262"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-06-25T13:32:25.142120" level="INFO">${log1} = [Entrypoint] Starting multi_subscriber in mode network_tcp
[Multi Subscriber] Waiting for messages...
[Multi Subscriber] Received value: 43
[Multi Subscriber] Received value: 42
[Multi Subscriber] Rec...</msg>
<var>${log1}</var>
<arg>${SUB1}</arg>
<status status="PASS" start="2025-06-25T13:32:25.139441" elapsed="0.002708"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[CONTAINER LOG: SUBSCRIBER 1]\n${log1}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-25T13:32:25.142254" elapsed="0.000200"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-06-25T13:32:25.145382" level="INFO">${log2} = [Entrypoint] Starting multi_subscriber2 in mode network_tcp
[Multi Subscriber] Waiting for messages...
[Multi Subscriber] Received value: 43
[Multi Subscriber] Received value: 42
[Multi Subscriber] Re...</msg>
<var>${log2}</var>
<arg>${SUB2}</arg>
<status status="PASS" start="2025-06-25T13:32:25.142575" elapsed="0.002836"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[CONTAINER LOG: SUBSCRIBER 2]\n${log2}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-25T13:32:25.145507" elapsed="0.000200"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-06-25T13:32:25.146855" level="INFO">${exit1} = 0</msg>
<var>${exit1}</var>
<arg>${SUB1}</arg>
<status status="PASS" start="2025-06-25T13:32:25.145821" elapsed="0.001058"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-06-25T13:32:25.147923" level="INFO">${exit2} = 0</msg>
<var>${exit2}</var>
<arg>${SUB2}</arg>
<status status="PASS" start="2025-06-25T13:32:25.146961" elapsed="0.000986"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-06-25T13:32:25.148177" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit1}</arg>
<arg>0</arg>
<arg>Subscriber 1 failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-06-25T13:32:25.148032" elapsed="0.000192"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-06-25T13:32:25.148420" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit2}</arg>
<arg>0</arg>
<arg>Subscriber 2 failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-06-25T13:32:25.148305" elapsed="0.000154"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Multi Pub/Sub Test ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-06-25T13:32:25.148533" elapsed="0.000177"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${SUB1}</arg>
<status status="PASS" start="2025-06-25T13:32:25.148810" elapsed="0.005643"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${SUB2}</arg>
<status status="PASS" start="2025-06-25T13:32:25.154593" elapsed="0.005825"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${PUB1}</arg>
<status status="PASS" start="2025-06-25T13:32:25.160561" elapsed="0.005982"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${PUB2}</arg>
<status status="PASS" start="2025-06-25T13:32:25.166724" elapsed="0.005518"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-06-25T13:32:26.172726" level="INFO">Slept 1 second.</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-06-25T13:32:25.172396" elapsed="1.000452"/>
</kw>
<arg>network_tcp</arg>
<arg>network</arg>
<status status="PASS" start="2025-06-25T13:32:06.811024" elapsed="19.361920"/>
</kw>
<tag>multi_pub_sub_network_tcp</tag>
<status status="PASS" start="2025-06-25T13:32:06.810576" elapsed="19.362501"/>
</test>
<status status="FAIL" start="2025-06-25T13:30:38.718766" elapsed="107.455701"/>
</suite>
<suite id="s1-s4" name="Network Crash" source="/home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/network_crash/robottests/network_crash.robot">
<kw name="Init Test Context" type="SETUP">
<kw name="Set Test Context" owner="GlobalPathsLibrary">
<arg>network_crash</arg>
<arg>network_crash</arg>
<doc>Sets the test folder (e.g. basic_pub_sub or message_validation) and tag prefix (e.g. basic_pub_sub).
Should be called once in Suite Setup if you're using non-default test cases.</doc>
<status status="PASS" start="2025-06-25T13:32:26.177737" elapsed="0.000116"/>
</kw>
<kw name="Get Build Script Path" owner="GlobalPathsLibrary">
<msg time="2025-06-25T13:32:26.178035" level="INFO">${build} = /home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/network_crash/scripts/build_images.sh</msg>
<var>${build}</var>
<status status="PASS" start="2025-06-25T13:32:26.177936" elapsed="0.000120"/>
</kw>
<kw name="Get Network Name" owner="GlobalPathsLibrary">
<msg time="2025-06-25T13:32:26.178194" level="INFO">${net} = ecal_test_net</msg>
<var>${net}</var>
<status status="PASS" start="2025-06-25T13:32:26.178118" elapsed="0.000092"/>
</kw>
<kw name="Get Build Script Args" owner="GlobalPathsLibrary">
<msg time="2025-06-25T13:32:26.178345" level="INFO">${args} = ['network_crash']</msg>
<var>${args}</var>
<status status="PASS" start="2025-06-25T13:32:26.178270" elapsed="0.000092"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-06-25T13:32:26.178573" level="INFO">${BUILD_SCRIPT} = /home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/network_crash/scripts/build_images.sh</msg>
<arg>${BUILD_SCRIPT}</arg>
<arg>${build}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-06-25T13:32:26.178438" elapsed="0.000166"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-06-25T13:32:26.178838" level="INFO">${NETWORK} = ecal_test_net</msg>
<arg>${NETWORK}</arg>
<arg>${net}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-06-25T13:32:26.178716" elapsed="0.000150"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>[SETUP] Building image...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-25T13:32:26.178935" elapsed="0.000100"/>
</kw>
<kw name="Run Process" owner="Process">
<msg time="2025-06-25T13:32:26.179315" level="INFO">Starting process:
/home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/network_crash/scripts/build_images.sh network_crash</msg>
<msg time="2025-06-25T13:32:26.179822" level="INFO">Waiting for process to complete.</msg>
<msg time="2025-06-25T13:32:35.142916" level="INFO">Process completed.</msg>
<msg time="2025-06-25T13:32:35.143080" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<var>${result}</var>
<arg>${BUILD_SCRIPT}</arg>
<arg>@{args}</arg>
<doc>Runs a process and waits for it to complete.</doc>
<status status="PASS" start="2025-06-25T13:32:26.179146" elapsed="8.963961"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-06-25T13:32:35.143745" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${result.rc}</arg>
<arg>0</arg>
<arg>Docker image build failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-06-25T13:32:35.143258" elapsed="0.000535"/>
</kw>
<kw name="Create Docker Network" owner="MyDockerLibrary">
<arg>${NETWORK}</arg>
<status status="PASS" start="2025-06-25T13:32:35.143875" elapsed="0.007694"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-06-25T13:32:37.152068" level="INFO">Slept 2 seconds.</msg>
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-06-25T13:32:35.151775" elapsed="2.000408"/>
</kw>
<status status="PASS" start="2025-06-25T13:32:26.177549" elapsed="10.974730"/>
</kw>
<test id="s1-s4-t1" name="Local communication survives Network crash" line="45">
<kw name="Run Network Crash Survival Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-25T13:32:37.153291" level="INFO">${IMAGE} = network_crash_local_udp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_local_udp</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-25T13:32:37.153153" elapsed="0.000159"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-25T13:32:37.153704" level="INFO">${TOPIC} = test_topic</msg>
<var>${TOPIC}</var>
<arg>test_topic</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-25T13:32:37.153387" elapsed="0.000337"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-25T13:32:37.153882" level="INFO">${NET_PUB} = udp_network_pub</msg>
<var>${NET_PUB}</var>
<arg>udp_network_pub</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-25T13:32:37.153797" elapsed="0.000102"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-25T13:32:37.154048" level="INFO">${LOCAL_ALL} = udp_local_all</msg>
<var>${LOCAL_ALL}</var>
<arg>udp_local_all</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-25T13:32:37.153967" elapsed="0.000098"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n\n[INFO] Starting "LOCAL UDP (PUB1 + SUB + PUB3)" in one container and "NETWORK UDP (PUB2)" separately...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-25T13:32:37.154131" elapsed="0.000109"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${LOCAL_ALL}</arg>
<arg>${IMAGE}</arg>
<arg>udp_local_all</arg>
<arg>${TOPIC}</arg>
<arg>${LOCAL_ALL}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-06-25T13:32:37.154331" elapsed="0.135370"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${NET_PUB}</arg>
<arg>${IMAGE}</arg>
<arg>udp_network_pub</arg>
<arg>${TOPIC}</arg>
<arg>${NET_PUB}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-06-25T13:32:37.289916" elapsed="0.128114"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Letting PUB1 and PUB2 run in parallel for 7s...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-25T13:32:37.418197" elapsed="0.000164"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-06-25T13:32:44.418726" level="INFO">Slept 7 seconds.</msg>
<arg>7s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-06-25T13:32:37.418457" elapsed="7.000387"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[SIMULATION] Disconnecting NETWORK UDP Publisher...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-25T13:32:44.419024" elapsed="0.000202"/>
</kw>
<kw name="Disconnect Container From Network">
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[SIMULATION] Disconnecting ${container} from ${network} (simulate network failure)...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-25T13:32:44.419740" elapsed="0.000157"/>
</kw>
<kw name="Run Process" owner="Process">
<msg time="2025-06-25T13:32:44.420167" level="INFO">Starting process:
docker network disconnect ecal_test_net udp_network_pub</msg>
<msg time="2025-06-25T13:32:44.420828" level="INFO">Waiting for process to complete.</msg>
<msg time="2025-06-25T13:32:44.464322" level="INFO">Process completed.</msg>
<msg time="2025-06-25T13:32:44.464542" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<var>${result}</var>
<arg>docker</arg>
<arg>network</arg>
<arg>disconnect</arg>
<arg>${network}</arg>
<arg>${container}</arg>
<doc>Runs a process and waits for it to complete.</doc>
<status status="PASS" start="2025-06-25T13:32:44.420007" elapsed="0.044570"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-06-25T13:32:44.465515" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${result.rc}</arg>
<arg>0</arg>
<arg>Failed to disconnect ${container} from ${network}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-06-25T13:32:44.464802" elapsed="0.000778"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-06-25T13:32:45.466336" level="INFO">Slept 1 second.</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-06-25T13:32:44.466064" elapsed="1.000414"/>
</kw>
<arg>${NET_PUB}</arg>
<arg>${NETWORK}</arg>
<status status="PASS" start="2025-06-25T13:32:44.419425" elapsed="1.047165"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${LOCAL_ALL}</arg>
<status status="PASS" start="2025-06-25T13:32:45.466793" elapsed="21.883314"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-06-25T13:33:07.354024" level="INFO">${log_local} = [Entrypoint] Starting UDP subscriber, then UDP publisher...
[Publisher] Waiting for at least 1 subscriber(s) on topic: test_topic
[Publisher] Found 1 subscriber(s). Proceeding to send messages.
[Subsc...</msg>
<var>${log_local}</var>
<arg>${LOCAL_ALL}</arg>
<status status="PASS" start="2025-06-25T13:33:07.350316" elapsed="0.003739"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[LOG: LOCAL UDP PUB + SUB + PUB3 CONTAINER]\n${log_local}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-25T13:33:07.354166" elapsed="0.000190"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-06-25T13:33:07.355673" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>${LOCAL_ALL}</arg>
<status status="PASS" start="2025-06-25T13:33:07.354463" elapsed="0.001236"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-06-25T13:33:07.355933" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>LOCAL container (PUB + SUB + PUB3) failed unexpectedly!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-06-25T13:33:07.355786" elapsed="0.000193"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Network Crash Test with Local Recovery Publisher</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-06-25T13:33:07.356058" elapsed="0.000121"/>
</kw>
<status status="PASS" start="2025-06-25T13:32:37.152947" elapsed="30.203302"/>
</kw>
<tag>network_crash_test</tag>
<status status="PASS" start="2025-06-25T13:32:37.152428" elapsed="30.203918"/>
</test>
<status status="PASS" start="2025-06-25T13:32:26.175041" elapsed="41.181982"/>
</suite>
<suite id="s1-s5" name="Pub Crash" source="/home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/pub_crash/robottests/pub_crash.robot">
<kw name="Init Test Context" type="SETUP">
<kw name="Set Test Context" owner="GlobalPathsLibrary">
<arg>pub_crash</arg>
<arg>pub_crash</arg>
<doc>Sets the test folder (e.g. basic_pub_sub or message_validation) and tag prefix (e.g. basic_pub_sub).
Should be called once in Suite Setup if you're using non-default test cases.</doc>
<status status="PASS" start="2025-06-25T13:33:07.360170" elapsed="0.000103"/>
</kw>
<kw name="Get Build Script Path" owner="GlobalPathsLibrary">
<msg time="2025-06-25T13:33:07.360440" level="INFO">${build} = /home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/pub_crash/scripts/build_images.sh</msg>
<var>${build}</var>
<status status="PASS" start="2025-06-25T13:33:07.360350" elapsed="0.000116"/>
</kw>
<kw name="Get Network Name" owner="GlobalPathsLibrary">
<msg time="2025-06-25T13:33:07.360610" level="INFO">${net} = ecal_test_net</msg>
<var>${net}</var>
<status status="PASS" start="2025-06-25T13:33:07.360532" elapsed="0.000173"/>
</kw>
<kw name="Get Build Script Args" owner="GlobalPathsLibrary">
<msg time="2025-06-25T13:33:07.360930" level="INFO">${args} = ['pub_crash']</msg>
<var>${args}</var>
<status status="PASS" start="2025-06-25T13:33:07.360833" elapsed="0.000116"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-06-25T13:33:07.361164" level="INFO">${BUILD_SCRIPT} = /home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/pub_crash/scripts/build_images.sh</msg>
<arg>${BUILD_SCRIPT}</arg>
<arg>${build}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-06-25T13:33:07.361029" elapsed="0.000166"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-06-25T13:33:07.361386" level="INFO">${NETWORK} = ecal_test_net</msg>
<arg>${NETWORK}</arg>
<arg>${net}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-06-25T13:33:07.361268" elapsed="0.000146"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>[SETUP] Building Docker image...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-25T13:33:07.361480" elapsed="0.000088"/>
</kw>
<kw name="Run Process" owner="Process">
<msg time="2025-06-25T13:33:07.361842" level="INFO">Starting process:
/home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/pub_crash/scripts/build_images.sh pub_crash</msg>
<msg time="2025-06-25T13:33:07.362220" level="INFO">Waiting for process to complete.</msg>
<msg time="2025-06-25T13:33:16.360494" level="INFO">Process completed.</msg>
<msg time="2025-06-25T13:33:16.360694" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<var>${result}</var>
<arg>${BUILD_SCRIPT}</arg>
<arg>@{args}</arg>
<doc>Runs a process and waits for it to complete.</doc>
<status status="PASS" start="2025-06-25T13:33:07.361684" elapsed="8.999039"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-06-25T13:33:16.361344" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${result.rc}</arg>
<arg>0</arg>
<arg>Docker build failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-06-25T13:33:16.360877" elapsed="0.000518"/>
</kw>
<kw name="Create Docker Network" owner="MyDockerLibrary">
<arg>${NETWORK}</arg>
<status status="PASS" start="2025-06-25T13:33:16.361480" elapsed="0.007556"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-06-25T13:33:19.369415" level="INFO">Slept 3 seconds.</msg>
<arg>3s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-06-25T13:33:16.369180" elapsed="3.000351"/>
</kw>
<status status="PASS" start="2025-06-25T13:33:07.360033" elapsed="12.009620"/>
</kw>
<test id="s1-s5-t1" name="Communication Continues After Publisher Crash (UDP)" line="30">
<kw name="Run Network Communication Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-25T13:33:19.370871" level="INFO">${IMAGE} = pub_crash_network_udp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-25T13:33:19.370475" elapsed="0.000419"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-25T13:33:19.371059" level="INFO">${TOPIC} = test_topic</msg>
<var>${TOPIC}</var>
<arg>test_topic</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-25T13:33:19.370972" elapsed="0.000106"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-25T13:33:19.371253" level="INFO">${CRASH_PUB} = crash_pub_network_udp</msg>
<var>${CRASH_PUB}</var>
<arg>crash_pub_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-25T13:33:19.371146" elapsed="0.000124"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-25T13:33:19.371440" level="INFO">${TEST_PUB} = test_pub_network_udp</msg>
<var>${TEST_PUB}</var>
<arg>test_pub_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-25T13:33:19.371338" elapsed="0.000119"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-25T13:33:19.371651" level="INFO">${SUB_NAME} = sub_network_udp</msg>
<var>${SUB_NAME}</var>
<arg>sub_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-25T13:33:19.371521" elapsed="0.000152"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Starting communication continuity test with ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-25T13:33:19.371743" elapsed="0.000125"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${SUB_NAME}</arg>
<arg>${IMAGE}</arg>
<arg>subscriber</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-06-25T13:33:19.371963" elapsed="0.131586"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${CRASH_PUB}</arg>
<arg>${IMAGE}</arg>
<arg>crash_publisher</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-06-25T13:33:19.503756" elapsed="0.128310"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${TEST_PUB}</arg>
<arg>${IMAGE}</arg>
<arg>test_publisher</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${TEST_PUB}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-06-25T13:33:19.632244" elapsed="0.122727"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${SUB_NAME}</arg>
<status status="PASS" start="2025-06-25T13:33:19.755161" elapsed="34.809427"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${CRASH_PUB}</arg>
<status status="PASS" start="2025-06-25T13:33:54.564819" elapsed="0.001632"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${TEST_PUB}</arg>
<status status="PASS" start="2025-06-25T13:33:54.566574" elapsed="0.001323"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-06-25T13:33:54.570255" level="INFO">${sub_logs} = [Entrypoint] Starting crash subscriber in mode network_udp

[Subscriber] Registering callback and waiting for messages...

[Subscriber] Received value: 42
[Subscriber] Received value: 43
[Subscriber] ...</msg>
<var>${sub_logs}</var>
<arg>${SUB_NAME}</arg>
<status status="PASS" start="2025-06-25T13:33:54.567986" elapsed="0.002296"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[SUBSCRIBER CONTAINER OUTPUT]\n${sub_logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-25T13:33:54.570369" elapsed="0.000169"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-06-25T13:33:54.573153" level="INFO">${crash_logs} = [Entrypoint] Starting crash publisher in mode network_udp
[Publisher] Waiting for at least 1 subscriber(s) on topic: test_topic
[Publisher] Found 1 subscriber(s). Proceeding to send messages.
[Crash P...</msg>
<var>${crash_logs}</var>
<arg>${CRASH_PUB}</arg>
<status status="PASS" start="2025-06-25T13:33:54.570658" elapsed="0.002522"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[CRASH PUBLISHER OUTPUT]\n${crash_logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-25T13:33:54.573268" elapsed="0.000157"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-06-25T13:33:54.574681" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>${SUB_NAME}</arg>
<status status="PASS" start="2025-06-25T13:33:54.573539" elapsed="0.001167"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-06-25T13:33:54.574932" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Communication failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-06-25T13:33:54.574792" elapsed="0.000233"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Network Communication after one Publisher crash ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-06-25T13:33:54.575106" elapsed="0.000146"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${SUB_NAME}</arg>
<status status="PASS" start="2025-06-25T13:33:54.575347" elapsed="0.004891"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${CRASH_PUB}</arg>
<status status="PASS" start="2025-06-25T13:33:54.580323" elapsed="0.005356"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${TEST_PUB}</arg>
<status status="PASS" start="2025-06-25T13:33:54.585770" elapsed="0.005815"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-06-25T13:33:55.591924" level="INFO">Slept 1 second.</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-06-25T13:33:54.591705" elapsed="1.000327"/>
</kw>
<arg>network_udp</arg>
<arg>network</arg>
<status status="PASS" start="2025-06-25T13:33:19.370238" elapsed="36.221878"/>
</kw>
<tag>pub_crash_network_udp</tag>
<status status="PASS" start="2025-06-25T13:33:19.369734" elapsed="36.222494"/>
</test>
<test id="s1-s5-t2" name="Communication Continues After Publisher Crash (TCP)" line="34">
<kw name="Run Network Communication Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-25T13:33:55.594107" level="INFO">${IMAGE} = pub_crash_network_tcp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-25T13:33:55.593955" elapsed="0.000174"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-25T13:33:55.594286" level="INFO">${TOPIC} = test_topic</msg>
<var>${TOPIC}</var>
<arg>test_topic</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-25T13:33:55.594202" elapsed="0.000102"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-25T13:33:55.594480" level="INFO">${CRASH_PUB} = crash_pub_network_tcp</msg>
<var>${CRASH_PUB}</var>
<arg>crash_pub_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-25T13:33:55.594371" elapsed="0.000126"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-25T13:33:55.594692" level="INFO">${TEST_PUB} = test_pub_network_tcp</msg>
<var>${TEST_PUB}</var>
<arg>test_pub_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-25T13:33:55.594563" elapsed="0.000148"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-25T13:33:55.594879" level="INFO">${SUB_NAME} = sub_network_tcp</msg>
<var>${SUB_NAME}</var>
<arg>sub_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-25T13:33:55.594777" elapsed="0.000119"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Starting communication continuity test with ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-25T13:33:55.594961" elapsed="0.000124"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${SUB_NAME}</arg>
<arg>${IMAGE}</arg>
<arg>subscriber</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-06-25T13:33:55.595194" elapsed="0.133297"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${CRASH_PUB}</arg>
<arg>${IMAGE}</arg>
<arg>crash_publisher</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-06-25T13:33:55.728734" elapsed="0.123193"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${TEST_PUB}</arg>
<arg>${IMAGE}</arg>
<arg>test_publisher</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${TEST_PUB}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-06-25T13:33:55.852134" elapsed="0.127297"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${SUB_NAME}</arg>
<status status="PASS" start="2025-06-25T13:33:55.979669" elapsed="34.811788"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${CRASH_PUB}</arg>
<status status="PASS" start="2025-06-25T13:34:30.791684" elapsed="0.001545"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${TEST_PUB}</arg>
<status status="PASS" start="2025-06-25T13:34:30.793323" elapsed="0.001036"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-06-25T13:34:30.797232" level="INFO">${sub_logs} = [Entrypoint] Starting crash subscriber in mode network_tcp

[Subscriber] Registering callback and waiting for messages...

[Subscriber] Received value: 42
[Subscriber] Received value: 43
[Subscriber] ...</msg>
<var>${sub_logs}</var>
<arg>${SUB_NAME}</arg>
<status status="PASS" start="2025-06-25T13:34:30.794448" elapsed="0.002812"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[SUBSCRIBER CONTAINER OUTPUT]\n${sub_logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-25T13:34:30.797349" elapsed="0.000177"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-06-25T13:34:30.800257" level="INFO">${crash_logs} = [Entrypoint] Starting crash publisher in mode network_tcp
[Publisher] Waiting for at least 1 subscriber(s) on topic: test_topic
1750858436730 ms | 732432bc1a51 | ./crash_publisher | 7 | info | CTCPRea...</msg>
<var>${crash_logs}</var>
<arg>${CRASH_PUB}</arg>
<status status="PASS" start="2025-06-25T13:34:30.797645" elapsed="0.002638"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[CRASH PUBLISHER OUTPUT]\n${crash_logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-25T13:34:30.800370" elapsed="0.000148"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-06-25T13:34:30.801697" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>${SUB_NAME}</arg>
<status status="PASS" start="2025-06-25T13:34:30.800655" elapsed="0.001067"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-06-25T13:34:30.801946" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Communication failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-06-25T13:34:30.801805" elapsed="0.000187"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Network Communication after one Publisher crash ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-06-25T13:34:30.802068" elapsed="0.000141"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${SUB_NAME}</arg>
<status status="PASS" start="2025-06-25T13:34:30.802303" elapsed="0.005396"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${CRASH_PUB}</arg>
<status status="PASS" start="2025-06-25T13:34:30.807785" elapsed="0.005072"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${TEST_PUB}</arg>
<status status="PASS" start="2025-06-25T13:34:30.812942" elapsed="0.004797"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-06-25T13:34:31.818074" level="INFO">Slept 1 second.</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-06-25T13:34:30.817828" elapsed="1.000355"/>
</kw>
<arg>network_tcp</arg>
<arg>network</arg>
<status status="PASS" start="2025-06-25T13:33:55.593715" elapsed="36.224552"/>
</kw>
<tag>pub_crash_network_tcp</tag>
<status status="PASS" start="2025-06-25T13:33:55.593272" elapsed="36.225107"/>
</test>
<test id="s1-s5-t3" name="Communication Continues After Publisher Crash (SHM)" line="38">
<kw name="Run Local Communication Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-25T13:34:31.820250" level="INFO">${IMAGE} = pub_crash_local_shm</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-25T13:34:31.820104" elapsed="0.000166"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-25T13:34:31.820447" level="INFO">${CONTAINER} = local_all_local_shm</msg>
<var>${CONTAINER}</var>
<arg>local_all_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-25T13:34:31.820341" elapsed="0.000124"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\nStarting local test container with ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-25T13:34:31.820534" elapsed="0.000145"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<arg>${IMAGE}</arg>
<arg>local_all</arg>
<arg>${layer_tag}</arg>
<status status="PASS" start="2025-06-25T13:34:31.820774" elapsed="0.112650"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-06-25T13:35:06.996261" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-06-25T13:34:31.933641" elapsed="35.062675"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-06-25T13:35:06.996783" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Local test failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-06-25T13:35:06.996512" elapsed="0.000344"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-06-25T13:35:07.000080" level="INFO">${logs} = [Entrypoint] Starting local test (pub/sub/monitor) in mode local_shm
Shared memory monitoring is enabled (domain: ecal_mon - queue size: 1024)

[Subscriber] Registering callback and waiting for messag...</msg>
<var>${logs}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-06-25T13:35:06.996984" elapsed="0.003123"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n\n[CONTAINER LOG: LOCAL PUB+SUB]\n\n${logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-25T13:35:07.000199" elapsed="0.000189"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Local Communication after one Publisher crash ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-06-25T13:35:07.000482" elapsed="0.000227"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-06-25T13:35:07.000815" elapsed="0.005025"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-06-25T13:35:08.006185" level="INFO">Slept 1 second.</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-06-25T13:35:07.005930" elapsed="1.000374"/>
</kw>
<arg>local_shm</arg>
<status status="PASS" start="2025-06-25T13:34:31.819882" elapsed="36.186519"/>
</kw>
<tag>pub_crash_local_shm</tag>
<status status="PASS" start="2025-06-25T13:34:31.819479" elapsed="36.187051"/>
</test>
<status status="PASS" start="2025-06-25T13:33:07.357546" elapsed="120.649685"/>
</suite>
<suite id="s1-s6" name="Sub Crash" source="/home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/sub_crash/robottests/sub_crash.robot">
<kw name="Init Test Context" type="SETUP">
<kw name="Set Test Context" owner="GlobalPathsLibrary">
<arg>sub_crash</arg>
<arg>sub_crash</arg>
<doc>Sets the test folder (e.g. basic_pub_sub or message_validation) and tag prefix (e.g. basic_pub_sub).
Should be called once in Suite Setup if you're using non-default test cases.</doc>
<status status="PASS" start="2025-06-25T13:35:08.010438" elapsed="0.000121"/>
</kw>
<kw name="Get Build Script Path" owner="GlobalPathsLibrary">
<msg time="2025-06-25T13:35:08.010759" level="INFO">${build} = /home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/sub_crash/scripts/build_images.sh</msg>
<var>${build}</var>
<status status="PASS" start="2025-06-25T13:35:08.010663" elapsed="0.000117"/>
</kw>
<kw name="Get Network Name" owner="GlobalPathsLibrary">
<msg time="2025-06-25T13:35:08.010922" level="INFO">${net} = ecal_test_net</msg>
<var>${net}</var>
<status status="PASS" start="2025-06-25T13:35:08.010845" elapsed="0.000095"/>
</kw>
<kw name="Get Build Script Args" owner="GlobalPathsLibrary">
<msg time="2025-06-25T13:35:08.011077" level="INFO">${args} = ['sub_crash']</msg>
<var>${args}</var>
<status status="PASS" start="2025-06-25T13:35:08.011000" elapsed="0.000093"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-06-25T13:35:08.011304" level="INFO">${BUILD_SCRIPT} = /home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/sub_crash/scripts/build_images.sh</msg>
<arg>${BUILD_SCRIPT}</arg>
<arg>${build}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-06-25T13:35:08.011172" elapsed="0.000161"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-06-25T13:35:08.011517" level="INFO">${NETWORK} = ecal_test_net</msg>
<arg>${NETWORK}</arg>
<arg>${net}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-06-25T13:35:08.011404" elapsed="0.000140"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>[SETUP] Building Docker image...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-25T13:35:08.011609" elapsed="0.000118"/>
</kw>
<kw name="Run Process" owner="Process">
<msg time="2025-06-25T13:35:08.011988" level="INFO">Starting process:
/home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/sub_crash/scripts/build_images.sh sub_crash</msg>
<msg time="2025-06-25T13:35:08.012451" level="INFO">Waiting for process to complete.</msg>
<msg time="2025-06-25T13:35:17.360699" level="INFO">Process completed.</msg>
<msg time="2025-06-25T13:35:17.360870" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<var>${result}</var>
<arg>${BUILD_SCRIPT}</arg>
<arg>@{args}</arg>
<doc>Runs a process and waits for it to complete.</doc>
<status status="PASS" start="2025-06-25T13:35:08.011829" elapsed="9.349067"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-06-25T13:35:17.361518" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${result.rc}</arg>
<arg>0</arg>
<arg>Docker build failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-06-25T13:35:17.361048" elapsed="0.000520"/>
</kw>
<kw name="Create Docker Network" owner="MyDockerLibrary">
<arg>${NETWORK}</arg>
<status status="PASS" start="2025-06-25T13:35:17.361688" elapsed="0.008515"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-06-25T13:35:20.370672" level="INFO">Slept 3 seconds.</msg>
<arg>3s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-06-25T13:35:17.370392" elapsed="3.000386"/>
</kw>
<status status="PASS" start="2025-06-25T13:35:08.010284" elapsed="12.360577"/>
</kw>
<test id="s1-s6-t1" name="Network Communication Continues After Subscriber Crash (UDP)" line="30">
<kw name="Run Network Communication Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-25T13:35:20.371832" level="INFO">${IMAGE} = sub_crash_network_udp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-25T13:35:20.371672" elapsed="0.000182"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-25T13:35:20.372072" level="INFO">${TOPIC} = test_topic</msg>
<var>${TOPIC}</var>
<arg>test_topic</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-25T13:35:20.371978" elapsed="0.000113"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-25T13:35:20.372270" level="INFO">${CRASH_SUB} = crash_sub_network_udp</msg>
<var>${CRASH_SUB}</var>
<arg>crash_sub_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-25T13:35:20.372161" elapsed="0.000126"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-25T13:35:20.372459" level="INFO">${TEST_SUB} = test_sub_network_udp</msg>
<var>${TEST_SUB}</var>
<arg>test_sub_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-25T13:35:20.372355" elapsed="0.000122"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-25T13:35:20.372669" level="INFO">${TEST_PUB} = test_pub_network_udp</msg>
<var>${TEST_PUB}</var>
<arg>test_pub_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-25T13:35:20.372541" elapsed="0.000147"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Starting subscriber crash continuity test with ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-25T13:35:20.372758" elapsed="0.000127"/>
</kw>
<kw name="Create Docker Network" owner="MyDockerLibrary">
<arg>${NETWORK}</arg>
<status status="PASS" start="2025-06-25T13:35:20.372980" elapsed="0.007379"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${CRASH_SUB}</arg>
<arg>${IMAGE}</arg>
<arg>crash_subscriber</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${CRASH_SUB}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-06-25T13:35:20.380489" elapsed="0.132393"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${TEST_SUB}</arg>
<arg>${IMAGE}</arg>
<arg>test_subscriber</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${TEST_SUB}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-06-25T13:35:20.513089" elapsed="0.127095"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${TEST_PUB}</arg>
<arg>${IMAGE}</arg>
<arg>test_publisher</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${TEST_PUB}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-06-25T13:35:20.640368" elapsed="0.126119"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${CRASH_SUB}</arg>
<status status="PASS" start="2025-06-25T13:35:20.766698" elapsed="7.078966"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${TEST_SUB}</arg>
<status status="PASS" start="2025-06-25T13:35:27.845870" elapsed="26.851669"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${TEST_PUB}</arg>
<status status="PASS" start="2025-06-25T13:35:54.697777" elapsed="0.001733"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-06-25T13:35:54.701975" level="INFO">${test_sub_logs} = [Entrypoint] Starting crash publisher in mode network_udp

[Test_Subscriber] Waiting for messages...
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Receive...</msg>
<var>${test_sub_logs}</var>
<arg>${TEST_SUB}</arg>
<status status="PASS" start="2025-06-25T13:35:54.699603" elapsed="0.002399"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[SUBSCRIBER CONTAINER OUTPUT]\n${test_sub_logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-25T13:35:54.702089" elapsed="0.000163"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-06-25T13:35:54.704614" level="INFO">${crash_sub_logs} = [Entrypoint] Starting crash subscriber in mode network_udp

[Crash Subscriber] Registered and sleeping before crash...

[Crash_Subscriber] Received value: 43
[Crash_Subscriber] Received value: 43
[Cra...</msg>
<var>${crash_sub_logs}</var>
<arg>${CRASH_SUB}</arg>
<status status="PASS" start="2025-06-25T13:35:54.702361" elapsed="0.002306"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[CRASH SUBSCRIBER CONTAINER OUTPUT]\n${crash_sub_logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-25T13:35:54.704753" elapsed="0.000142"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-06-25T13:35:54.705917" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>${TEST_SUB}</arg>
<status status="PASS" start="2025-06-25T13:35:54.705002" elapsed="0.000939"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-06-25T13:35:54.706163" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Communication failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-06-25T13:35:54.706025" elapsed="0.000189"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Network Communication after one Subscriber crash ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-06-25T13:35:54.706300" elapsed="0.000143"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${CRASH_SUB}</arg>
<status status="PASS" start="2025-06-25T13:35:54.706538" elapsed="0.004874"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${TEST_SUB}</arg>
<status status="PASS" start="2025-06-25T13:35:54.711497" elapsed="0.004817"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${TEST_PUB}</arg>
<status status="PASS" start="2025-06-25T13:35:54.716398" elapsed="0.005848"/>
</kw>
<arg>network_udp</arg>
<arg>network</arg>
<status status="PASS" start="2025-06-25T13:35:20.371410" elapsed="34.350893"/>
</kw>
<tag>sub_crash_network_udp</tag>
<status status="PASS" start="2025-06-25T13:35:20.370926" elapsed="34.351469"/>
</test>
<test id="s1-s6-t2" name="Network Communication Continues After Publisher Crash (TCP)" line="34">
<kw name="Run Network Communication Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-25T13:35:54.723994" level="INFO">${IMAGE} = sub_crash_network_tcp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-25T13:35:54.723855" elapsed="0.000161"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-25T13:35:54.724173" level="INFO">${TOPIC} = test_topic</msg>
<var>${TOPIC}</var>
<arg>test_topic</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-25T13:35:54.724090" elapsed="0.000101"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-25T13:35:54.724369" level="INFO">${CRASH_SUB} = crash_sub_network_tcp</msg>
<var>${CRASH_SUB}</var>
<arg>crash_sub_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-25T13:35:54.724260" elapsed="0.000127"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-25T13:35:54.724557" level="INFO">${TEST_SUB} = test_sub_network_tcp</msg>
<var>${TEST_SUB}</var>
<arg>test_sub_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-25T13:35:54.724453" elapsed="0.000121"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-25T13:35:54.724791" level="INFO">${TEST_PUB} = test_pub_network_tcp</msg>
<var>${TEST_PUB}</var>
<arg>test_pub_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-25T13:35:54.724665" elapsed="0.000144"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Starting subscriber crash continuity test with ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-25T13:35:54.724915" elapsed="0.000125"/>
</kw>
<kw name="Create Docker Network" owner="MyDockerLibrary">
<arg>${NETWORK}</arg>
<status status="PASS" start="2025-06-25T13:35:54.725136" elapsed="0.006909"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${CRASH_SUB}</arg>
<arg>${IMAGE}</arg>
<arg>crash_subscriber</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${CRASH_SUB}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-06-25T13:35:54.732144" elapsed="0.126459"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${TEST_SUB}</arg>
<arg>${IMAGE}</arg>
<arg>test_subscriber</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${TEST_SUB}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-06-25T13:35:54.858839" elapsed="0.117812"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${TEST_PUB}</arg>
<arg>${IMAGE}</arg>
<arg>test_publisher</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${TEST_PUB}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-06-25T13:35:54.976834" elapsed="0.129415"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${CRASH_SUB}</arg>
<status status="PASS" start="2025-06-25T13:35:55.106454" elapsed="7.225689"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${TEST_SUB}</arg>
<status status="PASS" start="2025-06-25T13:36:02.332353" elapsed="26.709814"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${TEST_PUB}</arg>
<status status="PASS" start="2025-06-25T13:36:29.042356" elapsed="0.001442"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-06-25T13:36:29.046289" level="INFO">${test_sub_logs} = [Entrypoint] Starting crash publisher in mode network_tcp

[Test_Subscriber] Waiting for messages...
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Receive...</msg>
<var>${test_sub_logs}</var>
<arg>${TEST_SUB}</arg>
<status status="PASS" start="2025-06-25T13:36:29.043892" elapsed="0.002424"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[SUBSCRIBER CONTAINER OUTPUT]\n${test_sub_logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-25T13:36:29.046418" elapsed="0.000169"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-06-25T13:36:29.049138" level="INFO">${crash_sub_logs} = [Entrypoint] Starting crash subscriber in mode network_tcp

[Crash Subscriber] Registered and sleeping before crash...

[Crash_Subscriber] Received value: 43
[Crash_Subscriber] Received value: 43
[Cra...</msg>
<var>${crash_sub_logs}</var>
<arg>${CRASH_SUB}</arg>
<status status="PASS" start="2025-06-25T13:36:29.046710" elapsed="0.002454"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[CRASH SUBSCRIBER CONTAINER OUTPUT]\n${crash_sub_logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-25T13:36:29.049254" elapsed="0.000145"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-06-25T13:36:29.050437" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>${TEST_SUB}</arg>
<status status="PASS" start="2025-06-25T13:36:29.049510" elapsed="0.000950"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-06-25T13:36:29.050707" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Communication failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-06-25T13:36:29.050544" elapsed="0.000210"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Network Communication after one Subscriber crash ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-06-25T13:36:29.050831" elapsed="0.000158"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${CRASH_SUB}</arg>
<status status="PASS" start="2025-06-25T13:36:29.051088" elapsed="0.005154"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${TEST_SUB}</arg>
<status status="PASS" start="2025-06-25T13:36:29.056328" elapsed="0.005398"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${TEST_PUB}</arg>
<status status="PASS" start="2025-06-25T13:36:29.061818" elapsed="0.005213"/>
</kw>
<arg>network_tcp</arg>
<arg>network</arg>
<status status="PASS" start="2025-06-25T13:35:54.723643" elapsed="34.343451"/>
</kw>
<tag>pub_crash_network_tcp</tag>
<status status="PASS" start="2025-06-25T13:35:54.723239" elapsed="34.343950"/>
</test>
<test id="s1-s6-t3" name="Local Communication Continues After Subscriber Crash (SHM)" line="38">
<kw name="Run Local Communication Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-25T13:36:29.068907" level="INFO">${IMAGE} = sub_crash_local_shm</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-25T13:36:29.068759" elapsed="0.000171"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-25T13:36:29.069116" level="INFO">${CONTAINER} = local_all_local_shm</msg>
<var>${CONTAINER}</var>
<arg>local_all_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-25T13:36:29.069005" elapsed="0.000130"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Starting local test container with ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-25T13:36:29.069204" elapsed="0.000121"/>
</kw>
<kw name="Create Docker Network" owner="MyDockerLibrary">
<arg>${NETWORK}</arg>
<status status="PASS" start="2025-06-25T13:36:29.069417" elapsed="0.007092"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<arg>${IMAGE}</arg>
<arg>local_all</arg>
<arg>${layer_tag}</arg>
<status status="PASS" start="2025-06-25T13:36:29.076683" elapsed="0.130694"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-06-25T13:37:03.270831" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-06-25T13:36:29.207579" elapsed="34.063305"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-06-25T13:37:03.271217" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Local test failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-06-25T13:37:03.271028" elapsed="0.000239"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-06-25T13:37:03.274449" level="INFO">${logs} = [Entrypoint] Starting local test (pub/sub/monitor) in mode local_shm
Shared memory monitoring is enabled (domain: ecal_mon - queue size: 1024)
[Publisher] Waiting for at least 2 subscriber(s) on topic...</msg>
<var>${logs}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-06-25T13:37:03.271351" elapsed="0.003123"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n\n[LOCAL TEST CONTAINER OUTPUT]\n\n${logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-25T13:37:03.274559" elapsed="0.000185"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Local Communication after one Subscriber crash ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-06-25T13:37:03.274837" elapsed="0.000177"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-06-25T13:37:03.275093" elapsed="0.005415"/>
</kw>
<arg>local_shm</arg>
<status status="PASS" start="2025-06-25T13:36:29.068519" elapsed="34.212064"/>
</kw>
<tag>sub_crash_local_shm</tag>
<status status="PASS" start="2025-06-25T13:36:29.068158" elapsed="34.212599"/>
</test>
<test id="s1-s6-t4" name="Local Communication Continues After Subscriber Crash (UDP)" line="42">
<kw name="Run Local Communication Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-25T13:37:03.281935" level="INFO">${IMAGE} = sub_crash_local_udp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-25T13:37:03.281794" elapsed="0.000163"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-25T13:37:03.282141" level="INFO">${CONTAINER} = local_all_local_udp</msg>
<var>${CONTAINER}</var>
<arg>local_all_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-25T13:37:03.282030" elapsed="0.000130"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Starting local test container with ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-25T13:37:03.282227" elapsed="0.000118"/>
</kw>
<kw name="Create Docker Network" owner="MyDockerLibrary">
<arg>${NETWORK}</arg>
<status status="PASS" start="2025-06-25T13:37:03.282441" elapsed="0.006499"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<arg>${IMAGE}</arg>
<arg>local_all</arg>
<arg>${layer_tag}</arg>
<status status="PASS" start="2025-06-25T13:37:03.289052" elapsed="0.110056"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-06-25T13:37:37.461345" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-06-25T13:37:03.399315" elapsed="34.062084"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-06-25T13:37:37.461871" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Local test failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-06-25T13:37:37.461588" elapsed="0.000354"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-06-25T13:37:37.465054" level="INFO">${logs} = [Entrypoint] Starting local test (pub/sub/monitor) in mode local_udp

[Crash Subscriber] Registered and sleeping before crash...


[Test_Subscriber] Waiting for messages...
[Publisher] Waiting for at ...</msg>
<var>${logs}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-06-25T13:37:37.462061" elapsed="0.003021"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n\n[LOCAL TEST CONTAINER OUTPUT]\n\n${logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-25T13:37:37.465171" elapsed="0.000170"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Local Communication after one Subscriber crash ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-06-25T13:37:37.465449" elapsed="0.000258"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-06-25T13:37:37.465811" elapsed="0.006500"/>
</kw>
<arg>local_udp</arg>
<status status="PASS" start="2025-06-25T13:37:03.281574" elapsed="34.190799"/>
</kw>
<tag>sub_crash_local_udp</tag>
<status status="PASS" start="2025-06-25T13:37:03.281230" elapsed="34.191238"/>
</test>
<test id="s1-s6-t5" name="Local Communication Continues After Subscriber Crash (TCP)" line="46">
<kw name="Run Local Communication Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-25T13:37:37.473665" level="INFO">${IMAGE} = sub_crash_local_tcp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-25T13:37:37.473494" elapsed="0.000196"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-25T13:37:37.473884" level="INFO">${CONTAINER} = local_all_local_tcp</msg>
<var>${CONTAINER}</var>
<arg>local_all_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-25T13:37:37.473768" elapsed="0.000134"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Starting local test container with ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-25T13:37:37.473972" elapsed="0.000118"/>
</kw>
<kw name="Create Docker Network" owner="MyDockerLibrary">
<arg>${NETWORK}</arg>
<status status="PASS" start="2025-06-25T13:37:37.474188" elapsed="0.006472"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<arg>${IMAGE}</arg>
<arg>local_all</arg>
<arg>${layer_tag}</arg>
<status status="PASS" start="2025-06-25T13:37:37.480765" elapsed="0.117816"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-06-25T13:38:11.664172" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-06-25T13:37:37.598821" elapsed="34.065399"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-06-25T13:38:11.664570" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Local test failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-06-25T13:38:11.664379" elapsed="0.000267"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-06-25T13:38:11.667439" level="INFO">${logs} = [Entrypoint] Starting local test (pub/sub/monitor) in mode local_tcp
[Publisher] Waiting for at least 2 subscriber(s) on topic: test_topic

[Crash Subscriber] Registered and sleeping before crash...

...</msg>
<var>${logs}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-06-25T13:38:11.664754" elapsed="0.002710"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n\n[LOCAL TEST CONTAINER OUTPUT]\n\n${logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-25T13:38:11.667558" elapsed="0.000202"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Local Communication after one Subscriber crash ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-06-25T13:38:11.667858" elapsed="0.000200"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-06-25T13:38:11.668169" elapsed="0.005213"/>
</kw>
<arg>local_tcp</arg>
<status status="PASS" start="2025-06-25T13:37:37.473301" elapsed="34.200143"/>
</kw>
<tag>sub_crash_local_tcp</tag>
<status status="PASS" start="2025-06-25T13:37:37.472943" elapsed="34.200591"/>
</test>
<status status="PASS" start="2025-06-25T13:35:08.007768" elapsed="183.666476"/>
</suite>
<suite id="s1-s7" name="Sub Send Crash" source="/home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/sub_send_crash/robottests/sub_send_crash.robot">
<kw name="Init Test Context" type="SETUP">
<kw name="Set Test Context" owner="GlobalPathsLibrary">
<arg>sub_send_crash</arg>
<arg>sub_send_crash</arg>
<doc>Sets the test folder (e.g. basic_pub_sub or message_validation) and tag prefix (e.g. basic_pub_sub).
Should be called once in Suite Setup if you're using non-default test cases.</doc>
<status status="PASS" start="2025-06-25T13:38:11.677488" elapsed="0.000108"/>
</kw>
<kw name="Get Build Script Path" owner="GlobalPathsLibrary">
<msg time="2025-06-25T13:38:11.677806" level="INFO">${build} = /home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/sub_send_crash/scripts/build_images.sh</msg>
<var>${build}</var>
<status status="PASS" start="2025-06-25T13:38:11.677710" elapsed="0.000117"/>
</kw>
<kw name="Get Network Name" owner="GlobalPathsLibrary">
<msg time="2025-06-25T13:38:11.678021" level="INFO">${net} = ecal_test_net</msg>
<var>${net}</var>
<status status="PASS" start="2025-06-25T13:38:11.677895" elapsed="0.000146"/>
</kw>
<kw name="Get Build Script Args" owner="GlobalPathsLibrary">
<msg time="2025-06-25T13:38:11.678192" level="INFO">${args} = ['sub_send_crash']</msg>
<var>${args}</var>
<status status="PASS" start="2025-06-25T13:38:11.678110" elapsed="0.000100"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-06-25T13:38:11.678421" level="INFO">${BUILD_SCRIPT} = /home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/sub_send_crash/scripts/build_images.sh</msg>
<arg>${BUILD_SCRIPT}</arg>
<arg>${build}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-06-25T13:38:11.678286" elapsed="0.000165"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-06-25T13:38:11.678673" level="INFO">${NETWORK} = ecal_test_net</msg>
<arg>${NETWORK}</arg>
<arg>${net}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-06-25T13:38:11.678524" elapsed="0.000182"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>[SETUP] Building image...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-25T13:38:11.678778" elapsed="0.000092"/>
</kw>
<kw name="Run Process" owner="Process">
<msg time="2025-06-25T13:38:11.679156" level="INFO">Starting process:
/home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/sub_send_crash/scripts/build_images.sh sub_send_crash</msg>
<msg time="2025-06-25T13:38:11.679522" level="INFO">Waiting for process to complete.</msg>
<msg time="2025-06-25T13:38:20.852814" level="INFO">Process completed.</msg>
<msg time="2025-06-25T13:38:20.852981" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<var>${result}</var>
<arg>${BUILD_SCRIPT}</arg>
<arg>@{args}</arg>
<doc>Runs a process and waits for it to complete.</doc>
<status status="PASS" start="2025-06-25T13:38:11.678983" elapsed="9.174023"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-06-25T13:38:20.853608" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${result.rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-06-25T13:38:20.853158" elapsed="0.000545"/>
</kw>
<kw name="Create Docker Network" owner="MyDockerLibrary">
<arg>${NETWORK}</arg>
<status status="PASS" start="2025-06-25T13:38:20.853788" elapsed="0.007302"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-06-25T13:38:23.861409" level="INFO">Slept 3 seconds.</msg>
<arg>3s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-06-25T13:38:20.861195" elapsed="3.000320"/>
</kw>
<status status="PASS" start="2025-06-25T13:38:11.677333" elapsed="12.184266"/>
</kw>
<test id="s1-s7-t1" name="Crash During Reception (SHM)" line="36">
<kw name="Run Local Crash Receive Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-25T13:38:23.862517" level="INFO">${IMAGE} = sub_send_crash_local_shm</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-25T13:38:23.862360" elapsed="0.000178"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-25T13:38:23.862755" level="INFO">${CONTAINER} = local_all_local_shm</msg>
<var>${CONTAINER}</var>
<arg>local_all_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-25T13:38:23.862614" elapsed="0.000159"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Starting crash test in LOCAL mode: ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-25T13:38:23.862844" elapsed="0.000136"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<arg>${IMAGE}</arg>
<arg>local_all</arg>
<arg>${layer_tag}</arg>
<arg>test_topic</arg>
<arg>${CONTAINER}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-06-25T13:38:23.863073" elapsed="0.131264"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-06-25T13:38:58.994946" level="INFO">Slept 35 seconds.</msg>
<arg>35s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-06-25T13:38:23.994541" elapsed="35.000512"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-06-25T13:38:58.997930" level="INFO">${logs} = [Entrypoint] Starting all processes locally in one container (mode local_shm)
Shared memory monitoring is enabled (domain: ecal_mon - queue size: 1024)
[Publisher] Prepared 100MB message.
[Publisher] ...</msg>
<var>${logs}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-06-25T13:38:58.995204" elapsed="0.002754"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[LOCAL TEST CONTAINER OUTPUT]\n${logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-25T13:38:58.998052" elapsed="0.000170"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-06-25T13:38:58.999493" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-06-25T13:38:58.998331" elapsed="0.001186"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-06-25T13:38:58.999764" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Local container failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-06-25T13:38:58.999598" elapsed="0.000211"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-06-25T13:38:59.001821" level="INFO">${logs} = [Entrypoint] Starting all processes locally in one container (mode local_shm)
Shared memory monitoring is enabled (domain: ecal_mon - queue size: 1024)
[Publisher] Prepared 100MB message.
[Publisher] ...</msg>
<var>${logs}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-06-25T13:38:58.999887" elapsed="0.001958"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Local Crash Receive Test ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-06-25T13:38:59.001924" elapsed="0.000147"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-06-25T13:38:59.002167" elapsed="0.005698"/>
</kw>
<arg>local_shm</arg>
<status status="PASS" start="2025-06-25T13:38:23.862132" elapsed="35.145790"/>
</kw>
<tag>crash_receive_local_shm</tag>
<status status="PASS" start="2025-06-25T13:38:23.861692" elapsed="35.146317"/>
</test>
<test id="s1-s7-t2" name="Crash with Zero Copy Enabled in Reception (SHM)" line="40">
<kw name="Run with Zero Copy Enabled Local Crash Receive Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-25T13:38:59.009205" level="INFO">${IMAGE} = sub_send_crash_local_shm</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-25T13:38:59.009069" elapsed="0.000156"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-25T13:38:59.009407" level="INFO">${CONTAINER} = zero_copy_local_all_local_shm</msg>
<var>${CONTAINER}</var>
<arg>zero_copy_local_all_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-25T13:38:59.009298" elapsed="0.000127"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Starting crash test with zero copy enabled in LOCAL mode: ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-25T13:38:59.009494" elapsed="0.000116"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<arg>${IMAGE}</arg>
<arg>zero_copy_local_all</arg>
<arg>${layer_tag}</arg>
<arg>test_topic</arg>
<arg>${CONTAINER}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-06-25T13:38:59.009777" elapsed="0.134142"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-06-25T13:39:34.144369" level="INFO">Slept 35 seconds.</msg>
<arg>35s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-06-25T13:38:59.144082" elapsed="35.000404"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-06-25T13:39:34.147499" level="INFO">${logs} = [Entrypoint] Starting all processes with Zero-Copy Publisher in one container (mode local_shm)
Shared memory monitoring is enabled (domain: ecal_mon - queue size: 1024)
[Publisher] Prepared 50MB messa...</msg>
<var>${logs}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-06-25T13:39:34.144678" elapsed="0.002849"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[LOCAL SHM WITH ZERO COPY TEST CONTAINER OUTPUT]\n${logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-25T13:39:34.147661" elapsed="0.000179"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-06-25T13:39:34.149044" level="INFO">${exit_code} = 1</msg>
<var>${exit_code}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-06-25T13:39:34.147942" elapsed="0.001125"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-06-25T13:39:34.149287" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg time="2025-06-25T13:39:34.149372" level="FAIL">Local container with zero copy shm failed!: 1 != 0</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Local container with zero copy shm failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="FAIL" start="2025-06-25T13:39:34.149152" elapsed="0.000277">Local container with zero copy shm failed!: 1 != 0</status>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<var>${logs}</var>
<arg>${CONTAINER}</arg>
<status status="NOT RUN" start="2025-06-25T13:39:34.149514" elapsed="0.000016"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Local Crash with zero copy enabled Test ${layer_tag}</arg>
<arg>${True}</arg>
<status status="NOT RUN" start="2025-06-25T13:39:34.149590" elapsed="0.000013"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<status status="NOT RUN" start="2025-06-25T13:39:34.149694" elapsed="0.000015"/>
</kw>
<arg>local_shm</arg>
<status status="FAIL" start="2025-06-25T13:38:59.008879" elapsed="35.140910">Local container with zero copy shm failed!: 1 != 0</status>
</kw>
<tag>zero_copy_crash_receive_local_shm</tag>
<status status="FAIL" start="2025-06-25T13:38:59.008517" elapsed="35.141379">Local container with zero copy shm failed!: 1 != 0</status>
</test>
<test id="s1-s7-t3" name="Crash During Reception (TCP)" line="49">
<kw name="Run Local Crash Receive Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-25T13:39:34.151049" level="INFO">${IMAGE} = sub_send_crash_local_tcp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-25T13:39:34.150907" elapsed="0.000162"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-25T13:39:34.151250" level="INFO">${CONTAINER} = local_all_local_tcp</msg>
<var>${CONTAINER}</var>
<arg>local_all_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-25T13:39:34.151142" elapsed="0.000125"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Starting crash test in LOCAL mode: ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-25T13:39:34.151333" elapsed="0.000125"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<arg>${IMAGE}</arg>
<arg>local_all</arg>
<arg>${layer_tag}</arg>
<arg>test_topic</arg>
<arg>${CONTAINER}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-06-25T13:39:34.151546" elapsed="0.134767"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-06-25T13:40:09.286793" level="INFO">Slept 35 seconds.</msg>
<arg>35s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-06-25T13:39:34.286481" elapsed="35.000435"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-06-25T13:40:09.290118" level="INFO">${logs} = [Entrypoint] Starting all processes locally in one container (mode local_tcp)
[Publisher] Prepared 100MB message.
[Publisher] Waiting for at least 2 subscriber(s) on topic: test_topic
1750858776289 ms...</msg>
<var>${logs}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-06-25T13:40:09.287087" elapsed="0.003062"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[LOCAL TEST CONTAINER OUTPUT]\n${logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-25T13:40:09.290265" elapsed="0.000219"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-06-25T13:40:09.291912" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-06-25T13:40:09.290598" elapsed="0.001340"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-06-25T13:40:09.292165" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Local container failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-06-25T13:40:09.292024" elapsed="0.000185"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-06-25T13:40:09.294668" level="INFO">${logs} = [Entrypoint] Starting all processes locally in one container (mode local_tcp)
[Publisher] Prepared 100MB message.
[Publisher] Waiting for at least 2 subscriber(s) on topic: test_topic
1750858776289 ms...</msg>
<var>${logs}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-06-25T13:40:09.292287" elapsed="0.002410"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Local Crash Receive Test ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-06-25T13:40:09.294786" elapsed="0.000161"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-06-25T13:40:09.295048" elapsed="0.005127"/>
</kw>
<arg>local_tcp</arg>
<status status="PASS" start="2025-06-25T13:39:34.150718" elapsed="35.149521"/>
</kw>
<tag>crash_receive_local_tcp</tag>
<status status="PASS" start="2025-06-25T13:39:34.150364" elapsed="35.149968"/>
</test>
<test id="s1-s7-t4" name="Crash During Reception (Network UDP)" line="53">
<kw name="Run Network Crash Receive Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-25T13:40:09.301722" level="INFO">${IMAGE} = sub_send_crash_network_udp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-25T13:40:09.301534" elapsed="0.000211"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-25T13:40:09.301910" level="INFO">${TOPIC} = test_topic</msg>
<var>${TOPIC}</var>
<arg>test_topic</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-25T13:40:09.301822" elapsed="0.000106"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-25T13:40:09.302109" level="INFO">${SUB_OK} = sub_ok_network_udp</msg>
<var>${SUB_OK}</var>
<arg>sub_ok_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-25T13:40:09.301997" elapsed="0.000129"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-25T13:40:09.302361" level="INFO">${SUB_CRASH} = sub_crash_network_udp</msg>
<var>${SUB_CRASH}</var>
<arg>sub_crash_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-25T13:40:09.302241" elapsed="0.000138"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-25T13:40:09.302549" level="INFO">${PUBLISHER} = pub_network_udp</msg>
<var>${PUBLISHER}</var>
<arg>pub_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-25T13:40:09.302446" elapsed="0.000120"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Starting crash test in NETWORK mode: ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-25T13:40:09.302652" elapsed="0.000135"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${SUB_OK}</arg>
<arg>${IMAGE}</arg>
<arg>test_subscriber</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${SUB_OK}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-06-25T13:40:09.302899" elapsed="0.138869"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${SUB_CRASH}</arg>
<arg>${IMAGE}</arg>
<arg>crash_subscriber</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${SUB_CRASH}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-06-25T13:40:09.441959" elapsed="0.127932"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${PUBLISHER}</arg>
<arg>${IMAGE}</arg>
<arg>large_publisher</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${PUBLISHER}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-06-25T13:40:09.570080" elapsed="0.138172"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${SUB_OK}</arg>
<status status="PASS" start="2025-06-25T13:40:09.708464" elapsed="30.805778"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${SUB_CRASH}</arg>
<status status="PASS" start="2025-06-25T13:40:40.514406" elapsed="0.001474"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${PUBLISHER}</arg>
<status status="PASS" start="2025-06-25T13:40:40.515976" elapsed="0.001037"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-06-25T13:40:40.519298" level="INFO">${log1} = [Entrypoint] Starting stable subscriber in mode network_udp
[Test_Sub] Ready and waiting...
[Test_Sub] Received 52428800 bytes (message 1)
[Test_Sub] Received 52428800 bytes (message 2)
[Test_Sub] Rec...</msg>
<var>${log1}</var>
<arg>${SUB_OK}</arg>
<status status="PASS" start="2025-06-25T13:40:40.517102" elapsed="0.002221"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-06-25T13:40:40.521474" level="INFO">${log2} = [Entrypoint] Starting crashing subscriber in mode network_udp
[Crash_Sub] Listening to topic 'test_topic' in mode 'network_udp'
[Crash_Sub] Received 52428800 bytes
[Crash_Sub] Simulating crash after 2...</msg>
<var>${log2}</var>
<arg>${SUB_CRASH}</arg>
<status status="PASS" start="2025-06-25T13:40:40.519406" elapsed="0.002095"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-06-25T13:40:40.523652" level="INFO">${log3} = [Entrypoint] Starting large publisher in mode network_udp
[Publisher] Prepared 100MB message.
[Publisher] Waiting for at least 2 subscriber(s) on topic: test_topic
[Publisher] Found 2 subscriber(s). P...</msg>
<var>${log3}</var>
<arg>${PUBLISHER}</arg>
<status status="PASS" start="2025-06-25T13:40:40.521588" elapsed="0.002093"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[LOG: SUBSCRIBER]\n${log1}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-25T13:40:40.523774" elapsed="0.000168"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[LOG: CRASH_SUBSCRIBER]\n${log2}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-25T13:40:40.524057" elapsed="0.000165"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[LOG: PUBLISHER]\n${log3}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-25T13:40:40.524329" elapsed="0.000163"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-06-25T13:40:40.525778" level="INFO">${exit1} = 0</msg>
<var>${exit1}</var>
<arg>${SUB_OK}</arg>
<status status="PASS" start="2025-06-25T13:40:40.524588" elapsed="0.001216"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-06-25T13:40:40.526044" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit1}</arg>
<arg>0</arg>
<arg>Stable subscriber failed unexpectedly!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-06-25T13:40:40.525898" elapsed="0.000192"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Network Crash Receive Test ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-06-25T13:40:40.526167" elapsed="0.000158"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${SUB_OK}</arg>
<status status="PASS" start="2025-06-25T13:40:40.526420" elapsed="0.005942"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${SUB_CRASH}</arg>
<status status="PASS" start="2025-06-25T13:40:40.532513" elapsed="0.005680"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${PUBLISHER}</arg>
<status status="PASS" start="2025-06-25T13:40:40.538320" elapsed="0.008025"/>
</kw>
<arg>network_udp</arg>
<arg>network</arg>
<status status="PASS" start="2025-06-25T13:40:09.301318" elapsed="31.245105"/>
</kw>
<tag>crash_receive_network_udp</tag>
<status status="PASS" start="2025-06-25T13:40:09.300930" elapsed="31.245598"/>
</test>
<test id="s1-s7-t5" name="Crash During Reception (Network TCP)" line="57">
<kw name="Run Network Crash Receive Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-25T13:40:40.548655" level="INFO">${IMAGE} = sub_send_crash_network_tcp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-25T13:40:40.548473" elapsed="0.000209"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-25T13:40:40.548851" level="INFO">${TOPIC} = test_topic</msg>
<var>${TOPIC}</var>
<arg>test_topic</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-25T13:40:40.548761" elapsed="0.000108"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-25T13:40:40.549045" level="INFO">${SUB_OK} = sub_ok_network_tcp</msg>
<var>${SUB_OK}</var>
<arg>sub_ok_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-25T13:40:40.548938" elapsed="0.000125"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-25T13:40:40.549235" level="INFO">${SUB_CRASH} = sub_crash_network_tcp</msg>
<var>${SUB_CRASH}</var>
<arg>sub_crash_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-25T13:40:40.549130" elapsed="0.000122"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-25T13:40:40.549431" level="INFO">${PUBLISHER} = pub_network_tcp</msg>
<var>${PUBLISHER}</var>
<arg>pub_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-25T13:40:40.549324" elapsed="0.000124"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Starting crash test in NETWORK mode: ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-25T13:40:40.549516" elapsed="0.000151"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${SUB_OK}</arg>
<arg>${IMAGE}</arg>
<arg>test_subscriber</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${SUB_OK}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-06-25T13:40:40.549818" elapsed="0.135261"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${SUB_CRASH}</arg>
<arg>${IMAGE}</arg>
<arg>crash_subscriber</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${SUB_CRASH}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-06-25T13:40:40.685297" elapsed="0.129883"/>
</kw>
<kw name="Start Container" owner="MyDockerLibrary">
<arg>${PUBLISHER}</arg>
<arg>${IMAGE}</arg>
<arg>large_publisher</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${PUBLISHER}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-06-25T13:40:40.815391" elapsed="0.130679"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${SUB_OK}</arg>
<status status="PASS" start="2025-06-25T13:40:40.946260" elapsed="30.809318"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${SUB_CRASH}</arg>
<status status="PASS" start="2025-06-25T13:41:11.755803" elapsed="0.001472"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<arg>${PUBLISHER}</arg>
<status status="PASS" start="2025-06-25T13:41:11.757372" elapsed="0.001063"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-06-25T13:41:11.760825" level="INFO">${log1} = [Entrypoint] Starting stable subscriber in mode network_tcp
[Test_Sub] Ready and waiting...
[Test_Sub] Received 52428800 bytes (message 1)
[Test_Sub] Received 52428800 bytes (message 2)
[Test_Sub] Rec...</msg>
<var>${log1}</var>
<arg>${SUB_OK}</arg>
<status status="PASS" start="2025-06-25T13:41:11.758522" elapsed="0.002330"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-06-25T13:41:11.763067" level="INFO">${log2} = [Entrypoint] Starting crashing subscriber in mode network_tcp
[Crash_Sub] Listening to topic 'test_topic' in mode 'network_tcp'
[Crash_Sub] Received 52428800 bytes
[Crash_Sub] Simulating crash after 2...</msg>
<var>${log2}</var>
<arg>${SUB_CRASH}</arg>
<status status="PASS" start="2025-06-25T13:41:11.760937" elapsed="0.002156"/>
</kw>
<kw name="Get Container Logs" owner="MyDockerLibrary">
<msg time="2025-06-25T13:41:11.765249" level="INFO">${log3} = [Entrypoint] Starting large publisher in mode network_tcp
[Publisher] Prepared 100MB message.
[Publisher] Waiting for at least 2 subscriber(s) on topic: test_topic
1750858841687 ms | 20d82ea6233c | la...</msg>
<var>${log3}</var>
<arg>${PUBLISHER}</arg>
<status status="PASS" start="2025-06-25T13:41:11.763176" elapsed="0.002098"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[LOG: SUBSCRIBER]\n${log1}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-25T13:41:11.765361" elapsed="0.000161"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[LOG: CRASH_SUBSCRIBER]\n${log2}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-25T13:41:11.765653" elapsed="0.000153"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[LOG: PUBLISHER]\n${log3}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-06-25T13:41:11.765916" elapsed="0.000156"/>
</kw>
<kw name="Wait For Container Exit" owner="MyDockerLibrary">
<msg time="2025-06-25T13:41:11.767193" level="INFO">${exit1} = 0</msg>
<var>${exit1}</var>
<arg>${SUB_OK}</arg>
<status status="PASS" start="2025-06-25T13:41:11.766176" elapsed="0.001048"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-06-25T13:41:11.767517" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit1}</arg>
<arg>0</arg>
<arg>Stable subscriber failed unexpectedly!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-06-25T13:41:11.767339" elapsed="0.000240"/>
</kw>
<kw name="Log Test Summary" owner="MyDockerLibrary">
<arg>Network Crash Receive Test ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-06-25T13:41:11.767708" elapsed="0.000186"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${SUB_OK}</arg>
<status status="PASS" start="2025-06-25T13:41:11.767989" elapsed="0.005102"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${SUB_CRASH}</arg>
<status status="PASS" start="2025-06-25T13:41:11.773176" elapsed="0.008093"/>
</kw>
<kw name="Stop Container" owner="MyDockerLibrary">
<arg>${PUBLISHER}</arg>
<status status="PASS" start="2025-06-25T13:41:11.781383" elapsed="0.005099"/>
</kw>
<arg>network_tcp</arg>
<arg>network</arg>
<status status="PASS" start="2025-06-25T13:40:40.548235" elapsed="31.238312"/>
</kw>
<tag>crash_receive_network_tcp</tag>
<status status="PASS" start="2025-06-25T13:40:40.547811" elapsed="31.238866"/>
</test>
<status status="FAIL" start="2025-06-25T13:38:11.674828" elapsed="180.112739"/>
</suite>
<status status="FAIL" start="2025-06-25T13:28:58.180470" elapsed="733.607820"/>
</suite>
<statistics>
<total>
<stat pass="22" fail="4" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">basic_pub_sub_local_shm</stat>
<stat pass="1" fail="0" skip="0">basic_pub_sub_local_tcp</stat>
<stat pass="1" fail="0" skip="0">basic_pub_sub_local_udp</stat>
<stat pass="1" fail="0" skip="0">basic_pub_sub_network_tcp</stat>
<stat pass="1" fail="0" skip="0">basic_pub_sub_network_udp</stat>
<stat pass="1" fail="0" skip="0">crash_receive_local_shm</stat>
<stat pass="1" fail="0" skip="0">crash_receive_local_tcp</stat>
<stat pass="1" fail="0" skip="0">crash_receive_network_tcp</stat>
<stat pass="1" fail="0" skip="0">crash_receive_network_udp</stat>
<stat pass="0" fail="1" skip="0">message_validation_malformed</stat>
<stat pass="0" fail="1" skip="0">message_validation_valid</stat>
<stat pass="0" fail="1" skip="0">multi_pub_sub_local_shm</stat>
<stat pass="1" fail="0" skip="0">multi_pub_sub_local_tcp</stat>
<stat pass="1" fail="0" skip="0">multi_pub_sub_local_udp</stat>
<stat pass="1" fail="0" skip="0">multi_pub_sub_network_tcp</stat>
<stat pass="1" fail="0" skip="0">multi_pub_sub_network_udp</stat>
<stat pass="1" fail="0" skip="0">network_crash_test</stat>
<stat pass="1" fail="0" skip="0">pub_crash_local_shm</stat>
<stat pass="2" fail="0" skip="0">pub_crash_network_tcp</stat>
<stat pass="1" fail="0" skip="0">pub_crash_network_udp</stat>
<stat pass="1" fail="0" skip="0">sub_crash_local_shm</stat>
<stat pass="1" fail="0" skip="0">sub_crash_local_tcp</stat>
<stat pass="1" fail="0" skip="0">sub_crash_local_udp</stat>
<stat pass="1" fail="0" skip="0">sub_crash_network_udp</stat>
<stat pass="0" fail="1" skip="0">zero_copy_crash_receive_local_shm</stat>
</tag>
<suite>
<stat name="Basic Pub Sub &amp; Message Validation &amp; Multi Pub Sub &amp; Network Crash &amp; Pub Crash &amp; Sub Crash &amp; Sub Send Crash" id="s1" pass="22" fail="4" skip="0">Basic Pub Sub &amp; Message Validation &amp; Multi Pub Sub &amp; Network Crash &amp; Pub Crash &amp; Sub Crash &amp; Sub Send Crash</stat>
<stat name="Basic Pub Sub" id="s1-s1" pass="5" fail="0" skip="0">Basic Pub Sub &amp; Message Validation &amp; Multi Pub Sub &amp; Network Crash &amp; Pub Crash &amp; Sub Crash &amp; Sub Send Crash.Basic Pub Sub</stat>
<stat name="Message Validation" id="s1-s2" pass="0" fail="2" skip="0">Basic Pub Sub &amp; Message Validation &amp; Multi Pub Sub &amp; Network Crash &amp; Pub Crash &amp; Sub Crash &amp; Sub Send Crash.Message Validation</stat>
<stat name="Multi Pub Sub" id="s1-s3" pass="4" fail="1" skip="0">Basic Pub Sub &amp; Message Validation &amp; Multi Pub Sub &amp; Network Crash &amp; Pub Crash &amp; Sub Crash &amp; Sub Send Crash.Multi Pub Sub</stat>
<stat name="Network Crash" id="s1-s4" pass="1" fail="0" skip="0">Basic Pub Sub &amp; Message Validation &amp; Multi Pub Sub &amp; Network Crash &amp; Pub Crash &amp; Sub Crash &amp; Sub Send Crash.Network Crash</stat>
<stat name="Pub Crash" id="s1-s5" pass="3" fail="0" skip="0">Basic Pub Sub &amp; Message Validation &amp; Multi Pub Sub &amp; Network Crash &amp; Pub Crash &amp; Sub Crash &amp; Sub Send Crash.Pub Crash</stat>
<stat name="Sub Crash" id="s1-s6" pass="5" fail="0" skip="0">Basic Pub Sub &amp; Message Validation &amp; Multi Pub Sub &amp; Network Crash &amp; Pub Crash &amp; Sub Crash &amp; Sub Send Crash.Sub Crash</stat>
<stat name="Sub Send Crash" id="s1-s7" pass="4" fail="1" skip="0">Basic Pub Sub &amp; Message Validation &amp; Multi Pub Sub &amp; Network Crash &amp; Pub Crash &amp; Sub Crash &amp; Sub Send Crash.Sub Send Crash</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
