<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 7.3.2 (Python 3.12.3 on linux)" generated="2025-07-24T13:17:12.087234" rpa="false" schemaversion="5">
<suite id="s1" name="Basic Pub Sub &amp; Multi Pub Sub &amp; Network Crash &amp; Pub Crash &amp; Rpc N To N Test &amp; Rpc Ping Test &amp; Rpc Reconnect Test &amp; Sub Crash &amp; Sub Send Crash">
<suite id="s1-s1" name="Basic Pub Sub" source="/home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/basic_pub_sub/robottests/basic_pub_sub.robot">
<kw name="Init Test Context" type="SETUP">
<kw name="Set Test Context" owner="GlobalPathsLibrary">
<arg>basic_pub_sub</arg>
<arg>basic_pub_sub</arg>
<doc>Sets the test folder and tag prefix if it's a valid test case.
The folder must exist under integration_tests/ and contain typical test structure.</doc>
<status status="PASS" start="2025-07-24T13:17:12.209757" elapsed="0.000185"/>
</kw>
<kw name="Get Build Script Path" owner="GlobalPathsLibrary">
<msg time="2025-07-24T13:17:12.210170" level="INFO">${build} = /home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/basic_pub_sub/scripts/build_images.sh</msg>
<var>${build}</var>
<status status="PASS" start="2025-07-24T13:17:12.210056" elapsed="0.000140"/>
</kw>
<kw name="Get Network Name" owner="GlobalPathsLibrary">
<msg time="2025-07-24T13:17:12.210391" level="INFO">${net} = ecal_test_net</msg>
<var>${net}</var>
<status status="PASS" start="2025-07-24T13:17:12.210269" elapsed="0.000143"/>
</kw>
<kw name="Get Build Script Args" owner="GlobalPathsLibrary">
<msg time="2025-07-24T13:17:12.210562" level="INFO">${args} = ['basic_pub_sub']</msg>
<var>${args}</var>
<status status="PASS" start="2025-07-24T13:17:12.210479" elapsed="0.000101"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-07-24T13:17:12.210828" level="INFO">${BUILD_SCRIPT} = /home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/basic_pub_sub/scripts/build_images.sh</msg>
<arg>${BUILD_SCRIPT}</arg>
<arg>${build}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-07-24T13:17:12.210663" elapsed="0.000197"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-07-24T13:17:12.211065" level="INFO">${NETWORK} = ecal_test_net</msg>
<arg>${NETWORK}</arg>
<arg>${net}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-07-24T13:17:12.210939" elapsed="0.000155"/>
</kw>
<kw name="Get Test Description" owner="GlobalPathsLibrary">
<msg time="2025-07-24T13:17:12.211343" level="INFO">${desc} = This test checks basic communication between a single publisher and a single subscriber.

Test Setup:
- The publisher sends 4 messages, each 0.2 MB in size, on a single topic.
- The subscriber listens...</msg>
<var>${desc}</var>
<doc>Reads the *** Comments *** section from the .robot file and returns it as a string.</doc>
<status status="PASS" start="2025-07-24T13:17:12.211160" elapsed="0.000204"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-24T13:17:12.211533" level="INFO">This test checks basic communication between a single publisher and a single subscriber.

Test Setup:
- The publisher sends 4 messages, each 0.2 MB in size, on a single topic.
- The subscriber listens on that topic for 6 seconds and counts received messages.

Covered eCAL modes:
- local_shm
- local_udp
- local_tcp
- network_udp
- network_tcp

Goals:
- Ensure that basic 1:1 communication works reliably across all transport modes.
- Validate correct transmission of payloads (200 KB).

Success Criteria:
- The subscriber receives exactly 4 messages.
- If true, it exits with code 0.
- Otherwise, it exits with code 1.</msg>
<arg>${desc}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-24T13:17:12.211440" elapsed="0.000125"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>[SETUP] Building Docker image...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T13:17:12.211634" elapsed="0.000091"/>
</kw>
<kw name="Run Process" owner="Process">
<msg time="2025-07-24T13:17:12.212023" level="INFO">Starting process:
/home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/basic_pub_sub/scripts/build_images.sh basic_pub_sub</msg>
<msg time="2025-07-24T13:17:12.212465" level="INFO">Waiting for process to complete.</msg>
<msg time="2025-07-24T13:17:26.184249" level="INFO">Process completed.</msg>
<msg time="2025-07-24T13:17:26.184454" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<var>${result}</var>
<arg>${BUILD_SCRIPT}</arg>
<arg>@{args}</arg>
<doc>Runs a process and waits for it to complete.</doc>
<status status="PASS" start="2025-07-24T13:17:12.211828" elapsed="13.972652"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-24T13:17:26.185300" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${result.rc}</arg>
<arg>0</arg>
<arg>Failed to build Docker image!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-24T13:17:26.184636" elapsed="0.000728"/>
</kw>
<kw name="Create Docker Network" owner="DockerLibrary">
<arg>${NETWORK}</arg>
<status status="PASS" start="2025-07-24T13:17:26.185450" elapsed="0.043484"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-24T13:17:29.229420" level="INFO">Slept 3 seconds.</msg>
<arg>3s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-24T13:17:26.229109" elapsed="3.000431"/>
</kw>
<status status="PASS" start="2025-07-24T13:17:12.209269" elapsed="17.020376"/>
</kw>
<test id="s1-s1-t1" name="Basic Pub/Sub Local SHM" line="38">
<kw name="Run Local Pub Sub Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T13:17:29.230773" level="INFO">${IMAGE} = basic_pub_sub_local_shm</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T13:17:29.230603" elapsed="0.000192"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T13:17:29.230990" level="INFO">${CONTAINER} = basic_local_local_shm</msg>
<var>${CONTAINER}</var>
<arg>basic_local_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T13:17:29.230869" elapsed="0.000138"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Running local pub/sub test in mode: ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T13:17:29.231079" elapsed="0.000142"/>
</kw>
<kw name="Start Container" owner="DockerLibrary">
<arg>${CONTAINER}</arg>
<arg>${IMAGE}</arg>
<arg>local</arg>
<arg>${layer_tag}</arg>
<arg>test_topic</arg>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-24T13:17:29.231340" elapsed="0.116010"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-24T13:17:38.347872" level="INFO">Slept 9 seconds.</msg>
<arg>9s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-24T13:17:29.347543" elapsed="9.000445"/>
</kw>
<kw name="Get Container Logs" owner="DockerLibrary">
<msg time="2025-07-24T13:17:38.351572" level="INFO">${logs} = [Entrypoint] Starting subscriber and publisher in mode local_shm
Shared memory monitoring is enabled (domain: ecal_mon - queue size: 1024)
[Publisher] Waiting for at least 1 subscriber(s) on topic: te...</msg>
<var>${logs}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-24T13:17:38.348155" elapsed="0.003449"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[CONTAINER LOG: LOCAL PUB+SUB]\n${logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T13:17:38.351707" elapsed="0.000174"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-24T13:17:38.352144" level="INFO">
[CONTAINER LOG: LOCAL PUB+SUB]
[Entrypoint] Starting subscriber and publisher in mode local_shm
Shared memory monitoring is enabled (domain: ecal_mon - queue size: 1024)
[Publisher] Waiting for at least 1 subscriber(s) on topic: test_topic
[Publisher] Found 1 subscriber(s). Proceeding to send messages.
[Publisher] Send result: ✓, size: 209715 bytes
[Publisher] Send result: ✓, size: 209715 bytes
[Publisher] Send result: ✓, size: 209715 bytes
[Publisher] Send result: ✓, size: 209715 bytes
[Publisher] Finished sending.
Shared memory monitoring is enabled (domain: ecal_mon - queue size: 1024)


[Subscriber] Ready and waiting...

[Subscriber] Received 209715 bytes (message 1)
[Subscriber] Received 209715 bytes (message 2)
[Subscriber] Received 209715 bytes (message 3)
[Subscriber] Received 209715 bytes (message 4)
[Subscriber] Received 4 messages.
</msg>
<arg>\n[CONTAINER LOG: LOCAL PUB+SUB]\n${logs}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-24T13:17:38.351994" elapsed="0.000266"/>
</kw>
<kw name="Wait For Container Exit" owner="DockerLibrary">
<msg time="2025-07-24T13:17:38.353389" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-24T13:17:38.352369" elapsed="0.001042"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-24T13:17:38.353637" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Local communication test failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-24T13:17:38.353494" elapsed="0.000188"/>
</kw>
<kw name="Log Test Summary" owner="DockerLibrary">
<arg>Basic Pub/Sub Local ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-07-24T13:17:38.353755" elapsed="0.000134"/>
</kw>
<kw name="Stop Container" owner="DockerLibrary">
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-24T13:17:38.353983" elapsed="0.004988"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-24T13:17:39.359319" level="INFO">Slept 1 second.</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-24T13:17:38.359058" elapsed="1.000369"/>
</kw>
<arg>local_shm</arg>
<status status="PASS" start="2025-07-24T13:17:29.230338" elapsed="10.129180"/>
</kw>
<tag>basic_pub_sub_local_shm</tag>
<status status="PASS" start="2025-07-24T13:17:29.229735" elapsed="10.129912"/>
</test>
<test id="s1-s1-t2" name="Basic Pub/Sub Local UDP" line="42">
<kw name="Run Local Pub Sub Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T13:17:39.361059" level="INFO">${IMAGE} = basic_pub_sub_local_udp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T13:17:39.360911" elapsed="0.000168"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T13:17:39.361259" level="INFO">${CONTAINER} = basic_local_local_udp</msg>
<var>${CONTAINER}</var>
<arg>basic_local_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T13:17:39.361152" elapsed="0.000142"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Running local pub/sub test in mode: ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T13:17:39.361365" elapsed="0.000122"/>
</kw>
<kw name="Start Container" owner="DockerLibrary">
<arg>${CONTAINER}</arg>
<arg>${IMAGE}</arg>
<arg>local</arg>
<arg>${layer_tag}</arg>
<arg>test_topic</arg>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-24T13:17:39.361589" elapsed="0.122815"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-24T13:17:48.484888" level="INFO">Slept 9 seconds.</msg>
<arg>9s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-24T13:17:39.484595" elapsed="9.000406"/>
</kw>
<kw name="Get Container Logs" owner="DockerLibrary">
<msg time="2025-07-24T13:17:48.487942" level="INFO">${logs} = [Entrypoint] Starting subscriber and publisher in mode local_udp
[Publisher] Waiting for at least 1 subscriber(s) on topic: test_topic
[Publisher] Found 1 subscriber(s). Proceeding to send messages.
[...</msg>
<var>${logs}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-24T13:17:48.485170" elapsed="0.002799"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[CONTAINER LOG: LOCAL PUB+SUB]\n${logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T13:17:48.488061" elapsed="0.000158"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-24T13:17:48.488497" level="INFO">
[CONTAINER LOG: LOCAL PUB+SUB]
[Entrypoint] Starting subscriber and publisher in mode local_udp
[Publisher] Waiting for at least 1 subscriber(s) on topic: test_topic
[Publisher] Found 1 subscriber(s). Proceeding to send messages.
[Publisher] Send result: ✓, size: 209715 bytes
[Publisher] Send result: ✓, size: 209715 bytes
[Publisher] Send result: ✓, size: 209715 bytes
[Publisher] Send result: ✓, size: 209715 bytes
[Publisher] Finished sending.


[Subscriber] Ready and waiting...

[Subscriber] Received 209715 bytes (message 1)
[Subscriber] Received 209715 bytes (message 2)
[Subscriber] Received 209715 bytes (message 3)
[Subscriber] Received 209715 bytes (message 4)
[Subscriber] Received 4 messages.
</msg>
<arg>\n[CONTAINER LOG: LOCAL PUB+SUB]\n${logs}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-24T13:17:48.488348" elapsed="0.000212"/>
</kw>
<kw name="Wait For Container Exit" owner="DockerLibrary">
<msg time="2025-07-24T13:17:48.489776" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-24T13:17:48.488671" elapsed="0.001128"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-24T13:17:48.490014" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Local communication test failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-24T13:17:48.489881" elapsed="0.000176"/>
</kw>
<kw name="Log Test Summary" owner="DockerLibrary">
<arg>Basic Pub/Sub Local ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-07-24T13:17:48.490131" elapsed="0.000158"/>
</kw>
<kw name="Stop Container" owner="DockerLibrary">
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-24T13:17:48.490398" elapsed="0.007202"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-24T13:17:49.497926" level="INFO">Slept 1 second.</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-24T13:17:48.497683" elapsed="1.000356"/>
</kw>
<arg>local_udp</arg>
<status status="PASS" start="2025-07-24T13:17:39.360685" elapsed="10.137461"/>
</kw>
<tag>basic_pub_sub_local_udp</tag>
<status status="PASS" start="2025-07-24T13:17:39.360241" elapsed="10.138047"/>
</test>
<test id="s1-s1-t3" name="Basic Pub/Sub Local TCP" line="46">
<kw name="Run Local Pub Sub Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T13:17:49.499620" level="INFO">${IMAGE} = basic_pub_sub_local_tcp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T13:17:49.499472" elapsed="0.000168"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T13:17:49.499822" level="INFO">${CONTAINER} = basic_local_local_tcp</msg>
<var>${CONTAINER}</var>
<arg>basic_local_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T13:17:49.499714" elapsed="0.000125"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Running local pub/sub test in mode: ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T13:17:49.499905" elapsed="0.000184"/>
</kw>
<kw name="Start Container" owner="DockerLibrary">
<arg>${CONTAINER}</arg>
<arg>${IMAGE}</arg>
<arg>local</arg>
<arg>${layer_tag}</arg>
<arg>test_topic</arg>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-24T13:17:49.500183" elapsed="0.124268"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-24T13:17:58.624988" level="INFO">Slept 9 seconds.</msg>
<arg>9s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-24T13:17:49.624678" elapsed="9.000428"/>
</kw>
<kw name="Get Container Logs" owner="DockerLibrary">
<msg time="2025-07-24T13:17:58.628259" level="INFO">${logs} = [Entrypoint] Starting subscriber and publisher in mode local_tcp
[Publisher] Waiting for at least 1 subscriber(s) on topic: test_topic
1753363071627 ms | 6931d1f9de50 | pub_test | 7 | info | CTCPReade...</msg>
<var>${logs}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-24T13:17:58.625301" elapsed="0.003011"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[CONTAINER LOG: LOCAL PUB+SUB]\n${logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T13:17:58.628407" elapsed="0.000165"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-24T13:17:58.628821" level="INFO">
[CONTAINER LOG: LOCAL PUB+SUB]
[Entrypoint] Starting subscriber and publisher in mode local_tcp
[Publisher] Waiting for at least 1 subscriber(s) on topic: test_topic
1753363071627 ms | 6931d1f9de50 | pub_test | 7 | info | CTCPReaderLayer - TCPPubSub (Info) -Publisher :::0: Created publisher and waiting for clients.
[Publisher] Found 1 subscriber(s). Proceeding to send messages.
1753363071628 ms | 6931d1f9de50 | pub_test | 7 | info | CTCPReaderLayer - TCPPubSub (Info) -Publisher :::44307: Subscriber ::ffff:172.17.0.3:52264 has connected.
[Publisher] Send result: ✓, size: 209715 bytes
[Publisher] Send result: ✓, size: 209715 bytes
[Publisher] Send result: ✓, size: 209715 bytes
[Publisher] Send result: ✓, size: 209715 bytes
[Publisher] Finished sending.


[Subscriber] Ready and waiting...

[Subscriber] Received 209715 bytes (message 1)
[Subscriber] Received 209715 bytes (message 2)
[Subscriber] Received 209715 bytes (message 3)
[Subscriber] Received 209715 bytes (message 4)
1753363075130 ms | 6931d1f9de50 | sub_test | 13 | error | CTCPReaderLayer - TCPPubSub (Error) -SubscriberSession 172.17.0.3:52264-&gt;6931d1f9de50:44307: Error reading header length: End of file
1753363075130 ms | 6931d1f9de50 | sub_test | 13 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.17.0.3:42072: Failed connecting to publisher 6931d1f9de50:44307: Connection refused
1753363075130 ms | 6931d1f9de50 | sub_test | 13 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.17.0.3:42086: Failed connecting to publisher 6931d1f9de50:44307: Connection refused
1753363075130 ms | 6931d1f9de50 | sub_test | 13 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.17.0.3:42090: Failed connecting to publisher 6931d1f9de50:44307: Connection refused
1753363075131 ms | 6931d1f9de50 | sub_test | 13 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.17.0.3:42100: Failed connecting to publisher 6931d1f9de50:44307: Connection refused
1753363075131 ms | 6931d1f9de50 | sub_test | 13 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.17.0.3:42114: Failed connecting to publisher 6931d1f9de50:44307: Connection refused
[Subscriber] Received 4 messages.
</msg>
<arg>\n[CONTAINER LOG: LOCAL PUB+SUB]\n${logs}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-24T13:17:58.628674" elapsed="0.000219"/>
</kw>
<kw name="Wait For Container Exit" owner="DockerLibrary">
<msg time="2025-07-24T13:17:58.630299" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-24T13:17:58.628999" elapsed="0.001331"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-24T13:17:58.630606" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Local communication test failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-24T13:17:58.630438" elapsed="0.000225"/>
</kw>
<kw name="Log Test Summary" owner="DockerLibrary">
<arg>Basic Pub/Sub Local ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-07-24T13:17:58.630762" elapsed="0.000178"/>
</kw>
<kw name="Stop Container" owner="DockerLibrary">
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-24T13:17:58.631033" elapsed="0.005213"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-24T13:17:59.636618" level="INFO">Slept 1 second.</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-24T13:17:58.636362" elapsed="1.000373"/>
</kw>
<arg>local_tcp</arg>
<status status="PASS" start="2025-07-24T13:17:49.499216" elapsed="10.137609"/>
</kw>
<tag>basic_pub_sub_local_tcp</tag>
<status status="PASS" start="2025-07-24T13:17:49.498823" elapsed="10.138134"/>
</test>
<test id="s1-s1-t4" name="Basic Pub/Sub Network UDP" line="50">
<kw name="Run Network Pub Sub Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T13:17:59.638434" level="INFO">${IMAGE} = basic_pub_sub_network_udp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T13:17:59.638256" elapsed="0.000199"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T13:17:59.638634" level="INFO">${TOPIC} = topic_network_udp</msg>
<var>${TOPIC}</var>
<arg>topic_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T13:17:59.638528" elapsed="0.000124"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T13:17:59.638822" level="INFO">${SUB_NAME} = sub_network_udp</msg>
<var>${SUB_NAME}</var>
<arg>sub_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T13:17:59.638718" elapsed="0.000121"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T13:17:59.639002" level="INFO">${PUB_NAME} = pub_network_udp</msg>
<var>${PUB_NAME}</var>
<arg>pub_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T13:17:59.638903" elapsed="0.000115"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Running network pub/sub test in mode: ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T13:17:59.639082" elapsed="0.000118"/>
</kw>
<kw name="Start Container" owner="DockerLibrary">
<arg>${SUB_NAME}</arg>
<arg>${IMAGE}</arg>
<arg>subscriber</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${SUB_NAME}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-24T13:17:59.639307" elapsed="0.136870"/>
</kw>
<kw name="Start Container" owner="DockerLibrary">
<arg>${PUB_NAME}</arg>
<arg>${IMAGE}</arg>
<arg>publisher</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${PUB_NAME}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-24T13:17:59.776412" elapsed="0.123913"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-24T13:18:08.900786" level="INFO">Slept 9 seconds.</msg>
<arg>9s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-24T13:17:59.900496" elapsed="9.000408"/>
</kw>
<kw name="Get Container Logs" owner="DockerLibrary">
<msg time="2025-07-24T13:18:08.903776" level="INFO">${log_sub} = [Entrypoint] Starting subscriber in mode network_udp


[Subscriber] Ready and waiting...

[Subscriber] Received 209715 bytes (message 1)
[Subscriber] Received 209715 bytes (message 2)
[Subscriber] Rec...</msg>
<var>${log_sub}</var>
<arg>${SUB_NAME}</arg>
<status status="PASS" start="2025-07-24T13:18:08.901097" elapsed="0.002756"/>
</kw>
<kw name="Get Container Logs" owner="DockerLibrary">
<msg time="2025-07-24T13:18:08.905993" level="INFO">${log_pub} = [Entrypoint] Starting publisher in mode network_udp
[Publisher] Waiting for at least 1 subscriber(s) on topic: topic_network_udp
[Publisher] Found 1 subscriber(s). Proceeding to send messages.
[Publis...</msg>
<var>${log_pub}</var>
<arg>${PUB_NAME}</arg>
<status status="PASS" start="2025-07-24T13:18:08.903947" elapsed="0.002072"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[CONTAINER LOG: PUBLISHER]\n${log_pub}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T13:18:08.906103" elapsed="0.000162"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-24T13:18:08.906517" level="INFO">
[CONTAINER LOG: PUBLISHER]
[Entrypoint] Starting publisher in mode network_udp
[Publisher] Waiting for at least 1 subscriber(s) on topic: topic_network_udp
[Publisher] Found 1 subscriber(s). Proceeding to send messages.
[Publisher] Send result: ✓, size: 209715 bytes
[Publisher] Send result: ✓, size: 209715 bytes
[Publisher] Send result: ✓, size: 209715 bytes
[Publisher] Send result: ✓, size: 209715 bytes
[Publisher] Finished sending.
</msg>
<arg>\n[CONTAINER LOG: PUBLISHER]\n${log_pub}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-24T13:18:08.906393" elapsed="0.000161"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[CONTAINER LOG: SUBSCRIBER]\n${log_sub}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T13:18:08.906627" elapsed="0.000131"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-24T13:18:08.906937" level="INFO">
[CONTAINER LOG: SUBSCRIBER]
[Entrypoint] Starting subscriber in mode network_udp


[Subscriber] Ready and waiting...

[Subscriber] Received 209715 bytes (message 1)
[Subscriber] Received 209715 bytes (message 2)
[Subscriber] Received 209715 bytes (message 3)
[Subscriber] Received 209715 bytes (message 4)
[Subscriber] Received 4 messages.
</msg>
<arg>\n[CONTAINER LOG: SUBSCRIBER]\n${log_sub}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-24T13:18:08.906843" elapsed="0.000125"/>
</kw>
<kw name="Wait For Container Exit" owner="DockerLibrary">
<msg time="2025-07-24T13:18:08.908054" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>${SUB_NAME}</arg>
<status status="PASS" start="2025-07-24T13:18:08.907035" elapsed="0.001042"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-24T13:18:08.908342" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Subscriber failed in ${layer_tag}!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-24T13:18:08.908158" elapsed="0.000228"/>
</kw>
<kw name="Log Test Summary" owner="DockerLibrary">
<arg>Basic Pub/Sub Network ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-07-24T13:18:08.908461" elapsed="0.000142"/>
</kw>
<kw name="Stop Container" owner="DockerLibrary">
<arg>${SUB_NAME}</arg>
<status status="PASS" start="2025-07-24T13:18:08.908687" elapsed="0.005658"/>
</kw>
<kw name="Stop Container" owner="DockerLibrary">
<arg>${PUB_NAME}</arg>
<status status="PASS" start="2025-07-24T13:18:08.914428" elapsed="0.005038"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-24T13:18:09.919792" level="INFO">Slept 1 second.</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-24T13:18:08.919554" elapsed="1.000348"/>
</kw>
<arg>network_udp</arg>
<arg>network</arg>
<status status="PASS" start="2025-07-24T13:17:59.638011" elapsed="10.281974"/>
</kw>
<tag>basic_pub_sub_network_udp</tag>
<status status="PASS" start="2025-07-24T13:17:59.637583" elapsed="10.282520"/>
</test>
<test id="s1-s1-t5" name="Basic Pub/Sub Network TCP" line="54">
<kw name="Run Network Pub Sub Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T13:18:09.921814" level="INFO">${IMAGE} = basic_pub_sub_network_tcp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T13:18:09.921656" elapsed="0.000178"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T13:18:09.922011" level="INFO">${TOPIC} = topic_network_tcp</msg>
<var>${TOPIC}</var>
<arg>topic_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T13:18:09.921907" elapsed="0.000121"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T13:18:09.922202" level="INFO">${SUB_NAME} = sub_network_tcp</msg>
<var>${SUB_NAME}</var>
<arg>sub_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T13:18:09.922100" elapsed="0.000118"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T13:18:09.922415" level="INFO">${PUB_NAME} = pub_network_tcp</msg>
<var>${PUB_NAME}</var>
<arg>pub_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T13:18:09.922306" elapsed="0.000127"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Running network pub/sub test in mode: ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T13:18:09.922499" elapsed="0.000127"/>
</kw>
<kw name="Start Container" owner="DockerLibrary">
<arg>${SUB_NAME}</arg>
<arg>${IMAGE}</arg>
<arg>subscriber</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${SUB_NAME}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-24T13:18:09.922706" elapsed="0.130858"/>
</kw>
<kw name="Start Container" owner="DockerLibrary">
<arg>${PUB_NAME}</arg>
<arg>${IMAGE}</arg>
<arg>publisher</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${PUB_NAME}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-24T13:18:10.053750" elapsed="0.134912"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-24T13:18:19.189122" level="INFO">Slept 9 seconds.</msg>
<arg>9s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-24T13:18:10.188829" elapsed="9.000414"/>
</kw>
<kw name="Get Container Logs" owner="DockerLibrary">
<msg time="2025-07-24T13:18:19.192532" level="INFO">${log_sub} = [Entrypoint] Starting subscriber in mode network_tcp


[Subscriber] Ready and waiting...

[Subscriber] Received 209715 bytes (message 1)
[Subscriber] Received 209715 bytes (message 2)
[Subscriber] Rec...</msg>
<var>${log_sub}</var>
<arg>${SUB_NAME}</arg>
<status status="PASS" start="2025-07-24T13:18:19.189451" elapsed="0.003107"/>
</kw>
<kw name="Get Container Logs" owner="DockerLibrary">
<msg time="2025-07-24T13:18:19.194726" level="INFO">${log_pub} = [Entrypoint] Starting publisher in mode network_tcp
[Publisher] Waiting for at least 1 subscriber(s) on topic: topic_network_tcp
1753363091055 ms | 1f677f671e6c | pub_network_tcp | 7 | info | CTCPRead...</msg>
<var>${log_pub}</var>
<arg>${PUB_NAME}</arg>
<status status="PASS" start="2025-07-24T13:18:19.192650" elapsed="0.002101"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[CONTAINER LOG: PUBLISHER]\n${log_pub}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T13:18:19.194839" elapsed="0.000157"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-24T13:18:19.195229" level="INFO">
[CONTAINER LOG: PUBLISHER]
[Entrypoint] Starting publisher in mode network_tcp
[Publisher] Waiting for at least 1 subscriber(s) on topic: topic_network_tcp
1753363091055 ms | 1f677f671e6c | pub_network_tcp | 7 | info | CTCPReaderLayer - TCPPubSub (Info) -Publisher :::0: Created publisher and waiting for clients.
1753363091056 ms | 1f677f671e6c | pub_network_tcp | 7 | info | CTCPReaderLayer - TCPPubSub (Info) -Publisher :::36065: Subscriber ::ffff:172.18.0.2:46942 has connected.
[Publisher] Found 1 subscriber(s). Proceeding to send messages.
[Publisher] Send result: ✓, size: 209715 bytes
[Publisher] Send result: ✓, size: 209715 bytes
[Publisher] Send result: ✓, size: 209715 bytes
[Publisher] Send result: ✓, size: 209715 bytes
[Publisher] Finished sending.
</msg>
<arg>\n[CONTAINER LOG: PUBLISHER]\n${log_pub}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-24T13:18:19.195106" elapsed="0.000243"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[CONTAINER LOG: SUBSCRIBER]\n${log_sub}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T13:18:19.195430" elapsed="0.000129"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-24T13:18:19.195809" level="INFO">
[CONTAINER LOG: SUBSCRIBER]
[Entrypoint] Starting subscriber in mode network_tcp


[Subscriber] Ready and waiting...

[Subscriber] Received 209715 bytes (message 1)
[Subscriber] Received 209715 bytes (message 2)
[Subscriber] Received 209715 bytes (message 3)
[Subscriber] Received 209715 bytes (message 4)
1753363094593 ms | 28ef2d16caf8 | sub_network_tcp | 7 | error | CTCPReaderLayer - TCPPubSub (Error) -SubscriberSession 172.18.0.2:46942-&gt;1f677f671e6c:36065: Error reading header length: End of file
1753363094594 ms | 28ef2d16caf8 | sub_network_tcp | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:34624: Failed connecting to publisher 1f677f671e6c:36065: Connection refused
1753363094594 ms | 28ef2d16caf8 | sub_network_tcp | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:34626: Failed connecting to publisher 1f677f671e6c:36065: Connection refused
1753363094595 ms | 28ef2d16caf8 | sub_network_tcp | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:34630: Failed connecting to publisher 1f677f671e6c:36065: Connection refused
1753363094595 ms | 28ef2d16caf8 | sub_network_tcp | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:34646: Failed connecting to publisher 1f677f671e6c:36065: Connection refused
1753363094596 ms | 28ef2d16caf8 | sub_network_tcp | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:34650: Failed connecting to publisher 1f677f671e6c:36065: Connection refused
[Subscriber] Received 4 messages.
</msg>
<arg>\n[CONTAINER LOG: SUBSCRIBER]\n${log_sub}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-24T13:18:19.195662" elapsed="0.000212"/>
</kw>
<kw name="Wait For Container Exit" owner="DockerLibrary">
<msg time="2025-07-24T13:18:19.197105" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>${SUB_NAME}</arg>
<status status="PASS" start="2025-07-24T13:18:19.195977" elapsed="0.001150"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-24T13:18:19.197397" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Subscriber failed in ${layer_tag}!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-24T13:18:19.197208" elapsed="0.000233"/>
</kw>
<kw name="Log Test Summary" owner="DockerLibrary">
<arg>Basic Pub/Sub Network ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-07-24T13:18:19.197515" elapsed="0.000131"/>
</kw>
<kw name="Stop Container" owner="DockerLibrary">
<arg>${SUB_NAME}</arg>
<status status="PASS" start="2025-07-24T13:18:19.197746" elapsed="0.005257"/>
</kw>
<kw name="Stop Container" owner="DockerLibrary">
<arg>${PUB_NAME}</arg>
<status status="PASS" start="2025-07-24T13:18:19.203104" elapsed="0.005050"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-24T13:18:20.208537" level="INFO">Slept 1 second.</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-24T13:18:19.208244" elapsed="1.000418"/>
</kw>
<arg>network_tcp</arg>
<arg>network</arg>
<status status="PASS" start="2025-07-24T13:18:09.921413" elapsed="10.287345"/>
</kw>
<tag>basic_pub_sub_network_tcp</tag>
<status status="PASS" start="2025-07-24T13:18:09.920981" elapsed="10.287897"/>
</test>
<status status="PASS" start="2025-07-24T13:17:12.106797" elapsed="68.103174"/>
</suite>
<suite id="s1-s2" name="Multi Pub Sub" source="/home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/multi_pub_sub/robottests/multi_pub_sub.robot">
<kw name="Init Test Context" type="SETUP">
<kw name="Set Test Context" owner="GlobalPathsLibrary">
<arg>multi_pub_sub</arg>
<arg>multi_pub_sub</arg>
<doc>Sets the test folder and tag prefix if it's a valid test case.
The folder must exist under integration_tests/ and contain typical test structure.</doc>
<status status="PASS" start="2025-07-24T13:18:20.213505" elapsed="0.000139"/>
</kw>
<kw name="Get Build Script Path" owner="GlobalPathsLibrary">
<msg time="2025-07-24T13:18:20.213814" level="INFO">${build} = /home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/multi_pub_sub/scripts/build_images.sh</msg>
<var>${build}</var>
<status status="PASS" start="2025-07-24T13:18:20.213723" elapsed="0.000112"/>
</kw>
<kw name="Get Network Name" owner="GlobalPathsLibrary">
<msg time="2025-07-24T13:18:20.213981" level="INFO">${net} = ecal_test_net</msg>
<var>${net}</var>
<status status="PASS" start="2025-07-24T13:18:20.213899" elapsed="0.000099"/>
</kw>
<kw name="Get Build Script Args" owner="GlobalPathsLibrary">
<msg time="2025-07-24T13:18:20.214131" level="INFO">${args} = ['multi_pub_sub']</msg>
<var>${args}</var>
<status status="PASS" start="2025-07-24T13:18:20.214058" elapsed="0.000089"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-07-24T13:18:20.214381" level="INFO">${BUILD_SCRIPT} = /home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/multi_pub_sub/scripts/build_images.sh</msg>
<arg>${BUILD_SCRIPT}</arg>
<arg>${build}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-07-24T13:18:20.214220" elapsed="0.000193"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-07-24T13:18:20.214598" level="INFO">${NETWORK} = ecal_test_net</msg>
<arg>${NETWORK}</arg>
<arg>${net}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-07-24T13:18:20.214487" elapsed="0.000137"/>
</kw>
<kw name="Get Test Description" owner="GlobalPathsLibrary">
<msg time="2025-07-24T13:18:20.214850" level="INFO">${desc} = This test validates eCAL communication in a scenario involving multiple publishers and subscribers.

Test Setup:
- Two publishers run in parallel and publish messages on the **same topic**.
• Publishe...</msg>
<var>${desc}</var>
<doc>Reads the *** Comments *** section from the .robot file and returns it as a string.</doc>
<status status="PASS" start="2025-07-24T13:18:20.214687" elapsed="0.000185"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-24T13:18:20.215025" level="INFO">This test validates eCAL communication in a scenario involving multiple publishers and subscribers.

Test Setup:
- Two publishers run in parallel and publish messages on the **same topic**.
• Publisher 1 sends messages containing the byte value **42**.
• Publisher 2 sends messages containing the byte value **43**.
- Two subscribers listen on that same topic and must receive all messages from both publishers.

Covered eCAL modes:
- local_shm
- local_udp
- local_tcp
- network_udp
- network_tcp

Goals:
- Ensure that eCAL correctly distributes messages from **multiple sources** to **multiple receivers**.
- Verify that **topic routing, message integrity, and delivery** work consistently across different transport modes.

Success Criteria:
- Each subscriber must receive **10 messages with value 42** and **10 with value 43**.
- If this condition is met, the subscriber exits with code **0**.
- If any expected messages are missing, the subscriber exits with code **1**.</msg>
<arg>${desc}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-24T13:18:20.214941" elapsed="0.000166"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>[SETUP] Building Docker image...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T13:18:20.215177" elapsed="0.000114"/>
</kw>
<kw name="Run Process" owner="Process">
<msg time="2025-07-24T13:18:20.215537" level="INFO">Starting process:
/home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/multi_pub_sub/scripts/build_images.sh multi_pub_sub</msg>
<msg time="2025-07-24T13:18:20.215963" level="INFO">Waiting for process to complete.</msg>
<msg time="2025-07-24T13:18:29.449513" level="INFO">Process completed.</msg>
<msg time="2025-07-24T13:18:29.449679" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<var>${result}</var>
<arg>${BUILD_SCRIPT}</arg>
<arg>@{args}</arg>
<doc>Runs a process and waits for it to complete.</doc>
<status status="PASS" start="2025-07-24T13:18:20.215383" elapsed="9.234321"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-24T13:18:29.450392" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${result.rc}</arg>
<arg>0</arg>
<arg>Failed to build Docker image!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-24T13:18:29.449856" elapsed="0.000592"/>
</kw>
<kw name="Create Docker Network" owner="DockerLibrary">
<arg>${NETWORK}</arg>
<status status="PASS" start="2025-07-24T13:18:29.450535" elapsed="0.007070"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-24T13:18:32.457968" level="INFO">Slept 3 seconds.</msg>
<arg>3s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-24T13:18:29.457722" elapsed="3.000364"/>
</kw>
<status status="PASS" start="2025-07-24T13:18:20.213346" elapsed="12.244832"/>
</kw>
<test id="s1-s2-t1" name="Multi Pub/Sub Local SHM Test" line="39">
<kw name="Run Multi Pub Sub Test Local">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T13:18:32.460200" level="INFO">${IMAGE} = multi_pub_sub_local_shm</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T13:18:32.460035" elapsed="0.000187"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T13:18:32.460430" level="INFO">${CONTAINER} = multi_locallocal_shm</msg>
<var>${CONTAINER}</var>
<arg>multi_local${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T13:18:32.460317" elapsed="0.000130"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Running local multi pub/sub test (all binarys in same Container) with ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T13:18:32.460516" elapsed="0.000133"/>
</kw>
<kw name="Start Container" owner="DockerLibrary">
<arg>${CONTAINER}</arg>
<arg>${IMAGE}</arg>
<arg>local_multi</arg>
<arg>${layer_tag}</arg>
<status status="PASS" start="2025-07-24T13:18:32.460749" elapsed="0.115349"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-24T13:18:50.576701" level="INFO">Slept 18 seconds.</msg>
<arg>18s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-24T13:18:32.576347" elapsed="18.000474"/>
</kw>
<kw name="Get Container Logs" owner="DockerLibrary">
<msg time="2025-07-24T13:18:50.579959" level="INFO">${logs} = [Entrypoint] Starting local multi pub/sub test in mode local_shm
Shared memory monitoring is enabled (domain: ecal_mon - queue size: 1024)
[Publisher] Waiting for at least 2 subscriber(s) on topic: te...</msg>
<var>${logs}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-24T13:18:50.576995" elapsed="0.002993"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[CONTAINER LOG: All Local Binarys Multi Pub/Sub]\n${logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T13:18:50.580079" elapsed="0.000172"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-24T13:18:50.580509" level="INFO">
[CONTAINER LOG: All Local Binarys Multi Pub/Sub]
[Entrypoint] Starting local multi pub/sub test in mode local_shm
Shared memory monitoring is enabled (domain: ecal_mon - queue size: 1024)
[Publisher] Waiting for at least 2 subscriber(s) on topic: test_topic
Shared memory monitoring is enabled (domain: ecal_mon - queue size: 1024)
[Publisher] Waiting for at least 2 subscriber(s) on topic: test_topic
Shared memory monitoring is enabled (domain: ecal_mon - queue size: 1024)
[Subscriber 2] Waiting for messages...
Shared memory monitoring is enabled (domain: ecal_mon - queue size: 1024)
[Subscriber 1] Waiting for messages...

[Publisher] Found 2 subscriber(s). Proceeding to send messages.
[Publisher] Found 2 subscriber(s). Proceeding to send messages.
[Publisher 2] Started with mode=local_shm, topic=test_topic, node=multi_publisher, count=10, delay=1000ms
[Publisher 1] Started with mode=local_shm, topic=test_topic, node=multi_publisher, count=10, delay=1000ms

[Publisher 1] Finished sending messages.

[Publisher 2] Finished sending messages.

=== [Subscriber 2] Received Message Summary ===
PUB1 messages (42):--------------&gt; 10/10
PUB2 messages (43):-------------&gt; 10/10
[Subscriber 2] [✓] Received messages from both publishers.


=== [Subscriber 1] Received Message Summary ===
PUB1 messages (42):--------------&gt; 10/10
PUB2 messages (43):-------------&gt; 10/10
[Subscriber 1] [✓] Received messages from both publishers.

</msg>
<arg>\n[CONTAINER LOG: All Local Binarys Multi Pub/Sub]\n${logs}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-24T13:18:50.580382" elapsed="0.000171"/>
</kw>
<kw name="Wait For Container Exit" owner="DockerLibrary">
<msg time="2025-07-24T13:18:50.581692" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-24T13:18:50.580627" elapsed="0.001089"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-24T13:18:50.581974" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Local Multi Pub/Sub Test test failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-24T13:18:50.581806" elapsed="0.000233"/>
</kw>
<kw name="Stop Container" owner="DockerLibrary">
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-24T13:18:50.582151" elapsed="0.004907"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-24T13:18:51.587397" level="INFO">Slept 1 second.</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-24T13:18:50.587150" elapsed="1.000366"/>
</kw>
<arg>local_shm</arg>
<status status="PASS" start="2025-07-24T13:18:32.458803" elapsed="19.128807"/>
</kw>
<tag>multi_pub_sub_local_shm</tag>
<status status="PASS" start="2025-07-24T13:18:32.458259" elapsed="19.129530"/>
</test>
<test id="s1-s2-t2" name="Multi Pub/Sub Local UDP Test" line="43">
<kw name="Run Multi Pub Sub Test Local">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T13:18:51.589188" level="INFO">${IMAGE} = multi_pub_sub_local_udp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T13:18:51.589042" elapsed="0.000166"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T13:18:51.589420" level="INFO">${CONTAINER} = multi_locallocal_udp</msg>
<var>${CONTAINER}</var>
<arg>multi_local${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T13:18:51.589303" elapsed="0.000134"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Running local multi pub/sub test (all binarys in same Container) with ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T13:18:51.589507" elapsed="0.000131"/>
</kw>
<kw name="Start Container" owner="DockerLibrary">
<arg>${CONTAINER}</arg>
<arg>${IMAGE}</arg>
<arg>local_multi</arg>
<arg>${layer_tag}</arg>
<status status="PASS" start="2025-07-24T13:18:51.589741" elapsed="0.115634"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-24T13:19:09.706057" level="INFO">Slept 18 seconds.</msg>
<arg>18s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-24T13:18:51.705660" elapsed="18.000507"/>
</kw>
<kw name="Get Container Logs" owner="DockerLibrary">
<msg time="2025-07-24T13:19:09.709351" level="INFO">${logs} = [Entrypoint] Starting local multi pub/sub test in mode local_udp
[Publisher] Waiting for at least 2 subscriber(s) on topic: test_topic
[Publisher] Waiting for at least 2 subscriber(s) on topic: test_t...</msg>
<var>${logs}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-24T13:19:09.706350" elapsed="0.003027"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[CONTAINER LOG: All Local Binarys Multi Pub/Sub]\n${logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T13:19:09.709468" elapsed="0.000157"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-24T13:19:09.709902" level="INFO">
[CONTAINER LOG: All Local Binarys Multi Pub/Sub]
[Entrypoint] Starting local multi pub/sub test in mode local_udp
[Publisher] Waiting for at least 2 subscriber(s) on topic: test_topic
[Publisher] Waiting for at least 2 subscriber(s) on topic: test_topic
[Subscriber 2] Waiting for messages...
[Subscriber 1] Waiting for messages...

[Publisher] Found 2 subscriber(s). Proceeding to send messages.
[Publisher] Found 2 subscriber(s). Proceeding to send messages.
[Publisher 2] Started with mode=local_udp, topic=test_topic, node=multi_publisher, count=10, delay=1000ms
[Publisher 1] Started with mode=local_udp, topic=test_topic, node=multi_publisher, count=10, delay=1000ms

[Publisher 1] Finished sending messages.

[Publisher 2] Finished sending messages.

=== [Subscriber 1] Received Message Summary ===
PUB1 messages (42):--------------&gt; 10/10
PUB2 messages (43):-------------&gt; 10/10
[Subscriber 1] [✓] Received messages from both publishers.


=== [Subscriber 2] Received Message Summary ===
PUB1 messages (42):--------------&gt; 10/10
PUB2 messages (43):-------------&gt; 10/10
[Subscriber 2] [✓] Received messages from both publishers.

</msg>
<arg>\n[CONTAINER LOG: All Local Binarys Multi Pub/Sub]\n${logs}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-24T13:19:09.709744" elapsed="0.000224"/>
</kw>
<kw name="Wait For Container Exit" owner="DockerLibrary">
<msg time="2025-07-24T13:19:09.711174" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-24T13:19:09.710066" elapsed="0.001131"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-24T13:19:09.711443" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Local Multi Pub/Sub Test test failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-24T13:19:09.711305" elapsed="0.000181"/>
</kw>
<kw name="Stop Container" owner="DockerLibrary">
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-24T13:19:09.711561" elapsed="0.004764"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-24T13:19:10.716647" level="INFO">Slept 1 second.</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-24T13:19:09.716410" elapsed="1.000344"/>
</kw>
<arg>local_udp</arg>
<status status="PASS" start="2025-07-24T13:18:51.588812" elapsed="19.128026"/>
</kw>
<tag>multi_pub_sub_local_udp</tag>
<status status="PASS" start="2025-07-24T13:18:51.588409" elapsed="19.128542"/>
</test>
<test id="s1-s2-t3" name="Multi Pub/Sub Local TCP Test" line="47">
<kw name="Run Multi Pub Sub Test Local">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T13:19:10.718357" level="INFO">${IMAGE} = multi_pub_sub_local_tcp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T13:19:10.718173" elapsed="0.000206"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T13:19:10.718563" level="INFO">${CONTAINER} = multi_locallocal_tcp</msg>
<var>${CONTAINER}</var>
<arg>multi_local${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T13:19:10.718454" elapsed="0.000126"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Running local multi pub/sub test (all binarys in same Container) with ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T13:19:10.718648" elapsed="0.000132"/>
</kw>
<kw name="Start Container" owner="DockerLibrary">
<arg>${CONTAINER}</arg>
<arg>${IMAGE}</arg>
<arg>local_multi</arg>
<arg>${layer_tag}</arg>
<status status="PASS" start="2025-07-24T13:19:10.718878" elapsed="0.112085"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-24T13:19:28.831573" level="INFO">Slept 18 seconds.</msg>
<arg>18s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-24T13:19:10.831202" elapsed="18.000491"/>
</kw>
<kw name="Get Container Logs" owner="DockerLibrary">
<msg time="2025-07-24T13:19:28.834862" level="INFO">${logs} = [Entrypoint] Starting local multi pub/sub test in mode local_tcp
[Publisher] Waiting for at least 2 subscriber(s) on topic: test_topic
[Publisher] Waiting for at least 2 subscriber(s) on topic: test_t...</msg>
<var>${logs}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-24T13:19:28.831865" elapsed="0.003024"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[CONTAINER LOG: All Local Binarys Multi Pub/Sub]\n${logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T13:19:28.834997" elapsed="0.000206"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-24T13:19:28.835522" level="INFO">
[CONTAINER LOG: All Local Binarys Multi Pub/Sub]
[Entrypoint] Starting local multi pub/sub test in mode local_tcp
[Publisher] Waiting for at least 2 subscriber(s) on topic: test_topic
[Publisher] Waiting for at least 2 subscriber(s) on topic: test_topic
[Subscriber 1] Waiting for messages...

[Subscriber 2] Waiting for messages...
1753363152834 ms | 9790fda85fec | multi_publisher | 7 | info | CTCPReaderLayer - TCPPubSub (Info) -Publisher :::0: Created publisher and waiting for clients.
[Publisher] Found 2 subscriber(s). Proceeding to send messages.
1753363152834 ms | 9790fda85fec | multi_publisher | 8 | info | CTCPReaderLayer - TCPPubSub (Info) -Publisher :::0: Created publisher and waiting for clients.
[Publisher] Found 2 subscriber(s). Proceeding to send messages.
1753363152835 ms | 9790fda85fec | multi_publisher | 7 | info | CTCPReaderLayer - TCPPubSub (Info) -Publisher :::37103: Subscriber ::ffff:172.17.0.3:42750 has connected.
1753363152835 ms | 9790fda85fec | multi_publisher | 7 | info | CTCPReaderLayer - TCPPubSub (Info) -Publisher :::37103: Subscriber ::ffff:172.17.0.3:42758 has connected.
[Publisher 1] Started with mode=local_tcp, topic=test_topic, node=multi_publisher, count=10, delay=1000ms
1753363152835 ms | 9790fda85fec | multi_publisher | 8 | info | CTCPReaderLayer - TCPPubSub (Info) -Publisher :::36715: Subscriber ::ffff:172.17.0.3:60356 has connected.
1753363152835 ms | 9790fda85fec | multi_publisher | 8 | info | CTCPReaderLayer - TCPPubSub (Info) -Publisher :::36715: Subscriber ::ffff:172.17.0.3:60366 has connected.
[Publisher 2] Started with mode=local_tcp, topic=test_topic, node=multi_publisher, count=10, delay=1000ms

[Publisher 1] Finished sending messages.

[Publisher 2] Finished sending messages.
[Subscriber 2] [✗] Missing messages from one or both publishers.
[Subscriber 1] [✗] Missing messages from one or both publishers.


1753363164838 ms | 9790fda85fec | multi_subscriber | 18 | error | CTCPReaderLayer - TCPPubSub (Error) -SubscriberSession 172.17.0.3:60366-&gt;9790fda85fec:36715: Error reading header length: End of file
1753363164838 ms | 9790fda85fec | multi_subscriber | 18 | error | CTCPReaderLayer - TCPPubSub (Error) -SubscriberSession 172.17.0.3:42758-&gt;9790fda85fec:37103: Error reading header length: End of file
1753363164838 ms | 9790fda85fec | multi_subscriber | 18 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.17.0.3:49096: Failed connecting to publisher 9790fda85fec:37103: Connection refused
1753363164838 ms | 9790fda85fec | multi_subscriber | 18 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.17.0.3:34438: Failed connecting to publisher 9790fda85fec:36715: Connection refused
1753363164838 ms | 9790fda85fec | multi_subscriber | 18 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.17.0.3:49110: Failed connecting to publisher 9790fda85fec:37103: Connection refused
1753363164838 ms | 9790fda85fec | multi_subscriber | 18 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.17.0.3:34440: Failed connecting to publisher 9790fda85fec:36715: Connection refused
1753363164839 ms | 9790fda85fec | multi_subscriber | 18 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.17.0.3:34450: Failed connecting to publisher 9790fda85fec:36715: Connection refused
1753363164839 ms | 9790fda85fec | multi_subscriber | 18 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.17.0.3:49122: Failed connecting to publisher 9790fda85fec:37103: Connection refused
1753363164839 ms | 9790fda85fec | multi_subscriber | 18 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.17.0.3:34462: Failed connecting to publisher 9790fda85fec:36715: Connection refused
1753363164839 ms | 9790fda85fec | multi_subscriber | 18 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.17.0.3:49134: Failed connecting to publisher 9790fda85fec:37103: Connection refused
1753363164839 ms | 9790fda85fec | multi_subscriber | 18 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.17.0.3:34488: Failed connecting to publisher 9790fda85fec:36715: Connection refused
1753363164839 ms | 9790fda85fec | multi_subscriber | 18 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.17.0.3:49148: Failed connecting to publisher 9790fda85fec:37103: Connection refused

=== [Subscriber 1] Received Message Summary ===
PUB1 messages (42):--------------&gt; 8/10
PUB2 messages (43):-------------&gt; 6/10
1753363164838 ms | 9790fda85fec | multi_subscriber | 19 | error | CTCPReaderLayer - TCPPubSub (Error) -SubscriberSession 172.17.0.3:42750-&gt;9790fda85fec:37103: Error reading header length: End of file
1753363164838 ms | 9790fda85fec | multi_subscriber | 19 | error | CTCPReaderLayer - TCPPubSub (Error) -SubscriberSession 172.17.0.3:60356-&gt;9790fda85fec:36715: Error reading header length: End of file
1753363164839 ms | 9790fda85fec | multi_subscriber | 19 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.17.0.3:49112: Failed connecting to publisher 9790fda85fec:37103: Connection refused
1753363164839 ms | 9790fda85fec | multi_subscriber | 19 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.17.0.3:34444: Failed connecting to publisher 9790fda85fec:36715: Connection refused
1753363164839 ms | 9790fda85fec | multi_subscriber | 19 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.17.0.3:34454: Failed connecting to publisher 9790fda85fec:36715: Connection refused
1753363164839 ms | 9790fda85fec | multi_subscriber | 19 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.17.0.3:49126: Failed connecting to publisher 9790fda85fec:37103: Connection refused
1753363164839 ms | 9790fda85fec | multi_subscriber | 19 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.17.0.3:34478: Failed connecting to publisher 9790fda85fec:36715: Connection refused
1753363164839 ms | 9790fda85fec | multi_subscriber | 19 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.17.0.3:49154: Failed connecting to publisher 9790fda85fec:37103: Connection refused
1753363164839 ms | 9790fda85fec | multi_subscriber | 19 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.17.0.3:34490: Failed connecting to publisher 9790fda85fec:36715: Connection refused
1753363164839 ms | 9790fda85fec | multi_subscriber | 19 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.17.0.3:49166: Failed connecting to publisher 9790fda85fec:37103: Connection refused
1753363164839 ms | 9790fda85fec | multi_subscriber | 19 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.17.0.3:34500: Failed connecting to publisher 9790fda85fec:36715: Connection refused
1753363164839 ms | 9790fda85fec | multi_subscriber | 19 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.17.0.3:49176: Failed connecting to publisher 9790fda85fec:37103: Connection refused

=== [Subscriber 2] Received Message Summary ===
PUB1 messages (42):--------------&gt; 9/10
PUB2 messages (43):-------------&gt; 7/10
</msg>
<arg>\n[CONTAINER LOG: All Local Binarys Multi Pub/Sub]\n${logs}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-24T13:19:28.835331" elapsed="0.000378"/>
</kw>
<kw name="Wait For Container Exit" owner="DockerLibrary">
<msg time="2025-07-24T13:19:28.836953" level="INFO">${exit_code} = 1</msg>
<var>${exit_code}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-24T13:19:28.835814" elapsed="0.001162"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-24T13:19:28.837190" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg time="2025-07-24T13:19:28.837329" level="FAIL">Local Multi Pub/Sub Test test failed!: 1 != 0</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Local Multi Pub/Sub Test test failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="FAIL" start="2025-07-24T13:19:28.837057" elapsed="0.000410">Local Multi Pub/Sub Test test failed!: 1 != 0</status>
</kw>
<kw name="Stop Container" owner="DockerLibrary">
<arg>${CONTAINER}</arg>
<status status="NOT RUN" start="2025-07-24T13:19:28.837582" elapsed="0.000017"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" start="2025-07-24T13:19:28.837661" elapsed="0.000014"/>
</kw>
<arg>local_tcp</arg>
<status status="FAIL" start="2025-07-24T13:19:10.717943" elapsed="18.119820">Local Multi Pub/Sub Test test failed!: 1 != 0</status>
</kw>
<tag>multi_pub_sub_local_tcp</tag>
<status status="FAIL" start="2025-07-24T13:19:10.717557" elapsed="18.120326">Local Multi Pub/Sub Test test failed!: 1 != 0</status>
</test>
<test id="s1-s2-t4" name="Multi Pub/Sub Network UDP Test" line="51">
<kw name="Run Multi Pub Sub Test Network">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T13:19:28.839037" level="INFO">${IMAGE} = multi_pub_sub_network_udp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T13:19:28.838904" elapsed="0.000153"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T13:19:28.839211" level="INFO">${TOPIC} = test_topic</msg>
<var>${TOPIC}</var>
<arg>test_topic</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T13:19:28.839128" elapsed="0.000100"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T13:19:28.839437" level="INFO">${PUB1} = pub1_network_udp</msg>
<var>${PUB1}</var>
<arg>pub1_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T13:19:28.839323" elapsed="0.000131"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T13:19:28.839621" level="INFO">${PUB2} = pub2_network_udp</msg>
<var>${PUB2}</var>
<arg>pub2_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T13:19:28.839520" elapsed="0.000118"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T13:19:28.839799" level="INFO">${SUB1} = sub1_network_udp</msg>
<var>${SUB1}</var>
<arg>sub1_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T13:19:28.839700" elapsed="0.000115"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T13:19:28.839976" level="INFO">${SUB2} = sub2_network_udp</msg>
<var>${SUB2}</var>
<arg>sub2_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T13:19:28.839878" elapsed="0.000114"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Starting multi pub/sub test with ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T13:19:28.840053" elapsed="0.000111"/>
</kw>
<kw name="Start Container" owner="DockerLibrary">
<arg>${SUB1}</arg>
<arg>${IMAGE}</arg>
<arg>multi_subscriber</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-24T13:19:28.840255" elapsed="0.137936"/>
</kw>
<kw name="Start Container" owner="DockerLibrary">
<arg>${SUB2}</arg>
<arg>${IMAGE}</arg>
<arg>multi_subscriber2</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-24T13:19:28.978406" elapsed="0.119359"/>
</kw>
<kw name="Start Container" owner="DockerLibrary">
<arg>${PUB1}</arg>
<arg>${IMAGE}</arg>
<arg>multi_publisher</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-24T13:19:29.098002" elapsed="0.126807"/>
</kw>
<kw name="Start Container" owner="DockerLibrary">
<arg>${PUB2}</arg>
<arg>${IMAGE}</arg>
<arg>multi_publisher2</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-24T13:19:29.224987" elapsed="0.137932"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-24T13:19:47.363527" level="INFO">Slept 18 seconds.</msg>
<arg>18s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-24T13:19:29.363161" elapsed="18.000485"/>
</kw>
<kw name="Get Container Logs" owner="DockerLibrary">
<msg time="2025-07-24T13:19:47.366815" level="INFO">${log1} = [Entrypoint] Starting multi_subscriber in mode network_udp
[Subscriber 1] Waiting for messages...


=== [Subscriber 1] Received Message Summary ===
PUB1 messages (42):--------------&gt; 10/10
PUB2 messag...</msg>
<var>${log1}</var>
<arg>${SUB1}</arg>
<status status="PASS" start="2025-07-24T13:19:47.363814" elapsed="0.003030"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[CONTAINER LOG: SUBSCRIBER 1]\n${log1}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T13:19:47.366944" elapsed="0.000164"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-24T13:19:47.367354" level="INFO">
[CONTAINER LOG: SUBSCRIBER 1]
[Entrypoint] Starting multi_subscriber in mode network_udp
[Subscriber 1] Waiting for messages...


=== [Subscriber 1] Received Message Summary ===
PUB1 messages (42):--------------&gt; 10/10
PUB2 messages (43):-------------&gt; 10/10
[Subscriber 1] [✓] Received messages from both publishers.

</msg>
<arg>\n[CONTAINER LOG: SUBSCRIBER 1]\n${log1}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-24T13:19:47.367214" elapsed="0.000177"/>
</kw>
<kw name="Get Container Logs" owner="DockerLibrary">
<msg time="2025-07-24T13:19:47.369519" level="INFO">${log2} = [Entrypoint] Starting multi_subscriber2 in mode network_udp
[Subscriber 2] Waiting for messages...

=== [Subscriber 2] Received Message Summary ===
PUB1 messages (42):--------------&gt; 10/10
PUB2 messag...</msg>
<var>${log2}</var>
<arg>${SUB2}</arg>
<status status="PASS" start="2025-07-24T13:19:47.367463" elapsed="0.002081"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[CONTAINER LOG: SUBSCRIBER 2]\n${log2}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T13:19:47.369628" elapsed="0.000136"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-24T13:19:47.369982" level="INFO">
[CONTAINER LOG: SUBSCRIBER 1]
[Entrypoint] Starting multi_subscriber2 in mode network_udp
[Subscriber 2] Waiting for messages...

=== [Subscriber 2] Received Message Summary ===
PUB1 messages (42):--------------&gt; 10/10
PUB2 messages (43):-------------&gt; 10/10
[Subscriber 2] [✓] Received messages from both publishers.

</msg>
<arg>\n[CONTAINER LOG: SUBSCRIBER 1]\n${log2}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-24T13:19:47.369867" elapsed="0.000152"/>
</kw>
<kw name="Wait For Container Exit" owner="DockerLibrary">
<arg>${SUB1}</arg>
<status status="PASS" start="2025-07-24T13:19:47.370087" elapsed="0.000968"/>
</kw>
<kw name="Wait For Container Exit" owner="DockerLibrary">
<arg>${SUB2}</arg>
<status status="PASS" start="2025-07-24T13:19:47.371138" elapsed="0.000969"/>
</kw>
<kw name="Wait For Container Exit" owner="DockerLibrary">
<arg>${PUB1}</arg>
<status status="PASS" start="2025-07-24T13:19:47.372188" elapsed="0.000931"/>
</kw>
<kw name="Wait For Container Exit" owner="DockerLibrary">
<arg>${PUB2}</arg>
<status status="PASS" start="2025-07-24T13:19:47.373199" elapsed="0.000917"/>
</kw>
<kw name="Wait For Container Exit" owner="DockerLibrary">
<msg time="2025-07-24T13:19:47.375025" level="INFO">${exit1} = 0</msg>
<var>${exit1}</var>
<arg>${SUB1}</arg>
<status status="PASS" start="2025-07-24T13:19:47.374199" elapsed="0.000849"/>
</kw>
<kw name="Wait For Container Exit" owner="DockerLibrary">
<msg time="2025-07-24T13:19:47.375959" level="INFO">${exit2} = 0</msg>
<var>${exit2}</var>
<arg>${SUB2}</arg>
<status status="PASS" start="2025-07-24T13:19:47.375126" elapsed="0.000855"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-24T13:19:47.376246" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit1}</arg>
<arg>0</arg>
<arg>Subscriber 1 failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-24T13:19:47.376114" elapsed="0.000210"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-24T13:19:47.376519" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit2}</arg>
<arg>0</arg>
<arg>Subscriber 2 failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-24T13:19:47.376407" elapsed="0.000150"/>
</kw>
<kw name="Log Test Summary" owner="DockerLibrary">
<arg>Multi Pub/Sub Test ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-07-24T13:19:47.376628" elapsed="0.000132"/>
</kw>
<kw name="Stop Container" owner="DockerLibrary">
<arg>${SUB1}</arg>
<status status="PASS" start="2025-07-24T13:19:47.376849" elapsed="0.005049"/>
</kw>
<kw name="Stop Container" owner="DockerLibrary">
<arg>${SUB2}</arg>
<status status="PASS" start="2025-07-24T13:19:47.381983" elapsed="0.005338"/>
</kw>
<kw name="Stop Container" owner="DockerLibrary">
<arg>${PUB1}</arg>
<status status="PASS" start="2025-07-24T13:19:47.387406" elapsed="0.005517"/>
</kw>
<kw name="Stop Container" owner="DockerLibrary">
<arg>${PUB2}</arg>
<status status="PASS" start="2025-07-24T13:19:47.393005" elapsed="0.007160"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-24T13:19:48.400527" level="INFO">Slept 1 second.</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-24T13:19:47.400255" elapsed="1.000378"/>
</kw>
<arg>network_udp</arg>
<arg>network</arg>
<status status="PASS" start="2025-07-24T13:19:28.838708" elapsed="19.562008"/>
</kw>
<tag>multi_pub_sub_network_udp</tag>
<status status="PASS" start="2025-07-24T13:19:28.838317" elapsed="19.562513"/>
</test>
<test id="s1-s2-t5" name="Multi Pub/Sub Network TCP Test" line="55">
<kw name="Run Multi Pub Sub Test Network">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T13:19:48.402704" level="INFO">${IMAGE} = multi_pub_sub_network_tcp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T13:19:48.402557" elapsed="0.000167"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T13:19:48.402880" level="INFO">${TOPIC} = test_topic</msg>
<var>${TOPIC}</var>
<arg>test_topic</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T13:19:48.402797" elapsed="0.000099"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T13:19:48.403067" level="INFO">${PUB1} = pub1_network_tcp</msg>
<var>${PUB1}</var>
<arg>pub1_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T13:19:48.402960" elapsed="0.000123"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T13:19:48.403242" level="INFO">${PUB2} = pub2_network_tcp</msg>
<var>${PUB2}</var>
<arg>pub2_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T13:19:48.403146" elapsed="0.000111"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T13:19:48.403455" level="INFO">${SUB1} = sub1_network_tcp</msg>
<var>${SUB1}</var>
<arg>sub1_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T13:19:48.403351" elapsed="0.000121"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T13:19:48.403630" level="INFO">${SUB2} = sub2_network_tcp</msg>
<var>${SUB2}</var>
<arg>sub2_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T13:19:48.403534" elapsed="0.000112"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Starting multi pub/sub test with ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T13:19:48.403708" elapsed="0.000115"/>
</kw>
<kw name="Start Container" owner="DockerLibrary">
<arg>${SUB1}</arg>
<arg>${IMAGE}</arg>
<arg>multi_subscriber</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-24T13:19:48.403910" elapsed="0.126598"/>
</kw>
<kw name="Start Container" owner="DockerLibrary">
<arg>${SUB2}</arg>
<arg>${IMAGE}</arg>
<arg>multi_subscriber2</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-24T13:19:48.530693" elapsed="0.128111"/>
</kw>
<kw name="Start Container" owner="DockerLibrary">
<arg>${PUB1}</arg>
<arg>${IMAGE}</arg>
<arg>multi_publisher</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-24T13:19:48.658973" elapsed="0.120717"/>
</kw>
<kw name="Start Container" owner="DockerLibrary">
<arg>${PUB2}</arg>
<arg>${IMAGE}</arg>
<arg>multi_publisher2</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-24T13:19:48.779892" elapsed="0.121593"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-24T13:20:06.901920" level="INFO">Slept 18 seconds.</msg>
<arg>18s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-24T13:19:48.901659" elapsed="18.000381"/>
</kw>
<kw name="Get Container Logs" owner="DockerLibrary">
<msg time="2025-07-24T13:20:06.905003" level="INFO">${log1} = [Entrypoint] Starting multi_subscriber in mode network_tcp
[Subscriber 1] Waiting for messages...

1753363201685 ms | e8b67dd3ca36 | multi_subscriber | 7 | error | CTCPReaderLayer - TCPPubSub (Error) ...</msg>
<var>${log1}</var>
<arg>${SUB1}</arg>
<status status="PASS" start="2025-07-24T13:20:06.902211" elapsed="0.002819"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[CONTAINER LOG: SUBSCRIBER 1]\n${log1}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T13:20:06.905128" elapsed="0.000188"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-24T13:20:06.905554" level="INFO">
[CONTAINER LOG: SUBSCRIBER 1]
[Entrypoint] Starting multi_subscriber in mode network_tcp
[Subscriber 1] Waiting for messages...

1753363201685 ms | e8b67dd3ca36 | multi_subscriber | 7 | error | CTCPReaderLayer - TCPPubSub (Error) -SubscriberSession 172.18.0.2:46198-&gt;795ca3977490:40453: Error reading header length: End of file
1753363201686 ms | e8b67dd3ca36 | multi_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:37852: Failed connecting to publisher 795ca3977490:40453: Connection refused
1753363201687 ms | e8b67dd3ca36 | multi_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:37866: Failed connecting to publisher 795ca3977490:40453: Connection refused
1753363201687 ms | e8b67dd3ca36 | multi_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:37874: Failed connecting to publisher 795ca3977490:40453: Connection refused
1753363201688 ms | e8b67dd3ca36 | multi_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:37882: Failed connecting to publisher 795ca3977490:40453: Connection refused
1753363201688 ms | e8b67dd3ca36 | multi_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:37890: Failed connecting to publisher 795ca3977490:40453: Connection refused
1753363201706 ms | e8b67dd3ca36 | multi_subscriber | 7 | error | CTCPReaderLayer - TCPPubSub (Error) -SubscriberSession 172.18.0.2:48976-&gt;e0fe418d16d2:43753: Error reading header length: End of file
1753363201707 ms | e8b67dd3ca36 | multi_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:45770: Failed connecting to publisher e0fe418d16d2:43753: Connection refused
1753363201707 ms | e8b67dd3ca36 | multi_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:45782: Failed connecting to publisher e0fe418d16d2:43753: Connection refused
1753363201708 ms | e8b67dd3ca36 | multi_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:45788: Failed connecting to publisher e0fe418d16d2:43753: Connection refused
1753363201710 ms | e8b67dd3ca36 | multi_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:45800: Failed connecting to publisher e0fe418d16d2:43753: Connection refused
1753363201711 ms | e8b67dd3ca36 | multi_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:45810: Failed connecting to publisher e0fe418d16d2:43753: Connection refused

=== [Subscriber 1] Received Message Summary ===
PUB1 messages (42):--------------&gt; 10/10
PUB2 messages (43):-------------&gt; 10/10
[Subscriber 1] [✓] Received messages from both publishers.

</msg>
<arg>\n[CONTAINER LOG: SUBSCRIBER 1]\n${log1}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-24T13:20:06.905429" elapsed="0.000230"/>
</kw>
<kw name="Get Container Logs" owner="DockerLibrary">
<msg time="2025-07-24T13:20:06.907878" level="INFO">${log2} = [Entrypoint] Starting multi_subscriber2 in mode network_tcp
[Subscriber 2] Waiting for messages...
1753363201685 ms | 530084c918d1 | multi_subscriber | 7 | error | CTCPReaderLayer - TCPPubSub (Error) ...</msg>
<var>${log2}</var>
<arg>${SUB2}</arg>
<status status="PASS" start="2025-07-24T13:20:06.905735" elapsed="0.002167"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[CONTAINER LOG: SUBSCRIBER 2]\n${log2}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T13:20:06.907987" elapsed="0.000153"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-24T13:20:06.908396" level="INFO">
[CONTAINER LOG: SUBSCRIBER 1]
[Entrypoint] Starting multi_subscriber2 in mode network_tcp
[Subscriber 2] Waiting for messages...
1753363201685 ms | 530084c918d1 | multi_subscriber | 7 | error | CTCPReaderLayer - TCPPubSub (Error) -SubscriberSession 172.18.0.3:34230-&gt;795ca3977490:40453: Error reading header length: End of file
1753363201686 ms | 530084c918d1 | multi_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.3:35516: Failed connecting to publisher 795ca3977490:40453: Connection refused
1753363201687 ms | 530084c918d1 | multi_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.3:35518: Failed connecting to publisher 795ca3977490:40453: Connection refused
1753363201687 ms | 530084c918d1 | multi_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.3:35526: Failed connecting to publisher 795ca3977490:40453: Connection refused
1753363201688 ms | 530084c918d1 | multi_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.3:35538: Failed connecting to publisher 795ca3977490:40453: Connection refused
1753363201688 ms | 530084c918d1 | multi_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.3:35540: Failed connecting to publisher 795ca3977490:40453: Connection refused
1753363201706 ms | 530084c918d1 | multi_subscriber | 7 | error | CTCPReaderLayer - TCPPubSub (Error) -SubscriberSession 172.18.0.3:45688-&gt;e0fe418d16d2:43753: Error reading header length: End of file
1753363201707 ms | 530084c918d1 | multi_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.3:42604: Failed connecting to publisher e0fe418d16d2:43753: Connection refused
1753363201707 ms | 530084c918d1 | multi_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.3:42610: Failed connecting to publisher e0fe418d16d2:43753: Connection refused
1753363201708 ms | 530084c918d1 | multi_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.3:42616: Failed connecting to publisher e0fe418d16d2:43753: Connection refused
1753363201708 ms | 530084c918d1 | multi_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.3:42626: Failed connecting to publisher e0fe418d16d2:43753: Connection refused
1753363201709 ms | 530084c918d1 | multi_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.3:42640: Failed connecting to publisher e0fe418d16d2:43753: Connection refused

=== [Subscriber 2] Received Message Summary ===
PUB1 messages (42):--------------&gt; 10/10
PUB2 messages (43):-------------&gt; 10/10
[Subscriber 2] [✓] Received messages from both publishers.

</msg>
<arg>\n[CONTAINER LOG: SUBSCRIBER 1]\n${log2}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-24T13:20:06.908249" elapsed="0.000200"/>
</kw>
<kw name="Wait For Container Exit" owner="DockerLibrary">
<arg>${SUB1}</arg>
<status status="PASS" start="2025-07-24T13:20:06.908523" elapsed="0.001034"/>
</kw>
<kw name="Wait For Container Exit" owner="DockerLibrary">
<arg>${SUB2}</arg>
<status status="PASS" start="2025-07-24T13:20:06.909639" elapsed="0.000952"/>
</kw>
<kw name="Wait For Container Exit" owner="DockerLibrary">
<arg>${PUB1}</arg>
<status status="PASS" start="2025-07-24T13:20:06.910673" elapsed="0.000922"/>
</kw>
<kw name="Wait For Container Exit" owner="DockerLibrary">
<arg>${PUB2}</arg>
<status status="PASS" start="2025-07-24T13:20:06.911676" elapsed="0.000920"/>
</kw>
<kw name="Wait For Container Exit" owner="DockerLibrary">
<msg time="2025-07-24T13:20:06.913537" level="INFO">${exit1} = 0</msg>
<var>${exit1}</var>
<arg>${SUB1}</arg>
<status status="PASS" start="2025-07-24T13:20:06.912679" elapsed="0.000882"/>
</kw>
<kw name="Wait For Container Exit" owner="DockerLibrary">
<msg time="2025-07-24T13:20:06.914484" level="INFO">${exit2} = 0</msg>
<var>${exit2}</var>
<arg>${SUB2}</arg>
<status status="PASS" start="2025-07-24T13:20:06.913641" elapsed="0.000865"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-24T13:20:06.914717" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit1}</arg>
<arg>0</arg>
<arg>Subscriber 1 failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-24T13:20:06.914586" elapsed="0.000174"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-24T13:20:06.914976" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit2}</arg>
<arg>0</arg>
<arg>Subscriber 2 failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-24T13:20:06.914866" elapsed="0.000268"/>
</kw>
<kw name="Log Test Summary" owner="DockerLibrary">
<arg>Multi Pub/Sub Test ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-07-24T13:20:06.915210" elapsed="0.000166"/>
</kw>
<kw name="Stop Container" owner="DockerLibrary">
<arg>${SUB1}</arg>
<status status="PASS" start="2025-07-24T13:20:06.915469" elapsed="0.005248"/>
</kw>
<kw name="Stop Container" owner="DockerLibrary">
<arg>${SUB2}</arg>
<status status="PASS" start="2025-07-24T13:20:06.920806" elapsed="0.005243"/>
</kw>
<kw name="Stop Container" owner="DockerLibrary">
<arg>${PUB1}</arg>
<status status="PASS" start="2025-07-24T13:20:06.926134" elapsed="0.004898"/>
</kw>
<kw name="Stop Container" owner="DockerLibrary">
<arg>${PUB2}</arg>
<status status="PASS" start="2025-07-24T13:20:06.931117" elapsed="0.004997"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-24T13:20:07.936479" level="INFO">Slept 1 second.</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-24T13:20:06.936204" elapsed="1.000397"/>
</kw>
<arg>network_tcp</arg>
<arg>network</arg>
<status status="PASS" start="2025-07-24T13:19:48.402315" elapsed="19.534383"/>
</kw>
<tag>multi_pub_sub_network_tcp</tag>
<status status="PASS" start="2025-07-24T13:19:48.401858" elapsed="19.534965"/>
</test>
<status status="FAIL" start="2025-07-24T13:18:20.210732" elapsed="107.727256"/>
</suite>
<suite id="s1-s3" name="Network Crash" source="/home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/network_crash/robottests/network_crash.robot">
<kw name="Init Test Context" type="SETUP">
<kw name="Set Test Context" owner="GlobalPathsLibrary">
<arg>network_crash</arg>
<arg>network_crash</arg>
<doc>Sets the test folder and tag prefix if it's a valid test case.
The folder must exist under integration_tests/ and contain typical test structure.</doc>
<status status="PASS" start="2025-07-24T13:20:07.941371" elapsed="0.000137"/>
</kw>
<kw name="Get Build Script Path" owner="GlobalPathsLibrary">
<msg time="2025-07-24T13:20:07.941678" level="INFO">${build} = /home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/network_crash/scripts/build_images.sh</msg>
<var>${build}</var>
<status status="PASS" start="2025-07-24T13:20:07.941588" elapsed="0.000110"/>
</kw>
<kw name="Get Network Name" owner="GlobalPathsLibrary">
<msg time="2025-07-24T13:20:07.941849" level="INFO">${net} = ecal_test_net</msg>
<var>${net}</var>
<status status="PASS" start="2025-07-24T13:20:07.941763" elapsed="0.000103"/>
</kw>
<kw name="Get Build Script Args" owner="GlobalPathsLibrary">
<msg time="2025-07-24T13:20:07.942002" level="INFO">${args} = ['network_crash']</msg>
<var>${args}</var>
<status status="PASS" start="2025-07-24T13:20:07.941927" elapsed="0.000091"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-07-24T13:20:07.942225" level="INFO">${BUILD_SCRIPT} = /home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/network_crash/scripts/build_images.sh</msg>
<arg>${BUILD_SCRIPT}</arg>
<arg>${build}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-07-24T13:20:07.942094" elapsed="0.000159"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-07-24T13:20:07.942484" level="INFO">${NETWORK} = ecal_test_net</msg>
<arg>${NETWORK}</arg>
<arg>${net}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-07-24T13:20:07.942361" elapsed="0.000152"/>
</kw>
<kw name="Get Test Description" owner="GlobalPathsLibrary">
<msg time="2025-07-24T13:20:07.942767" level="INFO">${desc} = Test Objective:
Verify that local UDP-based communication remains functional even if a separate network UDP publisher is disconnected —
simulating a network failure scenario such as a cable unplug.

T...</msg>
<var>${desc}</var>
<doc>Reads the *** Comments *** section from the .robot file and returns it as a string.</doc>
<status status="PASS" start="2025-07-24T13:20:07.942581" elapsed="0.000209"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-24T13:20:07.942952" level="INFO">Test Objective:
Verify that local UDP-based communication remains functional even if a separate network UDP publisher is disconnected —
simulating a network failure scenario such as a cable unplug.

Test Context:
This test validates the robustness of eCAL's UDP transport layer under fault conditions by ensuring that
local communication is not affected by network-layer interruptions.

Test Scenario:
1. A local UDP subscriber and two local UDP publishers run in the **same container** using eCAL's local mode.
- Publisher 1 sends payloads with value 42 from the beginning.
- Publisher 2 sends value 44, but only **after the network publisher is disconnected** (simulated delay).

2. A network UDP publisher runs in a **separate container**, using eCAL network mode and sends value 43.

3. All publishers run in parallel for a defined period (publisher 2 starts delayed after ~7s).

4. The test then **disconnects** the network UDP publisher from the Docker network.

Success Criteria:
- The subscriber receives:
• Messages with value 42 throughout the test.
• Messages with value 43 only **before** the disconnection.
• Messages with value 44 after the network crash (i.e., from local UDP Publisher 2).
- The subscriber container exits with code 0.
- The log confirms all expected messages have been received.

Note:
This test ensures **fault isolation** between local and network layers in eCAL middleware.</msg>
<arg>${desc}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-24T13:20:07.942863" elapsed="0.000127"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>[SETUP] Building image...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T13:20:07.943056" elapsed="0.000085"/>
</kw>
<kw name="Run Process" owner="Process">
<msg time="2025-07-24T13:20:07.943421" level="INFO">Starting process:
/home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/network_crash/scripts/build_images.sh network_crash</msg>
<msg time="2025-07-24T13:20:07.943842" level="INFO">Waiting for process to complete.</msg>
<msg time="2025-07-24T13:20:16.650042" level="INFO">Process completed.</msg>
<msg time="2025-07-24T13:20:16.650215" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<var>${result}</var>
<arg>${BUILD_SCRIPT}</arg>
<arg>@{args}</arg>
<doc>Runs a process and waits for it to complete.</doc>
<status status="PASS" start="2025-07-24T13:20:07.943238" elapsed="8.707001"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-24T13:20:16.650926" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${result.rc}</arg>
<arg>0</arg>
<arg>Docker image build failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-24T13:20:16.650434" elapsed="0.000541"/>
</kw>
<kw name="Create Docker Network" owner="DockerLibrary">
<arg>${NETWORK}</arg>
<status status="PASS" start="2025-07-24T13:20:16.651062" elapsed="0.007007"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-24T13:20:18.658480" level="INFO">Slept 2 seconds.</msg>
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-24T13:20:16.658186" elapsed="2.000404"/>
</kw>
<status status="PASS" start="2025-07-24T13:20:07.941193" elapsed="10.717479"/>
</kw>
<test id="s1-s3-t1" name="Local communication survives Network crash" line="45">
<kw name="Run Network Crash Survival Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T13:20:18.659883" level="INFO">${IMAGE} = network_crash_local_udp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_local_udp</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T13:20:18.659747" elapsed="0.000157"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T13:20:18.660067" level="INFO">${TOPIC} = test_topic</msg>
<var>${TOPIC}</var>
<arg>test_topic</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T13:20:18.659976" elapsed="0.000108"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T13:20:18.660224" level="INFO">${NET_PUB} = udp_network_pub</msg>
<var>${NET_PUB}</var>
<arg>udp_network_pub</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T13:20:18.660148" elapsed="0.000091"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T13:20:18.660400" level="INFO">${LOCAL_ALL} = udp_local_all</msg>
<var>${LOCAL_ALL}</var>
<arg>udp_local_all</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T13:20:18.660319" elapsed="0.000098"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n\n[INFO] Starting "LOCAL UDP (PUB1 + SUB + PUB3)" in one container and "NETWORK UDP (PUB2)" separately...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T13:20:18.660484" elapsed="0.000095"/>
</kw>
<kw name="Start Container" owner="DockerLibrary">
<arg>${LOCAL_ALL}</arg>
<arg>${IMAGE}</arg>
<arg>udp_local_all</arg>
<arg>${TOPIC}</arg>
<arg>${LOCAL_ALL}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-24T13:20:18.660663" elapsed="0.132311"/>
</kw>
<kw name="Start Container" owner="DockerLibrary">
<arg>${NET_PUB}</arg>
<arg>${IMAGE}</arg>
<arg>udp_network_pub</arg>
<arg>${TOPIC}</arg>
<arg>${NET_PUB}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-24T13:20:18.793164" elapsed="0.122232"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Letting PUB1 and PUB2 run in parallel for 7s...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T13:20:18.915631" elapsed="0.000203"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-24T13:20:25.916206" level="INFO">Slept 7 seconds.</msg>
<arg>7s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-24T13:20:18.915939" elapsed="7.000408"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[SIMULATION] Disconnecting NETWORK UDP Publisher..</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T13:20:25.916518" elapsed="0.000177"/>
</kw>
<kw name="Get Container Logs" owner="DockerLibrary">
<msg time="2025-07-24T13:20:25.919356" level="INFO">${log_net} = [Entrypoint] Starting network UDP publisher...
[Publisher] Waiting for at least 1 subscriber(s) on topic: test_topic
[Publisher] Found 1 subscriber(s). Proceeding to send messages.
</msg>
<var>${log_net}</var>
<arg>${NET_PUB}</arg>
<status status="PASS" start="2025-07-24T13:20:25.916807" elapsed="0.002574"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-24T13:20:25.919580" level="INFO">
[LOG: NETWORK UDP PUB2 CONTAINER]
[Entrypoint] Starting network UDP publisher...
[Publisher] Waiting for at least 1 subscriber(s) on topic: test_topic
[Publisher] Found 1 subscriber(s). Proceeding to send messages.
</msg>
<arg>\n[LOG: NETWORK UDP PUB2 CONTAINER]\n${log_net}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-24T13:20:25.919469" elapsed="0.000144"/>
</kw>
<kw name="Disconnect Container From Network">
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[SIMULATION] Disconnecting ${container} from ${network} (simulate network failure)...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T13:20:25.919988" elapsed="0.000153"/>
</kw>
<kw name="Run Process" owner="Process">
<msg time="2025-07-24T13:20:25.920456" level="INFO">Starting process:
docker network disconnect ecal_test_net udp_network_pub</msg>
<msg time="2025-07-24T13:20:25.921161" level="INFO">Waiting for process to complete.</msg>
<msg time="2025-07-24T13:20:25.965044" level="INFO">Process completed.</msg>
<msg time="2025-07-24T13:20:25.965248" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<var>${result}</var>
<arg>docker</arg>
<arg>network</arg>
<arg>disconnect</arg>
<arg>${network}</arg>
<arg>${container}</arg>
<doc>Runs a process and waits for it to complete.</doc>
<status status="PASS" start="2025-07-24T13:20:25.920243" elapsed="0.045054"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-24T13:20:25.966084" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${result.rc}</arg>
<arg>0</arg>
<arg>Failed to disconnect ${container} from ${network}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-24T13:20:25.965503" elapsed="0.000632"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-24T13:20:26.966498" level="INFO">Slept 1 second.</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-24T13:20:25.966224" elapsed="1.000393"/>
</kw>
<arg>${NET_PUB}</arg>
<arg>${NETWORK}</arg>
<status status="PASS" start="2025-07-24T13:20:25.919743" elapsed="1.046969"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-24T13:20:59.967163" level="INFO">Slept 33 seconds.</msg>
<arg>33s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-24T13:20:26.966852" elapsed="33.000450"/>
</kw>
<kw name="Get Container Logs" owner="DockerLibrary">
<msg time="2025-07-24T13:20:59.970549" level="INFO">${log_local} = [Entrypoint] Starting UDP subscriber, then UDP publisher...
[Publisher] Waiting for at least 1 subscriber(s) on topic: test_topic
[Publisher] Found 1 subscriber(s). Proceeding to send messages.
[Subsc...</msg>
<var>${log_local}</var>
<arg>${LOCAL_ALL}</arg>
<status status="PASS" start="2025-07-24T13:20:59.967465" elapsed="0.003111"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[LOG: LOCAL UDP PUB + SUB + PUB3 CONTAINER]\n${log_local}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T13:20:59.970681" elapsed="0.000170"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-24T13:20:59.971111" level="INFO">
[LOG: LOCAL UDP PUB + SUB + PUB3 CONTAINER]
[Entrypoint] Starting UDP subscriber, then UDP publisher...
[Publisher] Waiting for at least 1 subscriber(s) on topic: test_topic
[Publisher] Found 1 subscriber(s). Proceeding to send messages.
[Subscriber] Listening on topic 'test_topic'...
[Subscriber] Received: 42
[Subscriber] Received: 43
[Subscriber] Received: 42
[Subscriber] Received: 43
[Subscriber] Received: 42
[Subscriber] Received: 43
[Subscriber] Received: 42
[Subscriber] Received: 43
[Subscriber] Received: 42
[Subscriber] Received: 43
[Subscriber] Received: 42
[Subscriber] Received: 42
[Subscriber] Received: 42
[Subscriber] Received: 42
[Entrypoint] Starting delayed LOCAL UDP Publisher 2 after network failure...
[Publisher] Waiting for at least 1 subscriber(s) on topic: test_topic
[Publisher] Found 1 subscriber(s). Proceeding to send messages.
[Subscriber] Received: 42
[Subscriber] Received: 42
[Subscriber] Received: 44
[Subscriber] Received: 42
[Subscriber] Received: 44
[Subscriber] Received: 42
[Subscriber] Received: 44
[Subscriber] Received: 42
[Subscriber] Received: 44
[Subscriber] Received: 42
[Subscriber] Received: 44
[Subscriber] Received: 42
[Subscriber] Received: 44
[Subscriber] Received: 42
[Subscriber] Received: 44
[Subscriber] Received: 42
[Subscriber] Received: 44
[Subscriber] Received: 42
[Subscriber] Received: 44
[Subscriber] Received: 42
[Subscriber] Received: 44
[Subscriber] Received: 42
[Subscriber] Received: 44
[Subscriber] Received: 42
[Subscriber] Received: 44
[Subscriber] Received: 42
[Subscriber] Received: 44
[Subscriber] Received: 42
[Subscriber] Received: 44
[Subscriber] Received: 42
[Subscriber] Received: 44

=== Message Summary ===

Local UDP PUB1 messages (42):--------------&gt; 25/25
Network UDP PUB2 messages (43):-------------&gt; 5/25
Local UDP PUB3 messages after crash (44):--&gt; 15/15


[✓] All expected messages received: local before and after crash, and network.
[Entrypoint] Subscriber exited with code 0
</msg>
<arg>\n[LOG: LOCAL UDP PUB + SUB + PUB3 CONTAINER]\n${log_local}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-24T13:20:59.970961" elapsed="0.000306"/>
</kw>
<kw name="Wait For Container Exit" owner="DockerLibrary">
<arg>${LOCAL_ALL}</arg>
<status status="PASS" start="2025-07-24T13:20:59.971400" elapsed="0.001137"/>
</kw>
<kw name="Wait For Container Exit" owner="DockerLibrary">
<msg time="2025-07-24T13:20:59.973502" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>${LOCAL_ALL}</arg>
<status status="PASS" start="2025-07-24T13:20:59.972623" elapsed="0.000902"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-24T13:20:59.973741" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>LOCAL container (PUB + SUB + PUB3) failed unexpectedly!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-24T13:20:59.973607" elapsed="0.000178"/>
</kw>
<kw name="Log Test Summary" owner="DockerLibrary">
<arg>Network Crash Test with Local Recovery Publisher</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-07-24T13:20:59.973870" elapsed="0.000126"/>
</kw>
<status status="PASS" start="2025-07-24T13:20:18.659298" elapsed="41.314762"/>
</kw>
<tag>network_crash_test</tag>
<status status="PASS" start="2025-07-24T13:20:18.658808" elapsed="41.315334"/>
</test>
<status status="PASS" start="2025-07-24T13:20:07.938640" elapsed="52.036288"/>
</suite>
<suite id="s1-s4" name="Pub Crash" source="/home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/pub_crash/robottests/pub_crash.robot">
<kw name="Init Test Context" type="SETUP">
<kw name="Set Test Context" owner="GlobalPathsLibrary">
<arg>pub_crash</arg>
<arg>pub_crash</arg>
<doc>Sets the test folder and tag prefix if it's a valid test case.
The folder must exist under integration_tests/ and contain typical test structure.</doc>
<status status="PASS" start="2025-07-24T13:20:59.978102" elapsed="0.000122"/>
</kw>
<kw name="Get Build Script Path" owner="GlobalPathsLibrary">
<msg time="2025-07-24T13:20:59.978423" level="INFO">${build} = /home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/pub_crash/scripts/build_images.sh</msg>
<var>${build}</var>
<status status="PASS" start="2025-07-24T13:20:59.978326" elapsed="0.000117"/>
</kw>
<kw name="Get Network Name" owner="GlobalPathsLibrary">
<msg time="2025-07-24T13:20:59.978592" level="INFO">${net} = ecal_test_net</msg>
<var>${net}</var>
<status status="PASS" start="2025-07-24T13:20:59.978508" elapsed="0.000101"/>
</kw>
<kw name="Get Build Script Args" owner="GlobalPathsLibrary">
<msg time="2025-07-24T13:20:59.978748" level="INFO">${args} = ['pub_crash']</msg>
<var>${args}</var>
<status status="PASS" start="2025-07-24T13:20:59.978671" elapsed="0.000095"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-07-24T13:20:59.978968" level="INFO">${BUILD_SCRIPT} = /home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/pub_crash/scripts/build_images.sh</msg>
<arg>${BUILD_SCRIPT}</arg>
<arg>${build}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-07-24T13:20:59.978838" elapsed="0.000158"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-07-24T13:20:59.979180" level="INFO">${NETWORK} = ecal_test_net</msg>
<arg>${NETWORK}</arg>
<arg>${net}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-07-24T13:20:59.979069" elapsed="0.000137"/>
</kw>
<kw name="Get Test Description" owner="GlobalPathsLibrary">
<msg time="2025-07-24T13:20:59.979453" level="INFO">${desc} = Test Objective:
Ensure that communication to the subscriber continues even if one publisher crashes.

Test Scenario:
- Two publishers are started:
1. crash_publisher: sends a few messages (value 42) a...</msg>
<var>${desc}</var>
<doc>Reads the *** Comments *** section from the .robot file and returns it as a string.</doc>
<status status="PASS" start="2025-07-24T13:20:59.979294" elapsed="0.000179"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-24T13:20:59.979626" level="INFO">Test Objective:
Ensure that communication to the subscriber continues even if one publisher crashes.

Test Scenario:
- Two publishers are started:
1. crash_publisher: sends a few messages (value 42) and then crashes.
2. test_publisher: continuously sends messages (value 43).
- One subscriber receives data from both publishers.
- A monitoring process tracks process appearance.

Success Criteria:
- Subscriber receives enough messages with value 43 after crash_publisher crashes.
- Subscriber exits with code 0, indicating continued communication.
- All containers terminate cleanly.</msg>
<arg>${desc}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-24T13:20:59.979543" elapsed="0.000114"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>[SETUP] Building Docker image...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T13:20:59.979722" elapsed="0.000093"/>
</kw>
<kw name="Run Process" owner="Process">
<msg time="2025-07-24T13:20:59.980047" level="INFO">Starting process:
/home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/pub_crash/scripts/build_images.sh pub_crash</msg>
<msg time="2025-07-24T13:20:59.980433" level="INFO">Waiting for process to complete.</msg>
<msg time="2025-07-24T13:21:08.797835" level="INFO">Process completed.</msg>
<msg time="2025-07-24T13:21:08.798004" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<var>${result}</var>
<arg>${BUILD_SCRIPT}</arg>
<arg>@{args}</arg>
<doc>Runs a process and waits for it to complete.</doc>
<status status="PASS" start="2025-07-24T13:20:59.979897" elapsed="8.818132"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-24T13:21:08.798705" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${result.rc}</arg>
<arg>0</arg>
<arg>Docker build failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-24T13:21:08.798182" elapsed="0.000614"/>
</kw>
<kw name="Create Docker Network" owner="DockerLibrary">
<arg>${NETWORK}</arg>
<status status="PASS" start="2025-07-24T13:21:08.798881" elapsed="0.007031"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-24T13:21:11.806239" level="INFO">Slept 3 seconds.</msg>
<arg>3s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-24T13:21:08.806019" elapsed="3.000341"/>
</kw>
<status status="PASS" start="2025-07-24T13:20:59.977969" elapsed="11.828474"/>
</kw>
<test id="s1-s4-t1" name="Communication Continues After Publisher Crash (UDP)" line="30">
<kw name="Run Network Communication Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T13:21:11.807708" level="INFO">${IMAGE} = pub_crash_network_udp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T13:21:11.807559" elapsed="0.000169"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T13:21:11.807882" level="INFO">${TOPIC} = test_topic</msg>
<var>${TOPIC}</var>
<arg>test_topic</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T13:21:11.807801" elapsed="0.000097"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T13:21:11.808063" level="INFO">${CRASH_PUB} = crash_pub_network_udp</msg>
<var>${CRASH_PUB}</var>
<arg>crash_pub_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T13:21:11.807963" elapsed="0.000117"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T13:21:11.808240" level="INFO">${TEST_PUB} = test_pub_network_udp</msg>
<var>${TEST_PUB}</var>
<arg>test_pub_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T13:21:11.808143" elapsed="0.000114"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T13:21:11.808442" level="INFO">${SUB_NAME} = sub_network_udp</msg>
<var>${SUB_NAME}</var>
<arg>sub_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T13:21:11.808339" elapsed="0.000119"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Starting communication continuity test with ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T13:21:11.808522" elapsed="0.000128"/>
</kw>
<kw name="Start Container" owner="DockerLibrary">
<arg>${SUB_NAME}</arg>
<arg>${IMAGE}</arg>
<arg>subscriber</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-24T13:21:11.808749" elapsed="0.132720"/>
</kw>
<kw name="Start Container" owner="DockerLibrary">
<arg>${CRASH_PUB}</arg>
<arg>${IMAGE}</arg>
<arg>crash_publisher</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-24T13:21:11.941656" elapsed="0.118815"/>
</kw>
<kw name="Start Container" owner="DockerLibrary">
<arg>${TEST_PUB}</arg>
<arg>${IMAGE}</arg>
<arg>test_publisher</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${TEST_PUB}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-24T13:21:12.060680" elapsed="0.120816"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-24T13:21:47.181961" level="INFO">Slept 35 seconds.</msg>
<arg>35s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-24T13:21:12.181674" elapsed="35.000397"/>
</kw>
<kw name="Get Container Logs" owner="DockerLibrary">
<msg time="2025-07-24T13:21:47.185077" level="INFO">${sub_logs} = [Entrypoint] Starting crash subscriber in mode network_udp

[Subscriber] Registering callback and waiting for messages...

[Subscriber] Received value: 42
[Subscriber] Received value: 43
[Subscriber] ...</msg>
<var>${sub_logs}</var>
<arg>${SUB_NAME}</arg>
<status status="PASS" start="2025-07-24T13:21:47.182223" elapsed="0.002880"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[SUBSCRIBER CONTAINER OUTPUT]\n${sub_logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T13:21:47.185197" elapsed="0.000184"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-24T13:21:47.185617" level="INFO">
[SUBSCRIBER CONTAINER OUTPUT]
[Entrypoint] Starting crash subscriber in mode network_udp

[Subscriber] Registering callback and waiting for messages...

[Subscriber] Received value: 42
[Subscriber] Received value: 43
[Subscriber] Received value: 42
[Subscriber] Received value: 43
[Subscriber] Received value: 42
[Subscriber] Received value: 43
[Subscriber] Received value: 42
[Subscriber] Received value: 43
[Subscriber] Received value: 42
[Subscriber] Received value: 43
[Subscriber] Received value: 42
[Subscriber] Received value: 43
[Subscriber] Received value: 42
[Subscriber] Received value: 43
[Subscriber] Received value: 42
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Summary] Received 8 x 42 (crash pub), 25 x 43 (test pub)

[✓] Communication continued after crash!

[✓] One Publisher crashed and no more messages received from the crashed publisher!
</msg>
<arg>\n[SUBSCRIBER CONTAINER OUTPUT]\n${sub_logs}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-24T13:21:47.185478" elapsed="0.000206"/>
</kw>
<kw name="Get Container Logs" owner="DockerLibrary">
<msg time="2025-07-24T13:21:47.188058" level="INFO">${crash_logs} = [Entrypoint] Starting crash publisher in mode network_udp
[Publisher] Waiting for at least 1 subscriber(s) on topic: test_topic
[Publisher] Found 1 subscriber(s). Proceeding to send messages.
[Crash P...</msg>
<var>${crash_logs}</var>
<arg>${CRASH_PUB}</arg>
<status status="PASS" start="2025-07-24T13:21:47.185796" elapsed="0.002286"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[CRASH PUBLISHER OUTPUT]\n${crash_logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T13:21:47.188164" elapsed="0.000159"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-24T13:21:47.188555" level="INFO">
[CRASH PUBLISHER OUTPUT]
[Entrypoint] Starting crash publisher in mode network_udp
[Publisher] Waiting for at least 1 subscriber(s) on topic: test_topic
[Publisher] Found 1 subscriber(s). Proceeding to send messages.
[Crash Publisher] Starting and will crash after 10 messages...
[Crash Publisher] Sent buffer with content: 42 (message 1)
[Crash Publisher] Sent buffer with content: 42 (message 2)
[Crash Publisher] Sent buffer with content: 42 (message 3)
[Crash Publisher] Sent buffer with content: 42 (message 4)
[Crash Publisher] Sent buffer with content: 42 (message 5)
[Crash Publisher] Sent buffer with content: 42 (message 6)
[Crash Publisher] Sent buffer with content: 42 (message 7)
[Crash Publisher] Sent buffer with content: 42 (message 8)
[Crash Publisher] Crashing after message 7
./entrypoint.sh: line 60:     7 Aborted                 (core dumped) ./crash_publisher $ARGS $EXTRA
</msg>
<arg>\n[CRASH PUBLISHER OUTPUT]\n${crash_logs}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-24T13:21:47.188429" elapsed="0.000162"/>
</kw>
<kw name="Wait For Container Exit" owner="DockerLibrary">
<arg>${SUB_NAME}</arg>
<status status="PASS" start="2025-07-24T13:21:47.188704" elapsed="0.000982"/>
</kw>
<kw name="Wait For Container Exit" owner="DockerLibrary">
<arg>${CRASH_PUB}</arg>
<status status="PASS" start="2025-07-24T13:21:47.189768" elapsed="0.000945"/>
</kw>
<kw name="Wait For Container Exit" owner="DockerLibrary">
<arg>${TEST_PUB}</arg>
<status status="PASS" start="2025-07-24T13:21:47.190794" elapsed="0.000955"/>
</kw>
<kw name="Wait For Container Exit" owner="DockerLibrary">
<msg time="2025-07-24T13:21:47.192681" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>${SUB_NAME}</arg>
<status status="PASS" start="2025-07-24T13:21:47.191833" elapsed="0.000870"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-24T13:21:47.192918" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Communication failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-24T13:21:47.192785" elapsed="0.000177"/>
</kw>
<kw name="Log Test Summary" owner="DockerLibrary">
<arg>Network Communication after one Publisher crash ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-07-24T13:21:47.193037" elapsed="0.000136"/>
</kw>
<kw name="Stop Container" owner="DockerLibrary">
<arg>${SUB_NAME}</arg>
<status status="PASS" start="2025-07-24T13:21:47.193264" elapsed="0.005405"/>
</kw>
<kw name="Stop Container" owner="DockerLibrary">
<arg>${CRASH_PUB}</arg>
<status status="PASS" start="2025-07-24T13:21:47.198751" elapsed="0.005042"/>
</kw>
<kw name="Stop Container" owner="DockerLibrary">
<arg>${TEST_PUB}</arg>
<status status="PASS" start="2025-07-24T13:21:47.203877" elapsed="0.005282"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-24T13:21:48.209515" level="INFO">Slept 1 second.</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-24T13:21:47.209245" elapsed="1.000390"/>
</kw>
<arg>network_udp</arg>
<arg>network</arg>
<status status="PASS" start="2025-07-24T13:21:11.807030" elapsed="36.402698"/>
</kw>
<tag>pub_crash_network_udp</tag>
<status status="PASS" start="2025-07-24T13:21:11.806506" elapsed="36.403343"/>
</test>
<test id="s1-s4-t2" name="Communication Continues After Publisher Crash (TCP)" line="34">
<kw name="Run Network Communication Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T13:21:48.211734" level="INFO">${IMAGE} = pub_crash_network_tcp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T13:21:48.211585" elapsed="0.000170"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T13:21:48.211922" level="INFO">${TOPIC} = test_topic</msg>
<var>${TOPIC}</var>
<arg>test_topic</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T13:21:48.211830" elapsed="0.000109"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T13:21:48.212107" level="INFO">${CRASH_PUB} = crash_pub_network_tcp</msg>
<var>${CRASH_PUB}</var>
<arg>crash_pub_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T13:21:48.212005" elapsed="0.000117"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T13:21:48.212309" level="INFO">${TEST_PUB} = test_pub_network_tcp</msg>
<var>${TEST_PUB}</var>
<arg>test_pub_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T13:21:48.212185" elapsed="0.000144"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T13:21:48.212497" level="INFO">${SUB_NAME} = sub_network_tcp</msg>
<var>${SUB_NAME}</var>
<arg>sub_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T13:21:48.212397" elapsed="0.000116"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Starting communication continuity test with ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T13:21:48.212578" elapsed="0.000115"/>
</kw>
<kw name="Start Container" owner="DockerLibrary">
<arg>${SUB_NAME}</arg>
<arg>${IMAGE}</arg>
<arg>subscriber</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-24T13:21:48.212782" elapsed="0.136531"/>
</kw>
<kw name="Start Container" owner="DockerLibrary">
<arg>${CRASH_PUB}</arg>
<arg>${IMAGE}</arg>
<arg>crash_publisher</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-24T13:21:48.349538" elapsed="0.125877"/>
</kw>
<kw name="Start Container" owner="DockerLibrary">
<arg>${TEST_PUB}</arg>
<arg>${IMAGE}</arg>
<arg>test_publisher</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${TEST_PUB}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-24T13:21:48.475578" elapsed="0.124515"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-24T13:22:23.600646" level="INFO">Slept 35 seconds.</msg>
<arg>35s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-24T13:21:48.600267" elapsed="35.000504"/>
</kw>
<kw name="Get Container Logs" owner="DockerLibrary">
<msg time="2025-07-24T13:22:23.604095" level="INFO">${sub_logs} = [Entrypoint] Starting crash subscriber in mode network_tcp

[Subscriber] Registering callback and waiting for messages...

[Subscriber] Received value: 42
[Subscriber] Received value: 43
[Subscriber] ...</msg>
<var>${sub_logs}</var>
<arg>${SUB_NAME}</arg>
<status status="PASS" start="2025-07-24T13:22:23.600945" elapsed="0.003177"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[SUBSCRIBER CONTAINER OUTPUT]\n${sub_logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T13:22:23.604217" elapsed="0.000216"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-24T13:22:23.604697" level="INFO">
[SUBSCRIBER CONTAINER OUTPUT]
[Entrypoint] Starting crash subscriber in mode network_tcp

[Subscriber] Registering callback and waiting for messages...

[Subscriber] Received value: 42
[Subscriber] Received value: 43
[Subscriber] Received value: 42
[Subscriber] Received value: 43
[Subscriber] Received value: 42
[Subscriber] Received value: 43
[Subscriber] Received value: 42
[Subscriber] Received value: 43
[Subscriber] Received value: 42
[Subscriber] Received value: 43
[Subscriber] Received value: 42
[Subscriber] Received value: 43
[Subscriber] Received value: 42
[Subscriber] Received value: 43
[Subscriber] Received value: 42
[Subscriber] Received value: 43
[Subscriber] Received value: 43
1753363319215 ms | 0e712c86fbd5 | ./test_subscriber | 7 | error | CTCPReaderLayer - TCPPubSub (Error) -SubscriberSession 172.18.0.2:58020-&gt;45bd73352dc9:46765: Error reading header length: End of file
1753363319216 ms | 0e712c86fbd5 | ./test_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:33410: Failed connecting to publisher 45bd73352dc9:46765: Connection refused
1753363319216 ms | 0e712c86fbd5 | ./test_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:33422: Failed connecting to publisher 45bd73352dc9:46765: Connection refused
1753363319217 ms | 0e712c86fbd5 | ./test_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:33426: Failed connecting to publisher 45bd73352dc9:46765: Connection refused
1753363319218 ms | 0e712c86fbd5 | ./test_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:33442: Failed connecting to publisher 45bd73352dc9:46765: Connection refused
1753363319219 ms | 0e712c86fbd5 | ./test_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:33450: Failed connecting to publisher 45bd73352dc9:46765: Connection refused
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Subscriber] Received value: 43
[Subscriber] Received value: 43
1753363335908 ms | 0e712c86fbd5 | ./test_subscriber | 7 | error | CTCPReaderLayer - TCPPubSub (Error) -SubscriberSession 172.18.0.2:48790-&gt;468b7ef3e4fc:41441: Error reading header length: End of file
1753363335908 ms | 0e712c86fbd5 | ./test_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:39266: Failed connecting to publisher 468b7ef3e4fc:41441: Connection refused
1753363335909 ms | 0e712c86fbd5 | ./test_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:39282: Failed connecting to publisher 468b7ef3e4fc:41441: Connection refused
1753363335909 ms | 0e712c86fbd5 | ./test_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:39284: Failed connecting to publisher 468b7ef3e4fc:41441: Connection refused
1753363335910 ms | 0e712c86fbd5 | ./test_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:39298: Failed connecting to publisher 468b7ef3e4fc:41441: Connection refused
1753363335910 ms | 0e712c86fbd5 | ./test_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:39310: Failed connecting to publisher 468b7ef3e4fc:41441: Connection refused
[Summary] Received 8 x 42 (crash pub), 25 x 43 (test pub)

[✓] Communication continued after crash!

[✓] One Publisher crashed and no more messages received from the crashed publisher!
</msg>
<arg>\n[SUBSCRIBER CONTAINER OUTPUT]\n${sub_logs}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-24T13:22:23.604543" elapsed="0.000313"/>
</kw>
<kw name="Get Container Logs" owner="DockerLibrary">
<msg time="2025-07-24T13:22:23.607165" level="INFO">${crash_logs} = [Entrypoint] Starting crash publisher in mode network_tcp
[Publisher] Waiting for at least 1 subscriber(s) on topic: test_topic
1753363309351 ms | 45bd73352dc9 | ./crash_publisher | 7 | info | CTCPRea...</msg>
<var>${crash_logs}</var>
<arg>${CRASH_PUB}</arg>
<status status="PASS" start="2025-07-24T13:22:23.604943" elapsed="0.002248"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[CRASH PUBLISHER OUTPUT]\n${crash_logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T13:22:23.607298" elapsed="0.000163"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-24T13:22:23.607666" level="INFO">
[CRASH PUBLISHER OUTPUT]
[Entrypoint] Starting crash publisher in mode network_tcp
[Publisher] Waiting for at least 1 subscriber(s) on topic: test_topic
1753363309351 ms | 45bd73352dc9 | ./crash_publisher | 7 | info | CTCPReaderLayer - TCPPubSub (Info) -Publisher :::0: Created publisher and waiting for clients.
1753363309353 ms | 45bd73352dc9 | ./crash_publisher | 7 | info | CTCPReaderLayer - TCPPubSub (Info) -Publisher :::46765: Subscriber ::ffff:172.18.0.2:58020 has connected.
[Publisher] Found 1 subscriber(s). Proceeding to send messages.
[Crash Publisher] Starting and will crash after 10 messages...
[Crash Publisher] Sent buffer with content: 42 (message 1)
[Crash Publisher] Sent buffer with content: 42 (message 2)
[Crash Publisher] Sent buffer with content: 42 (message 3)
[Crash Publisher] Sent buffer with content: 42 (message 4)
[Crash Publisher] Sent buffer with content: 42 (message 5)
[Crash Publisher] Sent buffer with content: 42 (message 6)
[Crash Publisher] Sent buffer with content: 42 (message 7)
[Crash Publisher] Sent buffer with content: 42 (message 8)
[Crash Publisher] Crashing after message 7
./entrypoint.sh: line 60:     7 Aborted                 (core dumped) ./crash_publisher $ARGS $EXTRA
</msg>
<arg>\n[CRASH PUBLISHER OUTPUT]\n${crash_logs}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-24T13:22:23.607561" elapsed="0.000141"/>
</kw>
<kw name="Wait For Container Exit" owner="DockerLibrary">
<arg>${SUB_NAME}</arg>
<status status="PASS" start="2025-07-24T13:22:23.607771" elapsed="0.001003"/>
</kw>
<kw name="Wait For Container Exit" owner="DockerLibrary">
<arg>${CRASH_PUB}</arg>
<status status="PASS" start="2025-07-24T13:22:23.608857" elapsed="0.000943"/>
</kw>
<kw name="Wait For Container Exit" owner="DockerLibrary">
<arg>${TEST_PUB}</arg>
<status status="PASS" start="2025-07-24T13:22:23.609881" elapsed="0.000964"/>
</kw>
<kw name="Wait For Container Exit" owner="DockerLibrary">
<msg time="2025-07-24T13:22:23.611764" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>${SUB_NAME}</arg>
<status status="PASS" start="2025-07-24T13:22:23.610930" elapsed="0.000857"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-24T13:22:23.612002" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Communication failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-24T13:22:23.611868" elapsed="0.000178"/>
</kw>
<kw name="Log Test Summary" owner="DockerLibrary">
<arg>Network Communication after one Publisher crash ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-07-24T13:22:23.612122" elapsed="0.000169"/>
</kw>
<kw name="Stop Container" owner="DockerLibrary">
<arg>${SUB_NAME}</arg>
<status status="PASS" start="2025-07-24T13:22:23.612378" elapsed="0.005092"/>
</kw>
<kw name="Stop Container" owner="DockerLibrary">
<arg>${CRASH_PUB}</arg>
<status status="PASS" start="2025-07-24T13:22:23.617551" elapsed="0.009088"/>
</kw>
<kw name="Stop Container" owner="DockerLibrary">
<arg>${TEST_PUB}</arg>
<status status="PASS" start="2025-07-24T13:22:23.626724" elapsed="0.004866"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-24T13:22:24.631951" level="INFO">Slept 1 second.</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-24T13:22:23.631702" elapsed="1.000368"/>
</kw>
<arg>network_tcp</arg>
<arg>network</arg>
<status status="PASS" start="2025-07-24T13:21:48.211346" elapsed="36.420804"/>
</kw>
<tag>pub_crash_network_tcp</tag>
<status status="PASS" start="2025-07-24T13:21:48.210889" elapsed="36.421375"/>
</test>
<test id="s1-s4-t3" name="Communication Continues After Publisher Crash (SHM)" line="38">
<kw name="Run Local Communication Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T13:22:24.634340" level="INFO">${IMAGE} = pub_crash_local_shm</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T13:22:24.634153" elapsed="0.000210"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T13:22:24.634553" level="INFO">${CONTAINER} = local_all_local_shm</msg>
<var>${CONTAINER}</var>
<arg>local_all_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T13:22:24.634441" elapsed="0.000129"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\nStarting local test container with ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T13:22:24.634638" elapsed="0.000131"/>
</kw>
<kw name="Start Container" owner="DockerLibrary">
<arg>${CONTAINER}</arg>
<arg>${IMAGE}</arg>
<arg>local_all</arg>
<arg>${layer_tag}</arg>
<status status="PASS" start="2025-07-24T13:22:24.634850" elapsed="0.115965"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-24T13:22:59.751391" level="INFO">Slept 35 seconds.</msg>
<arg>35s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-24T13:22:24.751046" elapsed="35.000467"/>
</kw>
<kw name="Get Container Logs" owner="DockerLibrary">
<msg time="2025-07-24T13:22:59.754745" level="INFO">${logs} = [Entrypoint] Starting local test (pub/sub/monitor) in mode local_shm
Shared memory monitoring is enabled (domain: ecal_mon - queue size: 1024)
[Publisher] Waiting for at least 1 subscriber(s) on topic...</msg>
<var>${logs}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-24T13:22:59.751682" elapsed="0.003090"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n\n[CONTAINER LOG: LOCAL PUB+SUB]\n\n${logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T13:22:59.754866" elapsed="0.000185"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-24T13:22:59.755348" level="INFO">

[CONTAINER LOG: LOCAL PUB+SUB]

[Entrypoint] Starting local test (pub/sub/monitor) in mode local_shm
Shared memory monitoring is enabled (domain: ecal_mon - queue size: 1024)
[Publisher] Waiting for at least 1 subscriber(s) on topic: test_topic
Shared memory monitoring is enabled (domain: ecal_mon - queue size: 1024)
[Publisher] Waiting for at least 1 subscriber(s) on topic: test_topic
Shared memory monitoring is enabled (domain: ecal_mon - queue size: 1024)

[Subscriber] Registering callback and waiting for messages...

[Publisher] Found 1 subscriber(s). Proceeding to send messages.
[Publisher] Found 1 subscriber(s). Proceeding to send messages.
[Crash Publisher] Starting and will crash after 10 messages...

 [Test Publisher] Started with mode=local_shm, topic=test_topic, node=test_publisher, count=25, delay=1000ms
[Crash Publisher] Sent buffer with content: 42 (message 1)
[Test Publisher] Sent buffer with content: 43 (message 1)
[Subscriber] Received value: 42
[Crash Publisher] Sent buffer with content: 42 (message 2)
[Subscriber] Received value: 42
[Test Publisher] Sent buffer with content: 43 (message 2)
[Crash Publisher] Sent buffer with content: 42 (message 3)
[Subscriber] Received value: 42
[Test Publisher] Sent buffer with content: 43 (message 3)
[Crash Publisher] Sent buffer with content: 42 (message 4)
[Subscriber] Received value: 42
[Test Publisher] Sent buffer with content: 43 (message 4)
[Crash Publisher] Sent buffer with content: 42 (message 5)
[Subscriber] Received value: 42
[Test Publisher] Sent buffer with content: 43 (message 5)
[Crash Publisher] Sent buffer with content: 42 (message 6)
[Test Publisher] Sent buffer with content: 43 (message 6)
[Subscriber] Received value: 42
[Test Publisher] Sent buffer with content: 43 (message 7)
[Crash Publisher] Sent buffer with content: 42 (message 7)
[Subscriber] Received value: 42
[Test Publisher] Sent buffer with content: 43 (message 8)
[Crash Publisher] Sent buffer with content: 42 (message 8)
[Subscriber] Received value: 42
[Crash Publisher] Crashing after message 7
[Test Publisher] Sent buffer with content: 43 (message 9)
[Test Publisher] Sent buffer with content: 43 (message 10)
[Test Publisher] Sent buffer with content: 43 (message 11)
[Test Publisher] Sent buffer with content: 43 (message 12)
[Test Publisher] Sent buffer with content: 43 (message 13)
[Test Publisher] Sent buffer with content: 43 (message 14)
[Test Publisher] Sent buffer with content: 43 (message 15)
[Test Publisher] Sent buffer with content: 43 (message 16)
[Test Publisher] Sent buffer with content: 43 (message 17)
[Test Publisher] Sent buffer with content: 43 (message 18)
[Test Publisher] Sent buffer with content: 43 (message 19)
[Test Publisher] Sent buffer with content: 43 (message 20)
[Test Publisher] Sent buffer with content: 43 (message 21)
[Test Publisher] Sent buffer with content: 43 (message 22)
[Test Publisher] Sent buffer with content: 43 (message 23)
[Test Publisher] Sent buffer with content: 43 (message 24)
[Test Publisher] Sent buffer with content: 43 (message 25)
[Summary] Received 8 x 42 (crash pub), 0 x 43 (test pub)

[✓] Communication continued after crash!

[✓] One Publisher crashed and no more messages received from the crashed publisher!
./entrypoint.sh: line 55:     7 Aborted                 (core dumped) ./crash_publisher $ARGS
</msg>
<arg>\n\n[CONTAINER LOG: LOCAL PUB+SUB]\n\n${logs}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-24T13:22:59.755160" elapsed="0.000275"/>
</kw>
<kw name="Wait For Container Exit" owner="DockerLibrary">
<msg time="2025-07-24T13:22:59.756677" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-24T13:22:59.755533" elapsed="0.001166"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-24T13:22:59.756924" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Local test failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-24T13:22:59.756790" elapsed="0.000177"/>
</kw>
<kw name="Log Test Summary" owner="DockerLibrary">
<arg>Local Communication after one Publisher crash ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-07-24T13:22:59.757043" elapsed="0.000147"/>
</kw>
<kw name="Stop Container" owner="DockerLibrary">
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-24T13:22:59.757301" elapsed="0.005250"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-24T13:23:00.762877" level="INFO">Slept 1 second.</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-24T13:22:59.762636" elapsed="1.000350"/>
</kw>
<arg>local_shm</arg>
<status status="PASS" start="2025-07-24T13:22:24.633926" elapsed="36.129140"/>
</kw>
<tag>pub_crash_local_shm</tag>
<status status="PASS" start="2025-07-24T13:22:24.633523" elapsed="36.129658"/>
</test>
<status status="PASS" start="2025-07-24T13:20:59.975532" elapsed="120.788325"/>
</suite>
<suite id="s1-s5" name="Rpc N To N Test" source="/home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/rpc_n_to_n_test/robottests/rpc_n_to_n_test.robot">
<kw name="Init Test Context" type="SETUP">
<kw name="Set Test Context" owner="GlobalPathsLibrary">
<arg>rpc_n_to_n_test</arg>
<arg>rpc_n_to_n_test</arg>
<doc>Sets the test folder and tag prefix if it's a valid test case.
The folder must exist under integration_tests/ and contain typical test structure.</doc>
<status status="PASS" start="2025-07-24T13:23:00.767414" elapsed="0.000143"/>
</kw>
<kw name="Get Build Script Path" owner="GlobalPathsLibrary">
<msg time="2025-07-24T13:23:00.767736" level="INFO">${build} = /home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/rpc_n_to_n_test/scripts/build_images.sh</msg>
<var>${build}</var>
<status status="PASS" start="2025-07-24T13:23:00.767647" elapsed="0.000109"/>
</kw>
<kw name="Get Network Name" owner="GlobalPathsLibrary">
<msg time="2025-07-24T13:23:00.767893" level="INFO">${net} = ecal_test_net</msg>
<var>${net}</var>
<status status="PASS" start="2025-07-24T13:23:00.767818" elapsed="0.000092"/>
</kw>
<kw name="Get Build Script Args" owner="GlobalPathsLibrary">
<msg time="2025-07-24T13:23:00.768044" level="INFO">${args} = ['rpc_n_to_n_test']</msg>
<var>${args}</var>
<status status="PASS" start="2025-07-24T13:23:00.767970" elapsed="0.000091"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-07-24T13:23:00.768264" level="INFO">${BUILD_SCRIPT} = /home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/rpc_n_to_n_test/scripts/build_images.sh</msg>
<arg>${BUILD_SCRIPT}</arg>
<arg>${build}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-07-24T13:23:00.768134" elapsed="0.000187"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-07-24T13:23:00.768514" level="INFO">${NETWORK} = ecal_test_net</msg>
<arg>${NETWORK}</arg>
<arg>${net}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-07-24T13:23:00.768398" elapsed="0.000142"/>
</kw>
<kw name="Get Test Description" owner="GlobalPathsLibrary">
<msg time="2025-07-24T13:23:00.768756" level="INFO">${desc} = This test validates N-to-N RPC communication using eCAL, where multiple clients
send concurrent Ping requests to multiple servers.

Test Setup:
- 2 RPC servers provide a method called "Ping".
- 2 RPC ...</msg>
<var>${desc}</var>
<doc>Reads the *** Comments *** section from the .robot file and returns it as a string.</doc>
<status status="PASS" start="2025-07-24T13:23:00.768606" elapsed="0.000169"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-24T13:23:00.768933" level="INFO">This test validates N-to-N RPC communication using eCAL, where multiple clients
send concurrent Ping requests to multiple servers.

Test Setup:
- 2 RPC servers provide a method called "Ping".
- 2 RPC clients call this method on all available servers.
- Each client must receive a valid "PONG" response from all available servers.

Goals:
- Validate that RPC communication scales to N clients and N servers.
- Ensure all clients connect and receive correct responses from all servers.

Success Criteria:
- Each client prints the correct number of "PONG" responses.
- All clients exit with code 0.</msg>
<arg>${desc}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-24T13:23:00.768843" elapsed="0.000120"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>[SETUP] Building Docker image...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T13:23:00.769028" elapsed="0.000093"/>
</kw>
<kw name="Run Process" owner="Process">
<msg time="2025-07-24T13:23:00.769427" level="INFO">Starting process:
/home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/rpc_n_to_n_test/scripts/build_images.sh rpc_n_to_n_test</msg>
<msg time="2025-07-24T13:23:00.769830" level="INFO">Waiting for process to complete.</msg>
<msg time="2025-07-24T13:23:08.952040" level="INFO">Process completed.</msg>
<msg time="2025-07-24T13:23:08.952220" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<var>${result}</var>
<arg>${BUILD_SCRIPT}</arg>
<arg>@{args}</arg>
<doc>Runs a process and waits for it to complete.</doc>
<status status="PASS" start="2025-07-24T13:23:00.769230" elapsed="8.183017"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-24T13:23:08.952958" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${result.rc}</arg>
<arg>0</arg>
<arg>Failed to build Docker image!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-24T13:23:08.952436" elapsed="0.000579"/>
</kw>
<kw name="Create Docker Network" owner="DockerLibrary">
<arg>${NETWORK}</arg>
<status status="PASS" start="2025-07-24T13:23:08.953100" elapsed="0.007987"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-24T13:23:10.961538" level="INFO">Slept 2 seconds.</msg>
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-24T13:23:08.961239" elapsed="2.000409"/>
</kw>
<status status="PASS" start="2025-07-24T13:23:00.767239" elapsed="10.194494"/>
</kw>
<test id="s1-s5-t1" name="RPC N-to-N Test" line="33">
<kw name="Run RPC N-to-N Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T13:23:10.962780" level="INFO">${IMAGE} = rpc_n_to_n_test_network_udp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_network_udp</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T13:23:10.962639" elapsed="0.000161"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Starting ${NUM_SERVERS} servers and ${NUM_CLIENTS} clients...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T13:23:10.962879" elapsed="0.000146"/>
</kw>
<for flavor="IN RANGE">
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T13:23:10.963562" level="INFO">${name} = rpc_server_0</msg>
<var>${name}</var>
<arg>rpc_server_${i}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T13:23:10.963445" elapsed="0.000136"/>
</kw>
<kw name="Start Container" owner="DockerLibrary">
<arg>${name}</arg>
<arg>${IMAGE}</arg>
<arg>server</arg>
<arg>network_udp</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-24T13:23:10.963648" elapsed="0.132886"/>
</kw>
<var name="${i}">0</var>
<status status="PASS" start="2025-07-24T13:23:10.963373" elapsed="0.133245"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T13:23:11.097179" level="INFO">${name} = rpc_server_1</msg>
<var>${name}</var>
<arg>rpc_server_${i}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T13:23:11.096947" elapsed="0.000263"/>
</kw>
<kw name="Start Container" owner="DockerLibrary">
<arg>${name}</arg>
<arg>${IMAGE}</arg>
<arg>server</arg>
<arg>network_udp</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-24T13:23:11.097332" elapsed="0.129723"/>
</kw>
<var name="${i}">1</var>
<status status="PASS" start="2025-07-24T13:23:11.096802" elapsed="0.130346"/>
</iter>
<var>${i}</var>
<value>${NUM_SERVERS}</value>
<status status="PASS" start="2025-07-24T13:23:10.963093" elapsed="0.264109"/>
</for>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-24T13:23:13.227701" level="INFO">Slept 2 seconds.</msg>
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-24T13:23:11.227402" elapsed="2.000421"/>
</kw>
<for flavor="IN RANGE">
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T13:23:13.228500" level="INFO">${name} = rpc_client_0</msg>
<var>${name}</var>
<arg>rpc_client_${j}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T13:23:13.228328" elapsed="0.000192"/>
</kw>
<kw name="Start Container" owner="DockerLibrary">
<arg>${name}</arg>
<arg>${IMAGE}</arg>
<arg>client</arg>
<arg>network_udp</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-24T13:23:13.228665" elapsed="0.121677"/>
</kw>
<var name="${j}">0</var>
<status status="PASS" start="2025-07-24T13:23:13.228188" elapsed="0.122221"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T13:23:13.350839" level="INFO">${name} = rpc_client_1</msg>
<var>${name}</var>
<arg>rpc_client_${j}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T13:23:13.350663" elapsed="0.000198"/>
</kw>
<kw name="Start Container" owner="DockerLibrary">
<arg>${name}</arg>
<arg>${IMAGE}</arg>
<arg>client</arg>
<arg>network_udp</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-24T13:23:13.350933" elapsed="0.126523"/>
</kw>
<var name="${j}">1</var>
<status status="PASS" start="2025-07-24T13:23:13.350547" elapsed="0.126982"/>
</iter>
<var>${j}</var>
<value>${NUM_CLIENTS}</value>
<status status="PASS" start="2025-07-24T13:23:13.227916" elapsed="0.249658"/>
</for>
<for flavor="IN RANGE">
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T13:23:13.478225" level="INFO">${name} = rpc_client_0</msg>
<var>${name}</var>
<arg>rpc_client_${j}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T13:23:13.478050" elapsed="0.000204"/>
</kw>
<kw name="Wait For Container Exit" owner="DockerLibrary">
<msg time="2025-07-24T13:23:14.917863" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>${name}</arg>
<status status="PASS" start="2025-07-24T13:23:13.478393" elapsed="1.439588"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-24T13:23:14.918462" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>${name} failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-24T13:23:14.918148" elapsed="0.000382"/>
</kw>
<kw name="Get Container Logs" owner="DockerLibrary">
<msg time="2025-07-24T13:23:14.921009" level="INFO">${logs} = [Entrypoint] Starting client in mode network_udp...
[Client] Initializing eCAL with mode: network_udp
[Client] Waiting for server...
[Client] Sending Ping...
[Client] Response: PONG
[Client] Response:...</msg>
<var>${logs}</var>
<arg>${name}</arg>
<status status="PASS" start="2025-07-24T13:23:14.918633" elapsed="0.002401"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[CLIENT LOG: ${name}]\n${logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T13:23:14.921121" elapsed="0.000194"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-24T13:23:14.921588" level="INFO">
[CLIENT LOG: rpc_client_0]
[Entrypoint] Starting client in mode network_udp...
[Client] Initializing eCAL with mode: network_udp
[Client] Waiting for server...
[Client] Sending Ping...
[Client] Response: PONG
[Client] Response: PONG
[Client] PONG responses: 2
</msg>
<arg>\n[CLIENT LOG: ${name}]\n${logs}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-24T13:23:14.921427" elapsed="0.000197"/>
</kw>
<var name="${j}">0</var>
<status status="PASS" start="2025-07-24T13:23:13.477921" elapsed="1.443740"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T13:23:14.922019" level="INFO">${name} = rpc_client_1</msg>
<var>${name}</var>
<arg>rpc_client_${j}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T13:23:14.921887" elapsed="0.000160"/>
</kw>
<kw name="Wait For Container Exit" owner="DockerLibrary">
<msg time="2025-07-24T13:23:15.040708" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>${name}</arg>
<status status="PASS" start="2025-07-24T13:23:14.922123" elapsed="0.118639"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-24T13:23:15.041159" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>${name} failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-24T13:23:15.040938" elapsed="0.000270"/>
</kw>
<kw name="Get Container Logs" owner="DockerLibrary">
<msg time="2025-07-24T13:23:15.043897" level="INFO">${logs} = [Entrypoint] Starting client in mode network_udp...
[Client] Initializing eCAL with mode: network_udp
[Client] Waiting for server...
[Client] Sending Ping...
[Client] Response: PONG
[Client] Response:...</msg>
<var>${logs}</var>
<arg>${name}</arg>
<status status="PASS" start="2025-07-24T13:23:15.041393" elapsed="0.002529"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[CLIENT LOG: ${name}]\n${logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T13:23:15.044010" elapsed="0.000178"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-24T13:23:15.044497" level="INFO">
[CLIENT LOG: rpc_client_1]
[Entrypoint] Starting client in mode network_udp...
[Client] Initializing eCAL with mode: network_udp
[Client] Waiting for server...
[Client] Sending Ping...
[Client] Response: PONG
[Client] Response: PONG
[Client] PONG responses: 2
</msg>
<arg>\n[CLIENT LOG: ${name}]\n${logs}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-24T13:23:15.044352" elapsed="0.000180"/>
</kw>
<var name="${j}">1</var>
<status status="PASS" start="2025-07-24T13:23:14.921796" elapsed="0.122765"/>
</iter>
<var>${j}</var>
<value>${NUM_CLIENTS}</value>
<status status="PASS" start="2025-07-24T13:23:13.477651" elapsed="1.566943"/>
</for>
<for flavor="IN RANGE">
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T13:23:15.045002" level="INFO">${name} = rpc_server_0</msg>
<var>${name}</var>
<arg>rpc_server_${i}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T13:23:15.044882" elapsed="0.000140"/>
</kw>
<kw name="Get Container Logs" owner="DockerLibrary">
<msg time="2025-07-24T13:23:15.047057" level="INFO">${logs} = [Entrypoint] Starting server in mode network_udp...
[1;33m[Server] Initializing eCAL with mode: network_udp[0m
[1;32m[Server] Ready for RPC (method: Ping)[0m
[1;32m[Server] Received RPC: PING[0m...</msg>
<var>${logs}</var>
<arg>${name}</arg>
<status status="PASS" start="2025-07-24T13:23:15.045094" elapsed="0.001989"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[SERVER LOG: ${name}]\n${logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T13:23:15.047166" elapsed="0.000187"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-24T13:23:15.047577" level="INFO">
[SERVER LOG: rpc_server_0]
[Entrypoint] Starting server in mode network_udp...
[1;33m[Server] Initializing eCAL with mode: network_udp[0m
[1;32m[Server] Ready for RPC (method: Ping)[0m
[1;32m[Server] Received RPC: PING[0m
[1;32m[Server] Responded with: PONG[0m
[1;32m[Server] Received RPC: PING[0m
[1;32m[Server] Responded with: PONG[0m
</msg>
<arg>\n[SERVER LOG: ${name}]\n${logs}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-24T13:23:15.047452" elapsed="0.000162"/>
</kw>
<kw name="Stop Container" owner="DockerLibrary">
<arg>${name}</arg>
<status status="PASS" start="2025-07-24T13:23:15.047681" elapsed="10.084518"/>
</kw>
<var name="${i}">0</var>
<status status="PASS" start="2025-07-24T13:23:15.044813" elapsed="10.087445"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T13:23:25.132712" level="INFO">${name} = rpc_server_1</msg>
<var>${name}</var>
<arg>rpc_server_${i}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T13:23:25.132545" elapsed="0.000188"/>
</kw>
<kw name="Get Container Logs" owner="DockerLibrary">
<msg time="2025-07-24T13:23:25.135122" level="INFO">${logs} = [Entrypoint] Starting server in mode network_udp...
[1;33m[Server] Initializing eCAL with mode: network_udp[0m
[1;32m[Server] Ready for RPC (method: Ping)[0m
[1;32m[Server] Received RPC: PING[0m...</msg>
<var>${logs}</var>
<arg>${name}</arg>
<status status="PASS" start="2025-07-24T13:23:25.132863" elapsed="0.002286"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[SERVER LOG: ${name}]\n${logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T13:23:25.135234" elapsed="0.000195"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-24T13:23:25.135726" level="INFO">
[SERVER LOG: rpc_server_1]
[Entrypoint] Starting server in mode network_udp...
[1;33m[Server] Initializing eCAL with mode: network_udp[0m
[1;32m[Server] Ready for RPC (method: Ping)[0m
[1;32m[Server] Received RPC: PING[0m
[1;32m[Server] Responded with: PONG[0m
[1;32m[Server] Received RPC: PING[0m
[1;32m[Server] Responded with: PONG[0m
</msg>
<arg>\n[SERVER LOG: ${name}]\n${logs}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-24T13:23:25.135559" elapsed="0.000220"/>
</kw>
<kw name="Stop Container" owner="DockerLibrary">
<arg>${name}</arg>
<status status="PASS" start="2025-07-24T13:23:25.135877" elapsed="10.086493"/>
</kw>
<var name="${i}">1</var>
<status status="PASS" start="2025-07-24T13:23:25.132429" elapsed="10.090000"/>
</iter>
<var>${i}</var>
<value>${NUM_SERVERS}</value>
<status status="PASS" start="2025-07-24T13:23:15.044645" elapsed="20.177819"/>
</for>
<for flavor="IN RANGE">
<iter>
<kw name="Stop Container" owner="DockerLibrary">
<arg>rpc_client_${j}</arg>
<status status="PASS" start="2025-07-24T13:23:35.222818" elapsed="0.005283"/>
</kw>
<var name="${j}">0</var>
<status status="PASS" start="2025-07-24T13:23:35.222721" elapsed="0.005419"/>
</iter>
<iter>
<kw name="Stop Container" owner="DockerLibrary">
<arg>rpc_client_${j}</arg>
<status status="PASS" start="2025-07-24T13:23:35.228329" elapsed="0.004933"/>
</kw>
<var name="${j}">1</var>
<status status="PASS" start="2025-07-24T13:23:35.228230" elapsed="0.005091"/>
</iter>
<var>${j}</var>
<value>${NUM_CLIENTS}</value>
<status status="PASS" start="2025-07-24T13:23:35.222524" elapsed="0.010826"/>
</for>
<kw name="Log Test Summary" owner="DockerLibrary">
<arg>RPC N-to-N Test</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-07-24T13:23:35.233445" elapsed="0.000151"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-24T13:23:36.233965" level="INFO">Slept 1 second.</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-24T13:23:35.233700" elapsed="1.000385"/>
</kw>
<status status="PASS" start="2025-07-24T13:23:10.962383" elapsed="25.271787"/>
</kw>
<tag>rpc_n_to_n_test</tag>
<status status="PASS" start="2025-07-24T13:23:10.961794" elapsed="25.272545"/>
</test>
<status status="PASS" start="2025-07-24T13:23:00.764493" elapsed="35.471196"/>
</suite>
<suite id="s1-s6" name="Rpc Ping Test" source="/home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/rpc_ping_test/robottests/rpc_ping_test.robot">
<kw name="Init Test Context" type="SETUP">
<kw name="Set Test Context" owner="GlobalPathsLibrary">
<arg>rpc_ping_test</arg>
<arg>rpc_ping_test</arg>
<doc>Sets the test folder and tag prefix if it's a valid test case.
The folder must exist under integration_tests/ and contain typical test structure.</doc>
<status status="PASS" start="2025-07-24T13:23:36.238987" elapsed="0.000135"/>
</kw>
<kw name="Get Build Script Path" owner="GlobalPathsLibrary">
<msg time="2025-07-24T13:23:36.239326" level="INFO">${build} = /home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/rpc_ping_test/scripts/build_images.sh</msg>
<var>${build}</var>
<status status="PASS" start="2025-07-24T13:23:36.239205" elapsed="0.000146"/>
</kw>
<kw name="Get Network Name" owner="GlobalPathsLibrary">
<msg time="2025-07-24T13:23:36.239498" level="INFO">${net} = ecal_test_net</msg>
<var>${net}</var>
<status status="PASS" start="2025-07-24T13:23:36.239419" elapsed="0.000096"/>
</kw>
<kw name="Get Build Script Args" owner="GlobalPathsLibrary">
<msg time="2025-07-24T13:23:36.239650" level="INFO">${args} = ['rpc_ping_test']</msg>
<var>${args}</var>
<status status="PASS" start="2025-07-24T13:23:36.239576" elapsed="0.000091"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-07-24T13:23:36.239869" level="INFO">${BUILD_SCRIPT} = /home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/rpc_ping_test/scripts/build_images.sh</msg>
<arg>${BUILD_SCRIPT}</arg>
<arg>${build}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-07-24T13:23:36.239740" elapsed="0.000157"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-07-24T13:23:36.240080" level="INFO">${NETWORK} = ecal_test_net</msg>
<arg>${NETWORK}</arg>
<arg>${net}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-07-24T13:23:36.239968" elapsed="0.000138"/>
</kw>
<kw name="Get Test Description" owner="GlobalPathsLibrary">
<msg time="2025-07-24T13:23:36.240344" level="INFO">${desc} = This test checks a basic RPC communication between a client and a server.

Test Setup:
- The server provides a method called "Ping".
- The client sends one "PING" request to this method.

Goals:
- Ens...</msg>
<var>${desc}</var>
<doc>Reads the *** Comments *** section from the .robot file and returns it as a string.</doc>
<status status="PASS" start="2025-07-24T13:23:36.240168" elapsed="0.000197"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-24T13:23:36.240525" level="INFO">This test checks a basic RPC communication between a client and a server.

Test Setup:
- The server provides a method called "Ping".
- The client sends one "PING" request to this method.

Goals:
- Ensure RPC client-server interaction works over network UDP.
- Validate that the server responds with "PONG".
- The client must connect, call the method, and receive a valid response.

Success Criteria:
- The server receives a call and returns a response.
- The client prints the response and exits with code 0.</msg>
<arg>${desc}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-24T13:23:36.240439" elapsed="0.000117"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>[SETUP] Building Docker image...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T13:23:36.240622" elapsed="0.000085"/>
</kw>
<kw name="Run Process" owner="Process">
<msg time="2025-07-24T13:23:36.240959" level="INFO">Starting process:
/home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/rpc_ping_test/scripts/build_images.sh rpc_ping_test</msg>
<msg time="2025-07-24T13:23:36.241382" level="INFO">Waiting for process to complete.</msg>
<msg time="2025-07-24T13:23:44.339792" level="INFO">Process completed.</msg>
<msg time="2025-07-24T13:23:44.339962" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<var>${result}</var>
<arg>${BUILD_SCRIPT}</arg>
<arg>@{args}</arg>
<doc>Runs a process and waits for it to complete.</doc>
<status status="PASS" start="2025-07-24T13:23:36.240804" elapsed="8.099184"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-24T13:23:44.340655" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${result.rc}</arg>
<arg>0</arg>
<arg>Failed to build Docker image!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-24T13:23:44.340145" elapsed="0.000562"/>
</kw>
<kw name="Create Docker Network" owner="DockerLibrary">
<arg>${NETWORK}</arg>
<status status="PASS" start="2025-07-24T13:23:44.340794" elapsed="0.006946"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-24T13:23:46.348118" level="INFO">Slept 2 seconds.</msg>
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-24T13:23:44.347898" elapsed="2.000329"/>
</kw>
<status status="PASS" start="2025-07-24T13:23:36.238835" elapsed="10.109502"/>
</kw>
<test id="s1-s6-t1" name="RPC Ping Test" line="30">
<kw name="Run RPC Test Network UDP">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T13:23:46.349748" level="INFO">${IMAGE} = rpc_ping_test_network_udp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_network_udp</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T13:23:46.349577" elapsed="0.000197"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T13:23:46.349967" level="INFO">${CLIENT_NAME} = rpc_client</msg>
<var>${CLIENT_NAME}</var>
<arg>rpc_client</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T13:23:46.349867" elapsed="0.000118"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T13:23:46.350130" level="INFO">${SERVER_NAME} = rpc_server</msg>
<var>${SERVER_NAME}</var>
<arg>rpc_server</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T13:23:46.350051" elapsed="0.000096"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Running RPC test (network UDP mode)...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T13:23:46.350214" elapsed="0.000113"/>
</kw>
<kw name="Start Container" owner="DockerLibrary">
<arg>${SERVER_NAME}</arg>
<arg>${IMAGE}</arg>
<arg>server</arg>
<arg>network_udp</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-24T13:23:46.350418" elapsed="0.127901"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-24T13:23:47.478816" level="INFO">Slept 1 second.</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-24T13:23:46.478513" elapsed="1.000412"/>
</kw>
<kw name="Start Container" owner="DockerLibrary">
<arg>${CLIENT_NAME}</arg>
<arg>${IMAGE}</arg>
<arg>client</arg>
<arg>network_udp</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-24T13:23:47.479094" elapsed="0.118074"/>
</kw>
<kw name="Wait For Container Exit" owner="DockerLibrary">
<msg time="2025-07-24T13:23:49.164184" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>${CLIENT_NAME}</arg>
<status status="PASS" start="2025-07-24T13:23:47.597409" elapsed="1.566817"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-24T13:23:49.164728" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Client failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-24T13:23:49.164459" elapsed="0.000324"/>
</kw>
<kw name="Get Container Logs" owner="DockerLibrary">
<msg time="2025-07-24T13:23:49.167413" level="INFO">${server_logs} = [Entrypoint] Starting server in mode network_udp...
[1;33m[Server] Initializing eCAL with mode: network_udp[0m
[1;32m[Server] Waiting for RPC calls (method: Ping)[0m
[1;32m[Server] Received RPC r...</msg>
<var>${server_logs}</var>
<arg>${SERVER_NAME}</arg>
<status status="PASS" start="2025-07-24T13:23:49.164916" elapsed="0.002524"/>
</kw>
<kw name="Get Container Logs" owner="DockerLibrary">
<msg time="2025-07-24T13:23:49.169729" level="INFO">${client_logs} = [Entrypoint] Starting client in mode network_udp...
[1;33m[Client] Initializing eCAL with mode: network_udp[0m
[1;33m[Client] Waiting for server connection...[0m
[1;32m[Client] Connected. Calling...</msg>
<var>${client_logs}</var>
<arg>${CLIENT_NAME}</arg>
<status status="PASS" start="2025-07-24T13:23:49.167530" elapsed="0.002225"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[CONTAINER LOG: SERVER]\n${server_logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T13:23:49.169843" elapsed="0.000162"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-24T13:23:49.170223" level="INFO">
[CONTAINER LOG: SERVER]
[Entrypoint] Starting server in mode network_udp...
[1;33m[Server] Initializing eCAL with mode: network_udp[0m
[1;32m[Server] Waiting for RPC calls (method: Ping)[0m
[1;32m[Server] Received RPC request: PING[0m
[1;32m[Server] Responding with: PONG[0m
</msg>
<arg>\n[CONTAINER LOG: SERVER]\n${server_logs}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-24T13:23:49.170114" elapsed="0.000144"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[CONTAINER LOG: CLIENT]\n${client_logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T13:23:49.170362" elapsed="0.000134"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-24T13:23:49.170685" level="INFO">
[CONTAINER LOG: CLIENT]
[Entrypoint] Starting client in mode network_udp...
[1;33m[Client] Initializing eCAL with mode: network_udp[0m
[1;33m[Client] Waiting for server connection...[0m
[1;32m[Client] Connected. Calling 'Ping'...[0m
[1;32m[Client] Server response: PONG[0m
</msg>
<arg>\n[CONTAINER LOG: CLIENT]\n${client_logs}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-24T13:23:49.170588" elapsed="0.000131"/>
</kw>
<kw name="Log Test Summary" owner="DockerLibrary">
<arg>RPC Ping Test (UDP)</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-07-24T13:23:49.170785" elapsed="0.000117"/>
</kw>
<kw name="Stop Container" owner="DockerLibrary">
<arg>${CLIENT_NAME}</arg>
<status status="PASS" start="2025-07-24T13:23:49.170980" elapsed="0.005142"/>
</kw>
<kw name="Stop Container" owner="DockerLibrary">
<arg>${SERVER_NAME}</arg>
<status status="PASS" start="2025-07-24T13:23:49.176207" elapsed="10.082520"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-24T13:24:00.259150" level="INFO">Slept 1 second.</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-24T13:23:59.258882" elapsed="1.000372"/>
</kw>
<status status="PASS" start="2025-07-24T13:23:46.348930" elapsed="13.910434"/>
</kw>
<tag>rpc_server_client_ping_test</tag>
<status status="PASS" start="2025-07-24T13:23:46.348410" elapsed="13.911076"/>
</test>
<status status="PASS" start="2025-07-24T13:23:36.236258" elapsed="24.024366"/>
</suite>
<suite id="s1-s7" name="Rpc Reconnect Test" source="/home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/rpc_reconnect_test/robottests/rpc_reconnect_test.robot">
<kw name="Init Test Context" type="SETUP">
<kw name="Set Test Context" owner="GlobalPathsLibrary">
<arg>rpc_reconnect_test</arg>
<arg>rpc_reconnect_test</arg>
<doc>Sets the test folder and tag prefix if it's a valid test case.
The folder must exist under integration_tests/ and contain typical test structure.</doc>
<status status="PASS" start="2025-07-24T13:24:00.263851" elapsed="0.000135"/>
</kw>
<kw name="Get Build Script Path" owner="GlobalPathsLibrary">
<msg time="2025-07-24T13:24:00.264154" level="INFO">${build} = /home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/rpc_reconnect_test/scripts/build_images.sh</msg>
<var>${build}</var>
<status status="PASS" start="2025-07-24T13:24:00.264067" elapsed="0.000107"/>
</kw>
<kw name="Get Build Script Args" owner="GlobalPathsLibrary">
<msg time="2025-07-24T13:24:00.264351" level="INFO">${args} = ['rpc_reconnect_test']</msg>
<var>${args}</var>
<status status="PASS" start="2025-07-24T13:24:00.264236" elapsed="0.000133"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-07-24T13:24:00.264578" level="INFO">${BUILD_SCRIPT} = /home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/rpc_reconnect_test/scripts/build_images.sh</msg>
<arg>${BUILD_SCRIPT}</arg>
<arg>${build}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-07-24T13:24:00.264446" elapsed="0.000209"/>
</kw>
<kw name="Create Docker Network With Subnet" owner="DockerLibrary">
<arg>${NETWORK}</arg>
<arg>172.28.0.0/16</arg>
<doc>Creates a Docker bridge network with a given subnet if it does not already exist.</doc>
<status status="PASS" start="2025-07-24T13:24:00.264725" elapsed="0.063913"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>[SETUP] Building Docker image...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T13:24:00.328821" elapsed="0.000167"/>
</kw>
<kw name="Run Process" owner="Process">
<msg time="2025-07-24T13:24:00.329296" level="INFO">Starting process:
/home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/rpc_reconnect_test/scripts/build_images.sh rpc_reconnect_test</msg>
<msg time="2025-07-24T13:24:00.329640" level="INFO">Waiting for process to complete.</msg>
<msg time="2025-07-24T13:24:08.404263" level="INFO">Process completed.</msg>
<msg time="2025-07-24T13:24:08.404482" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<var>${result}</var>
<arg>${BUILD_SCRIPT}</arg>
<arg>@{args}</arg>
<doc>Runs a process and waits for it to complete.</doc>
<status status="PASS" start="2025-07-24T13:24:00.329087" elapsed="8.075422"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-24T13:24:08.405158" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${result.rc}</arg>
<arg>0</arg>
<arg>Failed to build Docker image!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-24T13:24:08.404670" elapsed="0.000539"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-24T13:24:11.405552" level="INFO">Slept 3 seconds.</msg>
<arg>3s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-24T13:24:08.405328" elapsed="3.000346"/>
</kw>
<status status="PASS" start="2025-07-24T13:24:00.263691" elapsed="11.142079"/>
</kw>
<test id="s1-s7-t1" name="RPC Reconnect Test" line="28">
<kw name="Run RPC Reconnect Test">
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Starting RPC Reconnect Test...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T13:24:11.406596" elapsed="0.000118"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T13:24:11.406970" level="INFO">${IMAGE} = rpc_reconnect_test_network_udp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_network_udp</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T13:24:11.406816" elapsed="0.000174"/>
</kw>
<kw name="Start Container With Ip" owner="DockerLibrary">
<arg>rpc_server</arg>
<arg>${IMAGE}</arg>
<arg>server</arg>
<arg>network_udp</arg>
<arg>network=${NETWORK}</arg>
<arg>ip=${SERVER_IP}</arg>
<status status="PASS" start="2025-07-24T13:24:11.407073" elapsed="0.149970"/>
</kw>
<kw name="Start Container With Ip" owner="DockerLibrary">
<arg>rpc_client</arg>
<arg>${IMAGE}</arg>
<arg>client</arg>
<arg>network_udp</arg>
<arg>network=${NETWORK}</arg>
<arg>ip=${CLIENT_IP}</arg>
<status status="PASS" start="2025-07-24T13:24:11.557257" elapsed="0.142089"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-24T13:24:13.699793" level="INFO">Slept 2 seconds.</msg>
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-24T13:24:11.699536" elapsed="2.000374"/>
</kw>
<kw name="Disconnect Container From Network" owner="DockerLibrary">
<arg>rpc_client</arg>
<arg>${NETWORK}</arg>
<status status="PASS" start="2025-07-24T13:24:13.700078" elapsed="0.019961"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-24T13:24:19.720604" level="INFO">Slept 6 seconds.</msg>
<arg>6s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-24T13:24:13.720230" elapsed="6.000491"/>
</kw>
<kw name="Reconnect Container To Network With Ip" owner="DockerLibrary">
<arg>rpc_client</arg>
<arg>${NETWORK}</arg>
<arg>${CLIENT_IP}</arg>
<status status="PASS" start="2025-07-24T13:24:19.720887" elapsed="0.010830"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-24T13:24:21.732246" level="INFO">Slept 2 seconds.</msg>
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-24T13:24:19.731922" elapsed="2.000451"/>
</kw>
<kw name="Get Container Logs" owner="DockerLibrary">
<msg time="2025-07-24T13:24:21.735253" level="INFO">${log_cli} = [Entrypoint] Starting client in mode network_udp...
[Client] Initializing eCAL with mode: network_udp
[Client] Waiting for server...
[Client][Initial] Calling RPC 'Ping'...
[Client][Initial] Response:...</msg>
<var>${log_cli}</var>
<arg>rpc_client</arg>
<status status="PASS" start="2025-07-24T13:24:21.732526" elapsed="0.002784"/>
</kw>
<kw name="Get Container Logs" owner="DockerLibrary">
<msg time="2025-07-24T13:24:21.737557" level="INFO">${log_srv} = [Entrypoint] Starting server in mode network_udp...
[1;33m[Server] Initializing eCAL with mode: network_udp[0m
[1;32m[Server] Waiting for RPC calls (method: Ping)[0m
[1;32m[Server] Received RPC r...</msg>
<var>${log_srv}</var>
<arg>rpc_server</arg>
<status status="PASS" start="2025-07-24T13:24:21.735411" elapsed="0.002173"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[CONTAINER LOG: CLIENT]\n${log_cli}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T13:24:21.737671" elapsed="0.000161"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[CONTAINER LOG: SERVER]\n${log_srv}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T13:24:21.737937" elapsed="0.000139"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-24T13:24:21.738262" level="INFO">
[CONTAINER LOG: CLIENT]
[Entrypoint] Starting client in mode network_udp...
[Client] Initializing eCAL with mode: network_udp
[Client] Waiting for server...
[Client][Initial] Calling RPC 'Ping'...
[Client][Initial] Response: PONG
[Client] Trying to reconnect and call again...
[Client][Reconnect] Calling RPC 'Ping'...
[Client][Reconnect] Response: PONG
[Client] Total PONGs received: 2
[Client]  Reconnect test passed.
</msg>
<arg>\n[CONTAINER LOG: CLIENT]\n${log_cli}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-24T13:24:21.738163" elapsed="0.000177"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-24T13:24:21.738527" level="INFO">
[CONTAINER LOG: SERVER]
[Entrypoint] Starting server in mode network_udp...
[1;33m[Server] Initializing eCAL with mode: network_udp[0m
[1;32m[Server] Waiting for RPC calls (method: Ping)[0m
[1;32m[Server] Received RPC request: PING[0m
[1;32m[Server] Responding with: PONG[0m
[1;32m[Server] Received RPC request: PING[0m
[1;32m[Server] Responding with: PONG[0m
</msg>
<arg>\n[CONTAINER LOG: SERVER]\n${log_srv}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-24T13:24:21.738428" elapsed="0.000132"/>
</kw>
<kw name="Wait For Container Exit" owner="DockerLibrary">
<msg time="2025-07-24T13:24:21.739619" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>rpc_client</arg>
<status status="PASS" start="2025-07-24T13:24:21.738627" elapsed="0.001015"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-24T13:24:21.739855" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Client failed after reconnect!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-24T13:24:21.739723" elapsed="0.000174"/>
</kw>
<kw name="Log Test Summary" owner="DockerLibrary">
<arg>RPC Reconnect Test</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-07-24T13:24:21.740013" elapsed="0.000125"/>
</kw>
<kw name="Stop Container" owner="DockerLibrary">
<arg>rpc_client</arg>
<status status="PASS" start="2025-07-24T13:24:21.740224" elapsed="0.005357"/>
</kw>
<kw name="Stop Container" owner="DockerLibrary">
<arg>rpc_server</arg>
<status status="PASS" start="2025-07-24T13:24:21.745665" elapsed="10.120951"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-24T13:24:32.867038" level="INFO">Slept 1 second.</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-24T13:24:31.866766" elapsed="1.000375"/>
</kw>
<status status="PASS" start="2025-07-24T13:24:11.406383" elapsed="21.460839"/>
</kw>
<tag>rpc_reconnect</tag>
<status status="PASS" start="2025-07-24T13:24:11.405841" elapsed="21.461508"/>
</test>
<test id="s1-s7-t2" name="RPC Reconnect Test2" line="32">
<kw name="Run RPC Reconnect Test2">
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Starting RPC Reconnect Test...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T13:24:32.868799" elapsed="0.000115"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T13:24:32.869164" level="INFO">${IMAGE} = rpc_reconnect_test_network_udp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_network_udp</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T13:24:32.869025" elapsed="0.000159"/>
</kw>
<kw name="Start Container With Ip" owner="DockerLibrary">
<arg>rpc_server</arg>
<arg>${IMAGE}</arg>
<arg>server</arg>
<arg>network_udp</arg>
<arg>network=${NETWORK}</arg>
<arg>ip=${SERVER_IP}</arg>
<status status="PASS" start="2025-07-24T13:24:32.869263" elapsed="0.140563"/>
</kw>
<kw name="Start Container With Ip" owner="DockerLibrary">
<arg>rpc_client</arg>
<arg>${IMAGE}</arg>
<arg>client</arg>
<arg>network_udp</arg>
<arg>network=${NETWORK}</arg>
<arg>ip=${CLIENT_IP}</arg>
<status status="PASS" start="2025-07-24T13:24:33.010046" elapsed="0.138818"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-24T13:24:35.149342" level="INFO">Slept 2 seconds.</msg>
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-24T13:24:33.149053" elapsed="2.000411"/>
</kw>
<kw name="Disconnect Container From Network" owner="DockerLibrary">
<arg>rpc_server</arg>
<arg>${NETWORK}</arg>
<status status="PASS" start="2025-07-24T13:24:35.149632" elapsed="0.031745"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-24T13:24:41.181889" level="INFO">Slept 6 seconds.</msg>
<arg>6s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-24T13:24:35.181570" elapsed="6.000441"/>
</kw>
<kw name="Reconnect Container To Network With Ip" owner="DockerLibrary">
<arg>rpc_server</arg>
<arg>${NETWORK}</arg>
<arg>${SERVER_IP}</arg>
<status status="PASS" start="2025-07-24T13:24:41.182182" elapsed="0.011459"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-24T13:24:43.194143" level="INFO">Slept 2 seconds.</msg>
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-24T13:24:41.193834" elapsed="2.000419"/>
</kw>
<kw name="Get Container Logs" owner="DockerLibrary">
<msg time="2025-07-24T13:24:43.197126" level="INFO">${log_cli} = [Entrypoint] Starting client in mode network_udp...
[Client] Initializing eCAL with mode: network_udp
[Client] Waiting for server...
[Client][Initial] Calling RPC 'Ping'...
[Client][Initial] Response:...</msg>
<var>${log_cli}</var>
<arg>rpc_client</arg>
<status status="PASS" start="2025-07-24T13:24:43.194438" elapsed="0.002714"/>
</kw>
<kw name="Get Container Logs" owner="DockerLibrary">
<msg time="2025-07-24T13:24:43.199206" level="INFO">${log_srv} = [Entrypoint] Starting server in mode network_udp...
[1;33m[Server] Initializing eCAL with mode: network_udp[0m
[1;32m[Server] Waiting for RPC calls (method: Ping)[0m
[1;32m[Server] Received RPC r...</msg>
<var>${log_srv}</var>
<arg>rpc_server</arg>
<status status="PASS" start="2025-07-24T13:24:43.197241" elapsed="0.001992"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[CONTAINER LOG: CLIENT]\n${log_cli}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T13:24:43.199346" elapsed="0.000157"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[CONTAINER LOG: SERVER]\n${log_srv}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T13:24:43.199605" elapsed="0.000167"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-24T13:24:43.200009" level="INFO">
[CONTAINER LOG: CLIENT]
[Entrypoint] Starting client in mode network_udp...
[Client] Initializing eCAL with mode: network_udp
[Client] Waiting for server...
[Client][Initial] Calling RPC 'Ping'...
[Client][Initial] Response: PONG
[Client] Trying to reconnect and call again...
[Client][Reconnect] Calling RPC 'Ping'...
[Client][Reconnect] Response: PONG
[Client] Total PONGs received: 2
[Client]  Reconnect test passed.
</msg>
<arg>\n[CONTAINER LOG: CLIENT]\n${log_cli}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-24T13:24:43.199878" elapsed="0.000177"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-24T13:24:43.200305" level="INFO">
[CONTAINER LOG: SERVER]
[Entrypoint] Starting server in mode network_udp...
[1;33m[Server] Initializing eCAL with mode: network_udp[0m
[1;32m[Server] Waiting for RPC calls (method: Ping)[0m
[1;32m[Server] Received RPC request: PING[0m
[1;32m[Server] Responding with: PONG[0m
[1;32m[Server] Received RPC request: PING[0m
[1;32m[Server] Responding with: PONG[0m
</msg>
<arg>\n[CONTAINER LOG: SERVER]\n${log_srv}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-24T13:24:43.200152" elapsed="0.000209"/>
</kw>
<kw name="Wait For Container Exit" owner="DockerLibrary">
<msg time="2025-07-24T13:24:43.201520" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>rpc_client</arg>
<status status="PASS" start="2025-07-24T13:24:43.200460" elapsed="0.001083"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-24T13:24:43.201757" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Client failed after reconnect!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-24T13:24:43.201625" elapsed="0.000176"/>
</kw>
<kw name="Log Test Summary" owner="DockerLibrary">
<arg>RPC Reconnect Test</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-07-24T13:24:43.201874" elapsed="0.000115"/>
</kw>
<kw name="Stop Container" owner="DockerLibrary">
<arg>rpc_client</arg>
<status status="PASS" start="2025-07-24T13:24:43.202096" elapsed="0.005564"/>
</kw>
<kw name="Stop Container" owner="DockerLibrary">
<arg>rpc_server</arg>
<status status="PASS" start="2025-07-24T13:24:43.207744" elapsed="10.111381"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-24T13:24:54.319547" level="INFO">Slept 1 second.</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-24T13:24:53.319298" elapsed="1.000352"/>
</kw>
<status status="PASS" start="2025-07-24T13:24:32.868596" elapsed="21.451135"/>
</kw>
<tag>rpc_reconnect</tag>
<status status="PASS" start="2025-07-24T13:24:32.868162" elapsed="21.451677"/>
</test>
<status status="PASS" start="2025-07-24T13:24:00.261214" elapsed="54.059544"/>
</suite>
<suite id="s1-s8" name="Sub Crash" source="/home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/sub_crash/robottests/sub_crash.robot">
<kw name="Init Test Context" type="SETUP">
<kw name="Set Test Context" owner="GlobalPathsLibrary">
<arg>sub_crash</arg>
<arg>sub_crash</arg>
<doc>Sets the test folder and tag prefix if it's a valid test case.
The folder must exist under integration_tests/ and contain typical test structure.</doc>
<status status="PASS" start="2025-07-24T13:24:54.324096" elapsed="0.000142"/>
</kw>
<kw name="Get Build Script Path" owner="GlobalPathsLibrary">
<msg time="2025-07-24T13:24:54.324490" level="INFO">${build} = /home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/sub_crash/scripts/build_images.sh</msg>
<var>${build}</var>
<status status="PASS" start="2025-07-24T13:24:54.324393" elapsed="0.000116"/>
</kw>
<kw name="Get Network Name" owner="GlobalPathsLibrary">
<msg time="2025-07-24T13:24:54.324653" level="INFO">${net} = ecal_test_net</msg>
<var>${net}</var>
<status status="PASS" start="2025-07-24T13:24:54.324575" elapsed="0.000095"/>
</kw>
<kw name="Get Build Script Args" owner="GlobalPathsLibrary">
<msg time="2025-07-24T13:24:54.324807" level="INFO">${args} = ['sub_crash']</msg>
<var>${args}</var>
<status status="PASS" start="2025-07-24T13:24:54.324732" elapsed="0.000097"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-07-24T13:24:54.325029" level="INFO">${BUILD_SCRIPT} = /home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/sub_crash/scripts/build_images.sh</msg>
<arg>${BUILD_SCRIPT}</arg>
<arg>${build}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-07-24T13:24:54.324901" elapsed="0.000155"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-07-24T13:24:54.325249" level="INFO">${NETWORK} = ecal_test_net</msg>
<arg>${NETWORK}</arg>
<arg>${net}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-07-24T13:24:54.325128" elapsed="0.000162"/>
</kw>
<kw name="Get Test Description" owner="GlobalPathsLibrary">
<msg time="2025-07-24T13:24:54.325503" level="INFO">${desc} = Test Objective:
Ensure that a second subscriber continues to receive messages even if one subscriber crashes.

Test Scenario:
- One publisher (`test_publisher`) sends continuous messages (value 43).
-...</msg>
<var>${desc}</var>
<doc>Reads the *** Comments *** section from the .robot file and returns it as a string.</doc>
<status status="PASS" start="2025-07-24T13:24:54.325358" elapsed="0.000165"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-24T13:24:54.325674" level="INFO">Test Objective:
Ensure that a second subscriber continues to receive messages even if one subscriber crashes.

Test Scenario:
- One publisher (`test_publisher`) sends continuous messages (value 43).
- Two subscribers are started:
1. `crash_subscriber`: receives a few messages and then crashes.
2. `test_subscriber`: receives messages throughout the test duration.
- A monitoring process tracks all components.

Success Criteria:
- `test_subscriber` must receive a number of messages.
- `test_subscriber` must exit with code 0.
- The crash of one subscriber does not affect the continued communication of the other.</msg>
<arg>${desc}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-24T13:24:54.325592" elapsed="0.000112"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>[SETUP] Building Docker image...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T13:24:54.325769" elapsed="0.000086"/>
</kw>
<kw name="Run Process" owner="Process">
<msg time="2025-07-24T13:24:54.326152" level="INFO">Starting process:
/home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/sub_crash/scripts/build_images.sh sub_crash</msg>
<msg time="2025-07-24T13:24:54.326560" level="INFO">Waiting for process to complete.</msg>
<msg time="2025-07-24T13:25:03.616575" level="INFO">Process completed.</msg>
<msg time="2025-07-24T13:25:03.616750" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<var>${result}</var>
<arg>${BUILD_SCRIPT}</arg>
<arg>@{args}</arg>
<doc>Runs a process and waits for it to complete.</doc>
<status status="PASS" start="2025-07-24T13:24:54.325966" elapsed="9.290809"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-24T13:25:03.617452" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${result.rc}</arg>
<arg>0</arg>
<arg>Docker build failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-24T13:25:03.616932" elapsed="0.000571"/>
</kw>
<kw name="Create Docker Network" owner="DockerLibrary">
<arg>${NETWORK}</arg>
<status status="PASS" start="2025-07-24T13:25:03.617590" elapsed="0.007156"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-24T13:25:06.625109" level="INFO">Slept 3 seconds.</msg>
<arg>3s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-24T13:25:03.624866" elapsed="3.000351"/>
</kw>
<status status="PASS" start="2025-07-24T13:24:54.323902" elapsed="12.301419"/>
</kw>
<test id="s1-s8-t1" name="Network Communication Continues After Subscriber Crash (UDP)" line="30">
<kw name="Run Network Communication Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T13:25:06.626620" level="INFO">${IMAGE} = sub_crash_network_udp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T13:25:06.626470" elapsed="0.000170"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T13:25:06.626798" level="INFO">${TOPIC} = test_topic</msg>
<var>${TOPIC}</var>
<arg>test_topic</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T13:25:06.626714" elapsed="0.000102"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T13:25:06.626997" level="INFO">${CRASH_SUB} = crash_sub_network_udp</msg>
<var>${CRASH_SUB}</var>
<arg>crash_sub_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T13:25:06.626883" elapsed="0.000130"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T13:25:06.627178" level="INFO">${TEST_SUB} = test_sub_network_udp</msg>
<var>${TEST_SUB}</var>
<arg>test_sub_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T13:25:06.627079" elapsed="0.000116"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T13:25:06.627375" level="INFO">${TEST_PUB} = test_pub_network_udp</msg>
<var>${TEST_PUB}</var>
<arg>test_pub_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T13:25:06.627257" elapsed="0.000134"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Starting subscriber crash continuity test with ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T13:25:06.627456" elapsed="0.000129"/>
</kw>
<kw name="Create Docker Network" owner="DockerLibrary">
<arg>${NETWORK}</arg>
<status status="PASS" start="2025-07-24T13:25:06.627681" elapsed="0.007365"/>
</kw>
<kw name="Start Container" owner="DockerLibrary">
<arg>${CRASH_SUB}</arg>
<arg>${IMAGE}</arg>
<arg>crash_subscriber</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${CRASH_SUB}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-24T13:25:06.635140" elapsed="0.129063"/>
</kw>
<kw name="Start Container" owner="DockerLibrary">
<arg>${TEST_SUB}</arg>
<arg>${IMAGE}</arg>
<arg>test_subscriber</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${TEST_SUB}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-24T13:25:06.764418" elapsed="0.124726"/>
</kw>
<kw name="Start Container" owner="DockerLibrary">
<arg>${TEST_PUB}</arg>
<arg>${IMAGE}</arg>
<arg>test_publisher</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${TEST_PUB}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-24T13:25:06.889360" elapsed="0.119983"/>
</kw>
<kw name="Wait For Container Exit" owner="DockerLibrary">
<arg>${CRASH_SUB}</arg>
<status status="PASS" start="2025-07-24T13:25:07.009592" elapsed="7.075003"/>
</kw>
<kw name="Wait For Container Exit" owner="DockerLibrary">
<arg>${TEST_SUB}</arg>
<status status="PASS" start="2025-07-24T13:25:14.084821" elapsed="26.864033"/>
</kw>
<kw name="Wait For Container Exit" owner="DockerLibrary">
<arg>${TEST_PUB}</arg>
<status status="PASS" start="2025-07-24T13:25:40.949074" elapsed="0.001897"/>
</kw>
<kw name="Get Container Logs" owner="DockerLibrary">
<msg time="2025-07-24T13:25:40.953865" level="INFO">${test_sub_logs} = [Entrypoint] Starting crash publisher in mode network_udp

[Test_Subscriber] Waiting for messages...
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Receive...</msg>
<var>${test_sub_logs}</var>
<arg>${TEST_SUB}</arg>
<status status="PASS" start="2025-07-24T13:25:40.951106" elapsed="0.002785"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[SUBSCRIBER CONTAINER OUTPUT]\n${test_sub_logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T13:25:40.953980" elapsed="0.000162"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-24T13:25:40.954523" level="INFO">
[SUBSCRIBER CONTAINER OUTPUT]
[Entrypoint] Starting crash publisher in mode network_udp

[Test_Subscriber] Waiting for messages...
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43

[✓] Communication successful, received 30 messages.
</msg>
<arg>\n[SUBSCRIBER CONTAINER OUTPUT]\n${test_sub_logs}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-24T13:25:40.954251" elapsed="0.000339"/>
</kw>
<kw name="Get Container Logs" owner="DockerLibrary">
<msg time="2025-07-24T13:25:40.956926" level="INFO">${crash_sub_logs} = [Entrypoint] Starting crash subscriber in mode network_udp

[Crash Subscriber] Registered and sleeping before crash...

[Crash_Subscriber] Received value: 43
[Crash_Subscriber] Received value: 43
[Cra...</msg>
<var>${crash_sub_logs}</var>
<arg>${CRASH_SUB}</arg>
<status status="PASS" start="2025-07-24T13:25:40.954694" elapsed="0.002257"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[CRASH SUBSCRIBER CONTAINER OUTPUT]\n${crash_sub_logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T13:25:40.957036" elapsed="0.000150"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-24T13:25:40.957452" level="INFO">
[CRASH SUBSCRIBER CONTAINER OUTPUT]
[Entrypoint] Starting crash subscriber in mode network_udp

[Crash Subscriber] Registered and sleeping before crash...

[Crash_Subscriber] Received value: 43
[Crash_Subscriber] Received value: 43
[Crash_Subscriber] Received value: 43
[Crash_Subscriber] Received value: 43
[Crash_Subscriber] Received value: 43

[Crash Subscriber] Received 5 messages before crash.

[Crash Subscriber] Simulating crash now.

./entrypoint.sh: line 61:     7 Aborted                 (core dumped) ./crash_subscriber $ARGS $EXTRA
</msg>
<arg>\n[CRASH SUBSCRIBER CONTAINER OUTPUT]\n${crash_sub_logs}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-24T13:25:40.957329" elapsed="0.000158"/>
</kw>
<kw name="Wait For Container Exit" owner="DockerLibrary">
<msg time="2025-07-24T13:25:40.958515" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>${TEST_SUB}</arg>
<status status="PASS" start="2025-07-24T13:25:40.957560" elapsed="0.000978"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-24T13:25:40.958757" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Communication failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-24T13:25:40.958622" elapsed="0.000179"/>
</kw>
<kw name="Log Test Summary" owner="DockerLibrary">
<arg>Network Communication after one Subscriber crash ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-07-24T13:25:40.958875" elapsed="0.000143"/>
</kw>
<kw name="Stop Container" owner="DockerLibrary">
<arg>${CRASH_SUB}</arg>
<status status="PASS" start="2025-07-24T13:25:40.959110" elapsed="0.004813"/>
</kw>
<kw name="Stop Container" owner="DockerLibrary">
<arg>${TEST_SUB}</arg>
<status status="PASS" start="2025-07-24T13:25:40.964008" elapsed="0.005020"/>
</kw>
<kw name="Stop Container" owner="DockerLibrary">
<arg>${TEST_PUB}</arg>
<status status="PASS" start="2025-07-24T13:25:40.969112" elapsed="0.004813"/>
</kw>
<arg>network_udp</arg>
<arg>network</arg>
<status status="PASS" start="2025-07-24T13:25:06.625919" elapsed="34.348066"/>
</kw>
<tag>sub_crash_network_udp</tag>
<status status="PASS" start="2025-07-24T13:25:06.625386" elapsed="34.348693"/>
</test>
<test id="s1-s8-t2" name="Network Communication Continues After Publisher Crash (TCP)" line="34">
<kw name="Run Network Communication Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T13:25:40.975965" level="INFO">${IMAGE} = sub_crash_network_tcp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T13:25:40.975823" elapsed="0.000163"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T13:25:40.976146" level="INFO">${TOPIC} = test_topic</msg>
<var>${TOPIC}</var>
<arg>test_topic</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T13:25:40.976061" elapsed="0.000103"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T13:25:40.976383" level="INFO">${CRASH_SUB} = crash_sub_network_tcp</msg>
<var>${CRASH_SUB}</var>
<arg>crash_sub_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T13:25:40.976232" elapsed="0.000170"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T13:25:40.976580" level="INFO">${TEST_SUB} = test_sub_network_tcp</msg>
<var>${TEST_SUB}</var>
<arg>test_sub_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T13:25:40.976474" elapsed="0.000123"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T13:25:40.976762" level="INFO">${TEST_PUB} = test_pub_network_tcp</msg>
<var>${TEST_PUB}</var>
<arg>test_pub_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T13:25:40.976662" elapsed="0.000116"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Starting subscriber crash continuity test with ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T13:25:40.976841" elapsed="0.000112"/>
</kw>
<kw name="Create Docker Network" owner="DockerLibrary">
<arg>${NETWORK}</arg>
<status status="PASS" start="2025-07-24T13:25:40.977096" elapsed="0.006757"/>
</kw>
<kw name="Start Container" owner="DockerLibrary">
<arg>${CRASH_SUB}</arg>
<arg>${IMAGE}</arg>
<arg>crash_subscriber</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${CRASH_SUB}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-24T13:25:40.983968" elapsed="0.126599"/>
</kw>
<kw name="Start Container" owner="DockerLibrary">
<arg>${TEST_SUB}</arg>
<arg>${IMAGE}</arg>
<arg>test_subscriber</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${TEST_SUB}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-24T13:25:41.110745" elapsed="0.122824"/>
</kw>
<kw name="Start Container" owner="DockerLibrary">
<arg>${TEST_PUB}</arg>
<arg>${IMAGE}</arg>
<arg>test_publisher</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${TEST_PUB}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-24T13:25:41.233738" elapsed="0.129376"/>
</kw>
<kw name="Wait For Container Exit" owner="DockerLibrary">
<arg>${CRASH_SUB}</arg>
<status status="PASS" start="2025-07-24T13:25:41.363337" elapsed="7.229150"/>
</kw>
<kw name="Wait For Container Exit" owner="DockerLibrary">
<arg>${TEST_SUB}</arg>
<status status="PASS" start="2025-07-24T13:25:48.592712" elapsed="26.704990"/>
</kw>
<kw name="Wait For Container Exit" owner="DockerLibrary">
<arg>${TEST_PUB}</arg>
<status status="PASS" start="2025-07-24T13:26:15.297875" elapsed="0.001699"/>
</kw>
<kw name="Get Container Logs" owner="DockerLibrary">
<msg time="2025-07-24T13:26:15.301959" level="INFO">${test_sub_logs} = [Entrypoint] Starting crash publisher in mode network_tcp

[Test_Subscriber] Waiting for messages...
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Receive...</msg>
<var>${test_sub_logs}</var>
<arg>${TEST_SUB}</arg>
<status status="PASS" start="2025-07-24T13:26:15.299681" elapsed="0.002305"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[SUBSCRIBER CONTAINER OUTPUT]\n${test_sub_logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T13:26:15.302075" elapsed="0.000173"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-24T13:26:15.302578" level="INFO">
[SUBSCRIBER CONTAINER OUTPUT]
[Entrypoint] Starting crash publisher in mode network_tcp

[Test_Subscriber] Waiting for messages...
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
[Test_Subscriber] Received value: 43
1753363573773 ms | b8c9d841f04c | ./test_subscriber | 7 | error | CTCPReaderLayer - TCPPubSub (Error) -SubscriberSession 172.18.0.3:40778-&gt;c258f4f71d62:39717: Error reading header length: End of file
1753363573774 ms | b8c9d841f04c | ./test_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.3:33998: Failed connecting to publisher c258f4f71d62:39717: Connection refused
1753363573774 ms | b8c9d841f04c | ./test_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.3:34012: Failed connecting to publisher c258f4f71d62:39717: Connection refused
1753363573775 ms | b8c9d841f04c | ./test_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.3:34026: Failed connecting to publisher c258f4f71d62:39717: Connection refused
1753363573776 ms | b8c9d841f04c | ./test_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.3:34042: Failed connecting to publisher c258f4f71d62:39717: Connection refused
1753363573776 ms | b8c9d841f04c | ./test_subscriber | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.3:34054: Failed connecting to publisher c258f4f71d62:39717: Connection refused

[✓] Communication successful, received 30 messages.
</msg>
<arg>\n[SUBSCRIBER CONTAINER OUTPUT]\n${test_sub_logs}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-24T13:26:15.302415" elapsed="0.000216"/>
</kw>
<kw name="Get Container Logs" owner="DockerLibrary">
<msg time="2025-07-24T13:26:15.305135" level="INFO">${crash_sub_logs} = [Entrypoint] Starting crash subscriber in mode network_tcp

[Crash Subscriber] Registered and sleeping before crash...

[Crash_Subscriber] Received value: 43
[Crash_Subscriber] Received value: 43
[Cra...</msg>
<var>${crash_sub_logs}</var>
<arg>${CRASH_SUB}</arg>
<status status="PASS" start="2025-07-24T13:26:15.302716" elapsed="0.002455"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[CRASH SUBSCRIBER CONTAINER OUTPUT]\n${crash_sub_logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T13:26:15.305311" elapsed="0.000152"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-24T13:26:15.305720" level="INFO">
[CRASH SUBSCRIBER CONTAINER OUTPUT]
[Entrypoint] Starting crash subscriber in mode network_tcp

[Crash Subscriber] Registered and sleeping before crash...

[Crash_Subscriber] Received value: 43
[Crash_Subscriber] Received value: 43
[Crash_Subscriber] Received value: 43
[Crash_Subscriber] Received value: 43
[Crash_Subscriber] Received value: 43

[Crash Subscriber] Received 5 messages before crash.

[Crash Subscriber] Simulating crash now.

./entrypoint.sh: line 61:     7 Aborted                 (core dumped) ./crash_subscriber $ARGS $EXTRA
</msg>
<arg>\n[CRASH SUBSCRIBER CONTAINER OUTPUT]\n${crash_sub_logs}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-24T13:26:15.305581" elapsed="0.000187"/>
</kw>
<kw name="Wait For Container Exit" owner="DockerLibrary">
<msg time="2025-07-24T13:26:15.306879" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>${TEST_SUB}</arg>
<status status="PASS" start="2025-07-24T13:26:15.305865" elapsed="0.001036"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-24T13:26:15.307114" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Communication failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-24T13:26:15.306983" elapsed="0.000174"/>
</kw>
<kw name="Log Test Summary" owner="DockerLibrary">
<arg>Network Communication after one Subscriber crash ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-07-24T13:26:15.307232" elapsed="0.000170"/>
</kw>
<kw name="Stop Container" owner="DockerLibrary">
<arg>${CRASH_SUB}</arg>
<status status="PASS" start="2025-07-24T13:26:15.307505" elapsed="0.005009"/>
</kw>
<kw name="Stop Container" owner="DockerLibrary">
<arg>${TEST_SUB}</arg>
<status status="PASS" start="2025-07-24T13:26:15.312600" elapsed="0.005526"/>
</kw>
<kw name="Stop Container" owner="DockerLibrary">
<arg>${TEST_PUB}</arg>
<status status="PASS" start="2025-07-24T13:26:15.318208" elapsed="0.004873"/>
</kw>
<arg>network_tcp</arg>
<arg>network</arg>
<status status="PASS" start="2025-07-24T13:25:40.975603" elapsed="34.347538"/>
</kw>
<tag>pub_crash_network_tcp</tag>
<status status="PASS" start="2025-07-24T13:25:40.975178" elapsed="34.348090"/>
</test>
<test id="s1-s8-t3" name="Local Communication Continues After Subscriber Crash (SHM)" line="38">
<kw name="Run Local Communication Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T13:26:15.325101" level="INFO">${IMAGE} = sub_crash_local_shm</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T13:26:15.324966" elapsed="0.000155"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T13:26:15.325339" level="INFO">${CONTAINER} = local_all_local_shm</msg>
<var>${CONTAINER}</var>
<arg>local_all_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T13:26:15.325196" elapsed="0.000163"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Starting local test container with ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T13:26:15.325429" elapsed="0.000120"/>
</kw>
<kw name="Create Docker Network" owner="DockerLibrary">
<arg>${NETWORK}</arg>
<status status="PASS" start="2025-07-24T13:26:15.325648" elapsed="0.006778"/>
</kw>
<kw name="Start Container" owner="DockerLibrary">
<arg>${CONTAINER}</arg>
<arg>${IMAGE}</arg>
<arg>local_all</arg>
<arg>${layer_tag}</arg>
<status status="PASS" start="2025-07-24T13:26:15.332522" elapsed="0.106585"/>
</kw>
<kw name="Wait For Container Exit" owner="DockerLibrary">
<msg time="2025-07-24T13:26:50.513881" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-24T13:26:15.439350" elapsed="35.074586"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-24T13:26:50.514445" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Local test failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-24T13:26:50.514140" elapsed="0.000384"/>
</kw>
<kw name="Get Container Logs" owner="DockerLibrary">
<msg time="2025-07-24T13:26:50.517920" level="INFO">${logs} = [Entrypoint] Starting local test (pub/sub/monitor) in mode local_shm
Shared memory monitoring is enabled (domain: ecal_mon - queue size: 1024)

[Crash Subscriber] Registered and sleeping before crash....</msg>
<var>${logs}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-24T13:26:50.514713" elapsed="0.003233"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n\n[LOCAL TEST CONTAINER OUTPUT]\n\n${logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T13:26:50.518037" elapsed="0.000169"/>
</kw>
<kw name="Log Test Summary" owner="DockerLibrary">
<arg>Local Communication after one Subscriber crash ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-07-24T13:26:50.518333" elapsed="0.000213"/>
</kw>
<kw name="Stop Container" owner="DockerLibrary">
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-24T13:26:50.518659" elapsed="0.004923"/>
</kw>
<arg>local_shm</arg>
<status status="PASS" start="2025-07-24T13:26:15.324774" elapsed="35.198872"/>
</kw>
<tag>sub_crash_local_shm</tag>
<status status="PASS" start="2025-07-24T13:26:15.324420" elapsed="35.199321"/>
</test>
<test id="s1-s8-t4" name="Local Communication Continues After Subscriber Crash (UDP)" line="42">
<kw name="Run Local Communication Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T13:26:50.524980" level="INFO">${IMAGE} = sub_crash_local_udp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T13:26:50.524840" elapsed="0.000160"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T13:26:50.525184" level="INFO">${CONTAINER} = local_all_local_udp</msg>
<var>${CONTAINER}</var>
<arg>local_all_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T13:26:50.525075" elapsed="0.000126"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Starting local test container with ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T13:26:50.525268" elapsed="0.000165"/>
</kw>
<kw name="Create Docker Network" owner="DockerLibrary">
<arg>${NETWORK}</arg>
<status status="PASS" start="2025-07-24T13:26:50.525524" elapsed="0.006709"/>
</kw>
<kw name="Start Container" owner="DockerLibrary">
<arg>${CONTAINER}</arg>
<arg>${IMAGE}</arg>
<arg>local_all</arg>
<arg>${layer_tag}</arg>
<status status="PASS" start="2025-07-24T13:26:50.532370" elapsed="0.114428"/>
</kw>
<kw name="Wait For Container Exit" owner="DockerLibrary">
<msg time="2025-07-24T13:27:24.708978" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-24T13:26:50.647036" elapsed="34.061984"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-24T13:27:24.709401" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Local test failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-24T13:27:24.709165" elapsed="0.000285"/>
</kw>
<kw name="Get Container Logs" owner="DockerLibrary">
<msg time="2025-07-24T13:27:24.712379" level="INFO">${logs} = [Entrypoint] Starting local test (pub/sub/monitor) in mode local_udp
[Publisher] Waiting for at least 2 subscriber(s) on topic: test_topic

[Crash Subscriber] Registered and sleeping before crash...

...</msg>
<var>${logs}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-24T13:27:24.709537" elapsed="0.002870"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n\n[LOCAL TEST CONTAINER OUTPUT]\n\n${logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T13:27:24.712498" elapsed="0.000163"/>
</kw>
<kw name="Log Test Summary" owner="DockerLibrary">
<arg>Local Communication after one Subscriber crash ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-07-24T13:27:24.712757" elapsed="0.000178"/>
</kw>
<kw name="Stop Container" owner="DockerLibrary">
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-24T13:27:24.713038" elapsed="0.005047"/>
</kw>
<arg>local_udp</arg>
<status status="PASS" start="2025-07-24T13:26:50.524642" elapsed="34.193505"/>
</kw>
<tag>sub_crash_local_udp</tag>
<status status="PASS" start="2025-07-24T13:26:50.524240" elapsed="34.194003"/>
</test>
<test id="s1-s8-t5" name="Local Communication Continues After Subscriber Crash (TCP)" line="46">
<kw name="Run Local Communication Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T13:27:24.719476" level="INFO">${IMAGE} = sub_crash_local_tcp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T13:27:24.719314" elapsed="0.000183"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T13:27:24.719685" level="INFO">${CONTAINER} = local_all_local_tcp</msg>
<var>${CONTAINER}</var>
<arg>local_all_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T13:27:24.719574" elapsed="0.000129"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Starting local test container with ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T13:27:24.719770" elapsed="0.000121"/>
</kw>
<kw name="Create Docker Network" owner="DockerLibrary">
<arg>${NETWORK}</arg>
<status status="PASS" start="2025-07-24T13:27:24.719984" elapsed="0.006796"/>
</kw>
<kw name="Start Container" owner="DockerLibrary">
<arg>${CONTAINER}</arg>
<arg>${IMAGE}</arg>
<arg>local_all</arg>
<arg>${layer_tag}</arg>
<status status="PASS" start="2025-07-24T13:27:24.726901" elapsed="0.108114"/>
</kw>
<kw name="Wait For Container Exit" owner="DockerLibrary">
<msg time="2025-07-24T13:27:58.905011" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-24T13:27:24.835228" elapsed="34.069843"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-24T13:27:58.905467" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Local test failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-24T13:27:58.905242" elapsed="0.000274"/>
</kw>
<kw name="Get Container Logs" owner="DockerLibrary">
<msg time="2025-07-24T13:27:58.908614" level="INFO">${logs} = [Entrypoint] Starting local test (pub/sub/monitor) in mode local_tcp
[Publisher] Waiting for at least 2 subscriber(s) on topic: test_topic

[Crash Subscriber] Registered and sleeping before crash...

...</msg>
<var>${logs}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-24T13:27:58.905602" elapsed="0.003038"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n\n[LOCAL TEST CONTAINER OUTPUT]\n\n${logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T13:27:58.908731" elapsed="0.000174"/>
</kw>
<kw name="Log Test Summary" owner="DockerLibrary">
<arg>Local Communication after one Subscriber crash ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-07-24T13:27:58.909011" elapsed="0.000191"/>
</kw>
<kw name="Stop Container" owner="DockerLibrary">
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-24T13:27:58.909333" elapsed="0.005456"/>
</kw>
<arg>local_tcp</arg>
<status status="PASS" start="2025-07-24T13:27:24.719084" elapsed="34.195768"/>
</kw>
<tag>sub_crash_local_tcp</tag>
<status status="PASS" start="2025-07-24T13:27:24.718707" elapsed="34.196240"/>
</test>
<status status="PASS" start="2025-07-24T13:24:54.321323" elapsed="184.594336"/>
</suite>
<suite id="s1-s9" name="Sub Send Crash" source="/home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/sub_send_crash/robottests/sub_send_crash.robot">
<kw name="Init Test Context" type="SETUP">
<kw name="Set Test Context" owner="GlobalPathsLibrary">
<arg>sub_send_crash</arg>
<arg>sub_send_crash</arg>
<doc>Sets the test folder and tag prefix if it's a valid test case.
The folder must exist under integration_tests/ and contain typical test structure.</doc>
<status status="PASS" start="2025-07-24T13:27:58.918985" elapsed="0.000135"/>
</kw>
<kw name="Get Build Script Path" owner="GlobalPathsLibrary">
<msg time="2025-07-24T13:27:58.919316" level="INFO">${build} = /home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/sub_send_crash/scripts/build_images.sh</msg>
<var>${build}</var>
<status status="PASS" start="2025-07-24T13:27:58.919200" elapsed="0.000148"/>
</kw>
<kw name="Get Network Name" owner="GlobalPathsLibrary">
<msg time="2025-07-24T13:27:58.919510" level="INFO">${net} = ecal_test_net</msg>
<var>${net}</var>
<status status="PASS" start="2025-07-24T13:27:58.919425" elapsed="0.000104"/>
</kw>
<kw name="Get Build Script Args" owner="GlobalPathsLibrary">
<msg time="2025-07-24T13:27:58.919671" level="INFO">${args} = ['sub_send_crash']</msg>
<var>${args}</var>
<status status="PASS" start="2025-07-24T13:27:58.919593" elapsed="0.000095"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-07-24T13:27:58.919897" level="INFO">${BUILD_SCRIPT} = /home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/sub_send_crash/scripts/build_images.sh</msg>
<arg>${BUILD_SCRIPT}</arg>
<arg>${build}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-07-24T13:27:58.919763" elapsed="0.000161"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-07-24T13:27:58.920123" level="INFO">${NETWORK} = ecal_test_net</msg>
<arg>${NETWORK}</arg>
<arg>${net}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-07-24T13:27:58.919998" elapsed="0.000152"/>
</kw>
<kw name="Get Test Description" owner="GlobalPathsLibrary">
<msg time="2025-07-24T13:27:58.920391" level="INFO">${desc} = Test Objective:
This test verifies that if one subscriber crashes during the reception of a large message,
other subscribers or the publisher remain unaffected and stable.

Test Scenario:
- A `large_p...</msg>
<var>${desc}</var>
<doc>Reads the *** Comments *** section from the .robot file and returns it as a string.</doc>
<status status="PASS" start="2025-07-24T13:27:58.920216" elapsed="0.000196"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-24T13:27:58.920576" level="INFO">Test Objective:
This test verifies that if one subscriber crashes during the reception of a large message,
other subscribers or the publisher remain unaffected and stable.

Test Scenario:
- A `large_publisher` sends very large messages (~50MB+).
- One `crash_subscriber` is designed to crash during message reception (e.g., via simulated failure during callback).
- One `test_subscriber` continues running and must successfully receive all messages.
- In an additional test case, a variant with `zero_copy_mode` enabled is used to evaluate the performance and fault tolerance in a high-throughput configuration.

Success Criteria:
- The `test_subscriber` must receive messages without crashing and exit with code 0.
- The `crash_subscriber` should crash as intended.
- The `large_publisher` must remain operational and not be blocked or destabilized.
- In SHM mode with `zero_copy`, the system should handle the shared memory access without affecting other subscribers or the pubisher.

Notes:
- Zero-Copy mode is only applicable to Shared Memory (SHM) transport.
- The Local UDP test is skipped for large messages because of message size limitations.
- This test failes because of SHM with zero copy mode, which is a known issue in the current implementation.</msg>
<arg>${desc}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-24T13:27:58.920488" elapsed="0.000121"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>[SETUP] Building image...</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T13:27:58.920675" elapsed="0.000093"/>
</kw>
<kw name="Run Process" owner="Process">
<msg time="2025-07-24T13:27:58.921000" level="INFO">Starting process:
/home/runner/work/ECAL_Test_Framework/ECAL_Test_Framework/integration_tests/sub_send_crash/scripts/build_images.sh sub_send_crash</msg>
<msg time="2025-07-24T13:27:58.921395" level="INFO">Waiting for process to complete.</msg>
<msg time="2025-07-24T13:28:08.228914" level="INFO">Process completed.</msg>
<msg time="2025-07-24T13:28:08.229080" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<var>${result}</var>
<arg>${BUILD_SCRIPT}</arg>
<arg>@{args}</arg>
<doc>Runs a process and waits for it to complete.</doc>
<status status="PASS" start="2025-07-24T13:27:58.920855" elapsed="9.308249"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-24T13:28:08.229740" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${result.rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-24T13:28:08.229257" elapsed="0.000534"/>
</kw>
<kw name="Create Docker Network" owner="DockerLibrary">
<arg>${NETWORK}</arg>
<status status="PASS" start="2025-07-24T13:28:08.229874" elapsed="0.007444"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-24T13:28:11.237678" level="INFO">Slept 3 seconds.</msg>
<arg>3s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-24T13:28:08.237447" elapsed="3.000397"/>
</kw>
<status status="PASS" start="2025-07-24T13:27:58.918833" elapsed="12.319094"/>
</kw>
<test id="s1-s9-t1" name="Crash During Reception (SHM)" line="36">
<kw name="Run Local Crash Receive Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T13:28:11.238866" level="INFO">${IMAGE} = sub_send_crash_local_shm</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T13:28:11.238715" elapsed="0.000172"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T13:28:11.239072" level="INFO">${CONTAINER} = local_all_local_shm</msg>
<var>${CONTAINER}</var>
<arg>local_all_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T13:28:11.238962" elapsed="0.000127"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Starting crash test in LOCAL mode: ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T13:28:11.239159" elapsed="0.000157"/>
</kw>
<kw name="Start Container" owner="DockerLibrary">
<arg>${CONTAINER}</arg>
<arg>${IMAGE}</arg>
<arg>local_all</arg>
<arg>${layer_tag}</arg>
<arg>test_topic</arg>
<arg>${CONTAINER}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-24T13:28:11.239420" elapsed="0.135096"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-24T13:28:46.375070" level="INFO">Slept 35 seconds.</msg>
<arg>35s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-24T13:28:11.374738" elapsed="35.000449"/>
</kw>
<kw name="Get Container Logs" owner="DockerLibrary">
<msg time="2025-07-24T13:28:46.378207" level="INFO">${logs} = [Entrypoint] Starting all processes locally in one container (mode local_shm)
Shared memory monitoring is enabled (domain: ecal_mon - queue size: 1024)
[Publisher] Prepared 50MB message.
[Publisher] W...</msg>
<var>${logs}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-24T13:28:46.375388" elapsed="0.002844"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[LOCAL TEST CONTAINER OUTPUT]\n${logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T13:28:46.378347" elapsed="0.000164"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-24T13:28:46.378756" level="INFO">
[LOCAL TEST CONTAINER OUTPUT]
[Entrypoint] Starting all processes locally in one container (mode local_shm)
Shared memory monitoring is enabled (domain: ecal_mon - queue size: 1024)
[Publisher] Prepared 50MB message.
[Publisher] Waiting for at least 2 subscriber(s) on topic: test_topic
[Publisher] Found 2 subscriber(s). Proceeding to send messages.
Shared memory monitoring is enabled (domain: ecal_mon - queue size: 1024)
[Crash_Sub] Listening to topic 'test_topic' in mode 'local_shm'
[Crash_Sub] Received 52428800 bytes
[Crash_Sub] Simulating crash after 2 seconds during active reception
[Publisher] Subscriber detected. Starting to send.
[Publisher] Send result: ✓, size: 52428800 bytes
[Publisher] Send result: ✓, size: 52428800 bytes
[Publisher] Send result: ✓, size: 52428800 bytes
[Publisher] Finished sending.
Shared memory monitoring is enabled (domain: ecal_mon - queue size: 1024)
[Test_Sub] Ready and waiting...
[Test_Sub] Received 52428800 bytes (message 1)
[Test_Sub] Received 52428800 bytes (message 2)
[Test_Sub] Received 52428800 bytes (message 3)
[✓] Received 3 messages.
./entrypoint.sh: line 45:    14 Aborted                 (core dumped) ./crash_send_subscriber $ARGS
</msg>
<arg>\n[LOCAL TEST CONTAINER OUTPUT]\n${logs}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-24T13:28:46.378616" elapsed="0.000182"/>
</kw>
<kw name="Wait For Container Exit" owner="DockerLibrary">
<msg time="2025-07-24T13:28:46.379928" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-24T13:28:46.378873" elapsed="0.001079"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-24T13:28:46.380168" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Local container failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-24T13:28:46.380035" elapsed="0.000184"/>
</kw>
<kw name="Get Container Logs" owner="DockerLibrary">
<msg time="2025-07-24T13:28:46.382306" level="INFO">${logs} = [Entrypoint] Starting all processes locally in one container (mode local_shm)
Shared memory monitoring is enabled (domain: ecal_mon - queue size: 1024)
[Publisher] Prepared 50MB message.
[Publisher] W...</msg>
<var>${logs}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-24T13:28:46.380325" elapsed="0.002008"/>
</kw>
<kw name="Log Test Summary" owner="DockerLibrary">
<arg>Local Crash Receive Test ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-07-24T13:28:46.382414" elapsed="0.000143"/>
</kw>
<kw name="Stop Container" owner="DockerLibrary">
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-24T13:28:46.382650" elapsed="0.005184"/>
</kw>
<arg>local_shm</arg>
<status status="PASS" start="2025-07-24T13:28:11.238471" elapsed="35.149422"/>
</kw>
<tag>crash_receive_local_shm</tag>
<status status="PASS" start="2025-07-24T13:28:11.237987" elapsed="35.149994"/>
</test>
<test id="s1-s9-t2" name="Crash During Reception (TCP)" line="50">
<kw name="Run Local Crash Receive Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T13:28:46.389127" level="INFO">${IMAGE} = sub_send_crash_local_tcp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T13:28:46.388993" elapsed="0.000154"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T13:28:46.389358" level="INFO">${CONTAINER} = local_all_local_tcp</msg>
<var>${CONTAINER}</var>
<arg>local_all_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T13:28:46.389220" elapsed="0.000156"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Starting crash test in LOCAL mode: ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T13:28:46.389447" elapsed="0.000119"/>
</kw>
<kw name="Start Container" owner="DockerLibrary">
<arg>${CONTAINER}</arg>
<arg>${IMAGE}</arg>
<arg>local_all</arg>
<arg>${layer_tag}</arg>
<arg>test_topic</arg>
<arg>${CONTAINER}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-24T13:28:46.389667" elapsed="0.139845"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-07-24T13:29:21.530015" level="INFO">Slept 35 seconds.</msg>
<arg>35s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-07-24T13:28:46.529707" elapsed="35.000422"/>
</kw>
<kw name="Get Container Logs" owner="DockerLibrary">
<msg time="2025-07-24T13:29:21.533319" level="INFO">${logs} = [Entrypoint] Starting all processes locally in one container (mode local_tcp)
[Publisher] Prepared 50MB message.
[Publisher] Waiting for at least 2 subscriber(s) on topic: test_topic
1753363728532 ms ...</msg>
<var>${logs}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-24T13:29:21.530324" elapsed="0.003023"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[LOCAL TEST CONTAINER OUTPUT]\n${logs}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T13:29:21.533440" elapsed="0.000166"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-24T13:29:21.533879" level="INFO">
[LOCAL TEST CONTAINER OUTPUT]
[Entrypoint] Starting all processes locally in one container (mode local_tcp)
[Publisher] Prepared 50MB message.
[Publisher] Waiting for at least 2 subscriber(s) on topic: test_topic
1753363728532 ms | 8b4025d531a1 | large_publisher | 7 | info | CTCPReaderLayer - TCPPubSub (Info) -Publisher :::0: Created publisher and waiting for clients.
1753363728533 ms | 8b4025d531a1 | large_publisher | 7 | info | CTCPReaderLayer - TCPPubSub (Info) -Publisher :::41395: Subscriber ::ffff:172.18.0.2:47832 has connected.
1753363728533 ms | 8b4025d531a1 | large_publisher | 7 | info | CTCPReaderLayer - TCPPubSub (Info) -Publisher :::41395: Subscriber ::ffff:172.18.0.2:47816 has connected.
[Publisher] Found 2 subscriber(s). Proceeding to send messages.
[Crash_Sub] Listening to topic 'test_topic' in mode 'local_tcp'
[Crash_Sub] Received 52428800 bytes
[Crash_Sub] Simulating crash after 2 seconds during active reception
[Publisher] Subscriber detected. Starting to send.
[Publisher] Send result: ✓, size: 52428800 bytes
[Publisher] Send result: ✓, size: 52428800 bytes
1753363731087 ms | 8b4025d531a1 | large_publisher | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -PublisherSession ::ffff:172.18.0.2:41395-&gt;?: Failed sending data: Broken pipe
[Publisher] Send result: ✓, size: 52428800 bytes
[Publisher] Finished sending.
[Test_Sub] Ready and waiting...
[Test_Sub] Received 52428800 bytes (message 1)
[Test_Sub] Received 52428800 bytes (message 2)
[Test_Sub] Received 52428800 bytes (message 3)
1753363733107 ms | 8b4025d531a1 | test_sub | 13 | error | CTCPReaderLayer - TCPPubSub (Error) -SubscriberSession 172.18.0.2:47832-&gt;8b4025d531a1:41395: Error reading header length: End of file
1753363733108 ms | 8b4025d531a1 | test_sub | 13 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:47836: Failed connecting to publisher 8b4025d531a1:41395: Connection refused
1753363733108 ms | 8b4025d531a1 | test_sub | 13 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:47844: Failed connecting to publisher 8b4025d531a1:41395: Connection refused
1753363733108 ms | 8b4025d531a1 | test_sub | 13 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:47856: Failed connecting to publisher 8b4025d531a1:41395: Connection refused
1753363733108 ms | 8b4025d531a1 | test_sub | 13 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:47860: Failed connecting to publisher 8b4025d531a1:41395: Connection refused
1753363733108 ms | 8b4025d531a1 | test_sub | 13 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:47864: Failed connecting to publisher 8b4025d531a1:41395: Connection refused
[✓] Received 3 messages.
./entrypoint.sh: line 45:    14 Aborted                 (core dumped) ./crash_send_subscriber $ARGS
</msg>
<arg>\n[LOCAL TEST CONTAINER OUTPUT]\n${logs}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-24T13:29:21.533714" elapsed="0.000323"/>
</kw>
<kw name="Wait For Container Exit" owner="DockerLibrary">
<msg time="2025-07-24T13:29:21.535445" level="INFO">${exit_code} = 0</msg>
<var>${exit_code}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-24T13:29:21.534157" elapsed="0.001313"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-24T13:29:21.535693" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit_code}</arg>
<arg>0</arg>
<arg>Local container failed!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-24T13:29:21.535556" elapsed="0.000182"/>
</kw>
<kw name="Get Container Logs" owner="DockerLibrary">
<msg time="2025-07-24T13:29:21.537891" level="INFO">${logs} = [Entrypoint] Starting all processes locally in one container (mode local_tcp)
[Publisher] Prepared 50MB message.
[Publisher] Waiting for at least 2 subscriber(s) on topic: test_topic
1753363728532 ms ...</msg>
<var>${logs}</var>
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-24T13:29:21.535815" elapsed="0.002102"/>
</kw>
<kw name="Log Test Summary" owner="DockerLibrary">
<arg>Local Crash Receive Test ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-07-24T13:29:21.538005" elapsed="0.000150"/>
</kw>
<kw name="Stop Container" owner="DockerLibrary">
<arg>${CONTAINER}</arg>
<status status="PASS" start="2025-07-24T13:29:21.538260" elapsed="0.004918"/>
</kw>
<arg>local_tcp</arg>
<status status="PASS" start="2025-07-24T13:28:46.388802" elapsed="35.154436"/>
</kw>
<tag>crash_receive_local_tcp</tag>
<status status="PASS" start="2025-07-24T13:28:46.388458" elapsed="35.154888"/>
</test>
<test id="s1-s9-t3" name="Crash During Reception (Network UDP)" line="54">
<kw name="Run Network Crash Receive Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T13:29:21.544565" level="INFO">${IMAGE} = sub_send_crash_network_udp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T13:29:21.544428" elapsed="0.000157"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T13:29:21.544740" level="INFO">${TOPIC} = test_topic</msg>
<var>${TOPIC}</var>
<arg>test_topic</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T13:29:21.544659" elapsed="0.000098"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T13:29:21.544928" level="INFO">${SUB_OK} = sub_ok_network_udp</msg>
<var>${SUB_OK}</var>
<arg>sub_ok_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T13:29:21.544824" elapsed="0.000121"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T13:29:21.545113" level="INFO">${SUB_CRASH} = sub_crash_network_udp</msg>
<var>${SUB_CRASH}</var>
<arg>sub_crash_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T13:29:21.545012" elapsed="0.000118"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T13:29:21.545321" level="INFO">${PUBLISHER} = pub_network_udp</msg>
<var>${PUBLISHER}</var>
<arg>pub_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T13:29:21.545192" elapsed="0.000150"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Starting crash test in NETWORK mode: ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T13:29:21.545410" elapsed="0.000118"/>
</kw>
<kw name="Start Container" owner="DockerLibrary">
<arg>${SUB_OK}</arg>
<arg>${IMAGE}</arg>
<arg>test_subscriber</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${SUB_OK}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-24T13:29:21.545620" elapsed="0.131193"/>
</kw>
<kw name="Start Container" owner="DockerLibrary">
<arg>${SUB_CRASH}</arg>
<arg>${IMAGE}</arg>
<arg>crash_subscriber</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${SUB_CRASH}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-24T13:29:21.677036" elapsed="0.120399"/>
</kw>
<kw name="Start Container" owner="DockerLibrary">
<arg>${PUBLISHER}</arg>
<arg>${IMAGE}</arg>
<arg>large_publisher</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${PUBLISHER}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-24T13:29:21.797622" elapsed="0.126462"/>
</kw>
<kw name="Wait For Container Exit" owner="DockerLibrary">
<arg>${SUB_OK}</arg>
<status status="PASS" start="2025-07-24T13:29:21.924269" elapsed="30.821576"/>
</kw>
<kw name="Wait For Container Exit" owner="DockerLibrary">
<arg>${SUB_CRASH}</arg>
<status status="PASS" start="2025-07-24T13:29:52.746060" elapsed="0.001536"/>
</kw>
<kw name="Wait For Container Exit" owner="DockerLibrary">
<arg>${PUBLISHER}</arg>
<status status="PASS" start="2025-07-24T13:29:52.747694" elapsed="0.001049"/>
</kw>
<kw name="Get Container Logs" owner="DockerLibrary">
<msg time="2025-07-24T13:29:52.750912" level="INFO">${log1} = [Entrypoint] Starting stable subscriber in mode network_udp
[Test_Sub] Ready and waiting...
[Test_Sub] Received 52428800 bytes (message 1)
[Test_Sub] Received 52428800 bytes (message 2)
[Test_Sub] Rec...</msg>
<var>${log1}</var>
<arg>${SUB_OK}</arg>
<status status="PASS" start="2025-07-24T13:29:52.748831" elapsed="0.002107"/>
</kw>
<kw name="Get Container Logs" owner="DockerLibrary">
<msg time="2025-07-24T13:29:52.753027" level="INFO">${log2} = [Entrypoint] Starting crashing subscriber in mode network_udp
[Crash_Sub] Simulating crash after 2 seconds during active reception
[Crash_Sub] Listening to topic 'test_topic' in mode 'network_udp'
[Cr...</msg>
<var>${log2}</var>
<arg>${SUB_CRASH}</arg>
<status status="PASS" start="2025-07-24T13:29:52.751020" elapsed="0.002031"/>
</kw>
<kw name="Get Container Logs" owner="DockerLibrary">
<msg time="2025-07-24T13:29:52.755347" level="INFO">${log3} = [Entrypoint] Starting large publisher in mode network_udp
[Publisher] Prepared 50MB message.
[Publisher] Waiting for at least 2 subscriber(s) on topic: test_topic
[Publisher] Found 2 subscriber(s). Pr...</msg>
<var>${log3}</var>
<arg>${PUBLISHER}</arg>
<status status="PASS" start="2025-07-24T13:29:52.753133" elapsed="0.002240"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[LOG: SUBSCRIBER]\n${log1}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T13:29:52.755462" elapsed="0.000173"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[LOG: CRASH_SUBSCRIBER]\n${log2}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T13:29:52.755744" elapsed="0.000142"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[LOG: PUBLISHER]\n${log3}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T13:29:52.755978" elapsed="0.000134"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-24T13:29:52.756336" level="INFO">
[LOG: SUBSCRIBER]
[Entrypoint] Starting stable subscriber in mode network_udp
[Test_Sub] Ready and waiting...
[Test_Sub] Received 52428800 bytes (message 1)
[Test_Sub] Received 52428800 bytes (message 2)
[Test_Sub] Received 52428800 bytes (message 3)
[✓] Received 3 messages.
</msg>
<arg>\n[LOG: SUBSCRIBER]\n${log1}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-24T13:29:52.756204" elapsed="0.000169"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-24T13:29:52.756533" level="INFO">
[LOG: CRASH_SUBSCRIBER]
[Entrypoint] Starting crashing subscriber in mode network_udp
[Crash_Sub] Simulating crash after 2 seconds during active reception
[Crash_Sub] Listening to topic 'test_topic' in mode 'network_udp'
[Crash_Sub] Received 52428800 bytes
./entrypoint.sh: line 62:     7 Aborted                 (core dumped) ./crash_send_subscriber $ARGS $EXTRA
</msg>
<arg>\n[LOG: CRASH_SUBSCRIBER]\n${log2}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-24T13:29:52.756444" elapsed="0.000119"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-24T13:29:52.756712" level="INFO">
[LOG: PUBLISHER]
[Entrypoint] Starting large publisher in mode network_udp
[Publisher] Prepared 50MB message.
[Publisher] Waiting for at least 2 subscriber(s) on topic: test_topic
[Publisher] Found 2 subscriber(s). Proceeding to send messages.
[Publisher] Subscriber detected. Starting to send.
[Publisher] Send result: ✓, size: 52428800 bytes
[Publisher] Send result: ✓, size: 52428800 bytes
[Publisher] Send result: ✓, size: 52428800 bytes
[Publisher] Finished sending.
</msg>
<arg>\n[LOG: PUBLISHER]\n${log3}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-24T13:29:52.756627" elapsed="0.000117"/>
</kw>
<kw name="Wait For Container Exit" owner="DockerLibrary">
<msg time="2025-07-24T13:29:52.757696" level="INFO">${exit1} = 0</msg>
<var>${exit1}</var>
<arg>${SUB_OK}</arg>
<status status="PASS" start="2025-07-24T13:29:52.756807" elapsed="0.000912"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-24T13:29:52.757933" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit1}</arg>
<arg>0</arg>
<arg>Stable subscriber failed unexpectedly!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-24T13:29:52.757801" elapsed="0.000175"/>
</kw>
<kw name="Log Test Summary" owner="DockerLibrary">
<arg>Network Crash Receive Test ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-07-24T13:29:52.758050" elapsed="0.000148"/>
</kw>
<kw name="Stop Container" owner="DockerLibrary">
<arg>${SUB_OK}</arg>
<status status="PASS" start="2025-07-24T13:29:52.758342" elapsed="0.005084"/>
</kw>
<kw name="Stop Container" owner="DockerLibrary">
<arg>${SUB_CRASH}</arg>
<status status="PASS" start="2025-07-24T13:29:52.763508" elapsed="0.005004"/>
</kw>
<kw name="Stop Container" owner="DockerLibrary">
<arg>${PUBLISHER}</arg>
<status status="PASS" start="2025-07-24T13:29:52.768599" elapsed="0.005058"/>
</kw>
<arg>network_udp</arg>
<arg>network</arg>
<status status="PASS" start="2025-07-24T13:29:21.544180" elapsed="31.229541"/>
</kw>
<tag>crash_receive_network_udp</tag>
<status status="PASS" start="2025-07-24T13:29:21.543803" elapsed="31.230012"/>
</test>
<test id="s1-s9-t4" name="Crash During Reception (Network TCP)" line="58">
<kw name="Run Network Crash Receive Test">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T13:29:52.775774" level="INFO">${IMAGE} = sub_send_crash_network_tcp</msg>
<var>${IMAGE}</var>
<arg>${BASE_IMAGE}_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T13:29:52.775632" elapsed="0.000163"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T13:29:52.775953" level="INFO">${TOPIC} = test_topic</msg>
<var>${TOPIC}</var>
<arg>test_topic</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T13:29:52.775869" elapsed="0.000101"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T13:29:52.776141" level="INFO">${SUB_OK} = sub_ok_network_tcp</msg>
<var>${SUB_OK}</var>
<arg>sub_ok_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T13:29:52.776036" elapsed="0.000122"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T13:29:52.776357" level="INFO">${SUB_CRASH} = sub_crash_network_tcp</msg>
<var>${SUB_CRASH}</var>
<arg>sub_crash_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T13:29:52.776222" elapsed="0.000153"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-07-24T13:29:52.776550" level="INFO">${PUBLISHER} = pub_network_tcp</msg>
<var>${PUBLISHER}</var>
<arg>pub_${layer_tag}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-07-24T13:29:52.776443" elapsed="0.000124"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[INFO] Starting crash test in NETWORK mode: ${layer_tag}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T13:29:52.776631" elapsed="0.000125"/>
</kw>
<kw name="Start Container" owner="DockerLibrary">
<arg>${SUB_OK}</arg>
<arg>${IMAGE}</arg>
<arg>test_subscriber</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${SUB_OK}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-24T13:29:52.776844" elapsed="0.130983"/>
</kw>
<kw name="Start Container" owner="DockerLibrary">
<arg>${SUB_CRASH}</arg>
<arg>${IMAGE}</arg>
<arg>crash_subscriber</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${SUB_CRASH}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-24T13:29:52.908042" elapsed="0.130409"/>
</kw>
<kw name="Start Container" owner="DockerLibrary">
<arg>${PUBLISHER}</arg>
<arg>${IMAGE}</arg>
<arg>large_publisher</arg>
<arg>${layer_tag}</arg>
<arg>${TOPIC}</arg>
<arg>${PUBLISHER}</arg>
<arg>network=${NETWORK}</arg>
<status status="PASS" start="2025-07-24T13:29:53.038730" elapsed="0.118583"/>
</kw>
<kw name="Wait For Container Exit" owner="DockerLibrary">
<arg>${SUB_OK}</arg>
<status status="PASS" start="2025-07-24T13:29:53.157490" elapsed="30.811773"/>
</kw>
<kw name="Wait For Container Exit" owner="DockerLibrary">
<arg>${SUB_CRASH}</arg>
<status status="PASS" start="2025-07-24T13:30:23.969466" elapsed="0.001512"/>
</kw>
<kw name="Wait For Container Exit" owner="DockerLibrary">
<arg>${PUBLISHER}</arg>
<status status="PASS" start="2025-07-24T13:30:23.971077" elapsed="0.001041"/>
</kw>
<kw name="Get Container Logs" owner="DockerLibrary">
<msg time="2025-07-24T13:30:23.974486" level="INFO">${log1} = [Entrypoint] Starting stable subscriber in mode network_tcp
[Test_Sub] Ready and waiting...
[Test_Sub] Received 52428800 bytes (message 1)
[Test_Sub] Received 52428800 bytes (message 2)
[Test_Sub] Rec...</msg>
<var>${log1}</var>
<arg>${SUB_OK}</arg>
<status status="PASS" start="2025-07-24T13:30:23.972205" elapsed="0.002308"/>
</kw>
<kw name="Get Container Logs" owner="DockerLibrary">
<msg time="2025-07-24T13:30:23.976651" level="INFO">${log2} = [Entrypoint] Starting crashing subscriber in mode network_tcp
[Crash_Sub] Listening to topic 'test_topic' in mode 'network_tcp'
[Crash_Sub] Received 52428800 bytes
[Crash_Sub] Simulating crash after 2...</msg>
<var>${log2}</var>
<arg>${SUB_CRASH}</arg>
<status status="PASS" start="2025-07-24T13:30:23.974597" elapsed="0.002080"/>
</kw>
<kw name="Get Container Logs" owner="DockerLibrary">
<msg time="2025-07-24T13:30:23.978877" level="INFO">${log3} = [Entrypoint] Starting large publisher in mode network_tcp
[Publisher] Prepared 50MB message.
[Publisher] Waiting for at least 2 subscriber(s) on topic: test_topic
1753363793909 ms | b5ce0d55cf24 | lar...</msg>
<var>${log3}</var>
<arg>${PUBLISHER}</arg>
<status status="PASS" start="2025-07-24T13:30:23.976761" elapsed="0.002141"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[LOG: SUBSCRIBER]\n${log1}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T13:30:23.978991" elapsed="0.000159"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[LOG: CRASH_SUBSCRIBER]\n${log2}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T13:30:23.979254" elapsed="0.000187"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n[LOG: PUBLISHER]\n${log3}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-07-24T13:30:23.979545" elapsed="0.000160"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-24T13:30:23.979945" level="INFO">
[LOG: SUBSCRIBER]
[Entrypoint] Starting stable subscriber in mode network_tcp
[Test_Sub] Ready and waiting...
[Test_Sub] Received 52428800 bytes (message 1)
[Test_Sub] Received 52428800 bytes (message 2)
[Test_Sub] Received 52428800 bytes (message 3)
1753363798633 ms | aa8372989fa2 | test_sub | 7 | error | CTCPReaderLayer - TCPPubSub (Error) -SubscriberSession 172.18.0.2:33942-&gt;b5ce0d55cf24:39807: Error reading header length: End of file
1753363798634 ms | aa8372989fa2 | test_sub | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:33956: Failed connecting to publisher b5ce0d55cf24:39807: Connection refused
1753363798635 ms | aa8372989fa2 | test_sub | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:33972: Failed connecting to publisher b5ce0d55cf24:39807: Connection refused
1753363798635 ms | aa8372989fa2 | test_sub | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:33984: Failed connecting to publisher b5ce0d55cf24:39807: Connection refused
1753363798636 ms | aa8372989fa2 | test_sub | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:34000: Failed connecting to publisher b5ce0d55cf24:39807: Connection refused
1753363798636 ms | aa8372989fa2 | test_sub | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -SubscriberSession 172.18.0.2:34008: Failed connecting to publisher b5ce0d55cf24:39807: Connection refused
[✓] Received 3 messages.
</msg>
<arg>\n[LOG: SUBSCRIBER]\n${log1}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-24T13:30:23.979807" elapsed="0.000201"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-24T13:30:23.980189" level="INFO">
[LOG: CRASH_SUBSCRIBER]
[Entrypoint] Starting crashing subscriber in mode network_tcp
[Crash_Sub] Listening to topic 'test_topic' in mode 'network_tcp'
[Crash_Sub] Received 52428800 bytes
[Crash_Sub] Simulating crash after 2 seconds during active reception
./entrypoint.sh: line 62:     7 Aborted                 (core dumped) ./crash_send_subscriber $ARGS $EXTRA
</msg>
<arg>\n[LOG: CRASH_SUBSCRIBER]\n${log2}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-24T13:30:23.980094" elapsed="0.000127"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-24T13:30:23.980419" level="INFO">
[LOG: PUBLISHER]
[Entrypoint] Starting large publisher in mode network_tcp
[Publisher] Prepared 50MB message.
[Publisher] Waiting for at least 2 subscriber(s) on topic: test_topic
1753363793909 ms | b5ce0d55cf24 | large_publisher | 7 | info | CTCPReaderLayer - TCPPubSub (Info) -Publisher :::0: Created publisher and waiting for clients.
1753363793910 ms | b5ce0d55cf24 | large_publisher | 7 | info | CTCPReaderLayer - TCPPubSub (Info) -Publisher :::39807: Subscriber ::ffff:172.18.0.2:33942 has connected.
1753363793910 ms | b5ce0d55cf24 | large_publisher | 7 | info | CTCPReaderLayer - TCPPubSub (Info) -Publisher :::39807: Subscriber ::ffff:172.18.0.3:54122 has connected.
[Publisher] Found 2 subscriber(s). Proceeding to send messages.
[Publisher] Subscriber detected. Starting to send.
[Publisher] Send result: ✓, size: 52428800 bytes
[Publisher] Send result: ✓, size: 52428800 bytes
1753363796614 ms | b5ce0d55cf24 | large_publisher | 7 | warning | CTCPReaderLayer - TCPPubSub (Warning) -PublisherSession ::ffff:172.18.0.4:39807-&gt;?: Failed sending data: Broken pipe
[Publisher] Send result: ✓, size: 52428800 bytes
[Publisher] Finished sending.
</msg>
<arg>\n[LOG: PUBLISHER]\n${log3}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-24T13:30:23.980314" elapsed="0.000143"/>
</kw>
<kw name="Wait For Container Exit" owner="DockerLibrary">
<msg time="2025-07-24T13:30:23.981447" level="INFO">${exit1} = 0</msg>
<var>${exit1}</var>
<arg>${SUB_OK}</arg>
<status status="PASS" start="2025-07-24T13:30:23.980525" elapsed="0.000945"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-07-24T13:30:23.981682" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${exit1}</arg>
<arg>0</arg>
<arg>Stable subscriber failed unexpectedly!</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-07-24T13:30:23.981552" elapsed="0.000173"/>
</kw>
<kw name="Log Test Summary" owner="DockerLibrary">
<arg>Network Crash Receive Test ${layer_tag}</arg>
<arg>${True}</arg>
<status status="PASS" start="2025-07-24T13:30:23.981800" elapsed="0.000141"/>
</kw>
<kw name="Stop Container" owner="DockerLibrary">
<arg>${SUB_OK}</arg>
<status status="PASS" start="2025-07-24T13:30:23.982035" elapsed="0.004741"/>
</kw>
<kw name="Stop Container" owner="DockerLibrary">
<arg>${SUB_CRASH}</arg>
<status status="PASS" start="2025-07-24T13:30:23.986857" elapsed="0.004948"/>
</kw>
<kw name="Stop Container" owner="DockerLibrary">
<arg>${PUBLISHER}</arg>
<status status="PASS" start="2025-07-24T13:30:23.991889" elapsed="0.005038"/>
</kw>
<arg>network_tcp</arg>
<arg>network</arg>
<status status="PASS" start="2025-07-24T13:29:52.775412" elapsed="31.221611"/>
</kw>
<tag>crash_receive_network_tcp</tag>
<status status="PASS" start="2025-07-24T13:29:52.774974" elapsed="31.222146"/>
</test>
<status status="PASS" start="2025-07-24T13:27:58.916290" elapsed="145.081657"/>
</suite>
<status status="FAIL" start="2025-07-24T13:17:12.088032" elapsed="791.910681"/>
</suite>
<statistics>
<total>
<stat pass="26" fail="1" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">basic_pub_sub_local_shm</stat>
<stat pass="1" fail="0" skip="0">basic_pub_sub_local_tcp</stat>
<stat pass="1" fail="0" skip="0">basic_pub_sub_local_udp</stat>
<stat pass="1" fail="0" skip="0">basic_pub_sub_network_tcp</stat>
<stat pass="1" fail="0" skip="0">basic_pub_sub_network_udp</stat>
<stat pass="1" fail="0" skip="0">crash_receive_local_shm</stat>
<stat pass="1" fail="0" skip="0">crash_receive_local_tcp</stat>
<stat pass="1" fail="0" skip="0">crash_receive_network_tcp</stat>
<stat pass="1" fail="0" skip="0">crash_receive_network_udp</stat>
<stat pass="1" fail="0" skip="0">multi_pub_sub_local_shm</stat>
<stat pass="0" fail="1" skip="0">multi_pub_sub_local_tcp</stat>
<stat pass="1" fail="0" skip="0">multi_pub_sub_local_udp</stat>
<stat pass="1" fail="0" skip="0">multi_pub_sub_network_tcp</stat>
<stat pass="1" fail="0" skip="0">multi_pub_sub_network_udp</stat>
<stat pass="1" fail="0" skip="0">network_crash_test</stat>
<stat pass="1" fail="0" skip="0">pub_crash_local_shm</stat>
<stat pass="2" fail="0" skip="0">pub_crash_network_tcp</stat>
<stat pass="1" fail="0" skip="0">pub_crash_network_udp</stat>
<stat pass="1" fail="0" skip="0">rpc_n_to_n_test</stat>
<stat pass="2" fail="0" skip="0">rpc_reconnect</stat>
<stat pass="1" fail="0" skip="0">rpc_server_client_ping_test</stat>
<stat pass="1" fail="0" skip="0">sub_crash_local_shm</stat>
<stat pass="1" fail="0" skip="0">sub_crash_local_tcp</stat>
<stat pass="1" fail="0" skip="0">sub_crash_local_udp</stat>
<stat pass="1" fail="0" skip="0">sub_crash_network_udp</stat>
</tag>
<suite>
<stat name="Basic Pub Sub &amp; Multi Pub Sub &amp; Network Crash &amp; Pub Crash &amp; Rpc N To N Test &amp; Rpc Ping Test &amp; Rpc Reconnect Test &amp; Sub Crash &amp; Sub Send Crash" id="s1" pass="26" fail="1" skip="0">Basic Pub Sub &amp; Multi Pub Sub &amp; Network Crash &amp; Pub Crash &amp; Rpc N To N Test &amp; Rpc Ping Test &amp; Rpc Reconnect Test &amp; Sub Crash &amp; Sub Send Crash</stat>
<stat name="Basic Pub Sub" id="s1-s1" pass="5" fail="0" skip="0">Basic Pub Sub &amp; Multi Pub Sub &amp; Network Crash &amp; Pub Crash &amp; Rpc N To N Test &amp; Rpc Ping Test &amp; Rpc Reconnect Test &amp; Sub Crash &amp; Sub Send Crash.Basic Pub Sub</stat>
<stat name="Multi Pub Sub" id="s1-s2" pass="4" fail="1" skip="0">Basic Pub Sub &amp; Multi Pub Sub &amp; Network Crash &amp; Pub Crash &amp; Rpc N To N Test &amp; Rpc Ping Test &amp; Rpc Reconnect Test &amp; Sub Crash &amp; Sub Send Crash.Multi Pub Sub</stat>
<stat name="Network Crash" id="s1-s3" pass="1" fail="0" skip="0">Basic Pub Sub &amp; Multi Pub Sub &amp; Network Crash &amp; Pub Crash &amp; Rpc N To N Test &amp; Rpc Ping Test &amp; Rpc Reconnect Test &amp; Sub Crash &amp; Sub Send Crash.Network Crash</stat>
<stat name="Pub Crash" id="s1-s4" pass="3" fail="0" skip="0">Basic Pub Sub &amp; Multi Pub Sub &amp; Network Crash &amp; Pub Crash &amp; Rpc N To N Test &amp; Rpc Ping Test &amp; Rpc Reconnect Test &amp; Sub Crash &amp; Sub Send Crash.Pub Crash</stat>
<stat name="Rpc N To N Test" id="s1-s5" pass="1" fail="0" skip="0">Basic Pub Sub &amp; Multi Pub Sub &amp; Network Crash &amp; Pub Crash &amp; Rpc N To N Test &amp; Rpc Ping Test &amp; Rpc Reconnect Test &amp; Sub Crash &amp; Sub Send Crash.Rpc N To N Test</stat>
<stat name="Rpc Ping Test" id="s1-s6" pass="1" fail="0" skip="0">Basic Pub Sub &amp; Multi Pub Sub &amp; Network Crash &amp; Pub Crash &amp; Rpc N To N Test &amp; Rpc Ping Test &amp; Rpc Reconnect Test &amp; Sub Crash &amp; Sub Send Crash.Rpc Ping Test</stat>
<stat name="Rpc Reconnect Test" id="s1-s7" pass="2" fail="0" skip="0">Basic Pub Sub &amp; Multi Pub Sub &amp; Network Crash &amp; Pub Crash &amp; Rpc N To N Test &amp; Rpc Ping Test &amp; Rpc Reconnect Test &amp; Sub Crash &amp; Sub Send Crash.Rpc Reconnect Test</stat>
<stat name="Sub Crash" id="s1-s8" pass="5" fail="0" skip="0">Basic Pub Sub &amp; Multi Pub Sub &amp; Network Crash &amp; Pub Crash &amp; Rpc N To N Test &amp; Rpc Ping Test &amp; Rpc Reconnect Test &amp; Sub Crash &amp; Sub Send Crash.Sub Crash</stat>
<stat name="Sub Send Crash" id="s1-s9" pass="4" fail="0" skip="0">Basic Pub Sub &amp; Multi Pub Sub &amp; Network Crash &amp; Pub Crash &amp; Rpc N To N Test &amp; Rpc Ping Test &amp; Rpc Reconnect Test &amp; Sub Crash &amp; Sub Send Crash.Sub Send Crash</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
